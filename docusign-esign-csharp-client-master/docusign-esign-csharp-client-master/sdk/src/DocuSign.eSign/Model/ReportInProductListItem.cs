/* 
 * DocuSign REST API
 *
 * The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.
 *
 * OpenAPI spec version: v2.1
 * Contact: devcenter@docusign.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = DocuSign.eSign.Client.SwaggerDateConverter;

namespace DocuSign.eSign.Model
{
    /// <summary>
    /// ReportInProductListItem
    /// </summary>
    [DataContract]
    public partial class ReportInProductListItem :  IEquatable<ReportInProductListItem>, IValidatableObject
    {
        public ReportInProductListItem()
        {
            // Empty Constructor
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ReportInProductListItem" /> class.
        /// </summary>
        /// <param name="GetUri">GetUri.</param>
        /// <param name="LastScheduledExecutionDate">LastScheduledExecutionDate.</param>
        /// <param name="LastScheduledExecutionSuccessDate">LastScheduledExecutionSuccessDate.</param>
        /// <param name="ReportCustomizedId">ReportCustomizedId.</param>
        /// <param name="ReportDescription">ReportDescription.</param>
        /// <param name="ReportId">ReportId.</param>
        /// <param name="ReportName">ReportName.</param>
        /// <param name="ReportType">ReportType.</param>
        /// <param name="RunUri">RunUri.</param>
        /// <param name="SaveUri">SaveUri.</param>
        /// <param name="ScheduleCreateDate">ScheduleCreateDate.</param>
        /// <param name="ScheduleEndDate">ScheduleEndDate.</param>
        /// <param name="ScheduleId">ScheduleId.</param>
        /// <param name="ScheduleRenewDurationDays">ScheduleRenewDurationDays.</param>
        public ReportInProductListItem(string GetUri = default(string), string LastScheduledExecutionDate = default(string), string LastScheduledExecutionSuccessDate = default(string), string ReportCustomizedId = default(string), string ReportDescription = default(string), string ReportId = default(string), string ReportName = default(string), string ReportType = default(string), string RunUri = default(string), string SaveUri = default(string), string ScheduleCreateDate = default(string), string ScheduleEndDate = default(string), string ScheduleId = default(string), string ScheduleRenewDurationDays = default(string))
        {
            this.GetUri = GetUri;
            this.LastScheduledExecutionDate = LastScheduledExecutionDate;
            this.LastScheduledExecutionSuccessDate = LastScheduledExecutionSuccessDate;
            this.ReportCustomizedId = ReportCustomizedId;
            this.ReportDescription = ReportDescription;
            this.ReportId = ReportId;
            this.ReportName = ReportName;
            this.ReportType = ReportType;
            this.RunUri = RunUri;
            this.SaveUri = SaveUri;
            this.ScheduleCreateDate = ScheduleCreateDate;
            this.ScheduleEndDate = ScheduleEndDate;
            this.ScheduleId = ScheduleId;
            this.ScheduleRenewDurationDays = ScheduleRenewDurationDays;
        }
        
        /// <summary>
        /// Gets or Sets GetUri
        /// </summary>
        [DataMember(Name="getUri", EmitDefaultValue=false)]
        public string GetUri { get; set; }
        /// <summary>
        /// Gets or Sets LastScheduledExecutionDate
        /// </summary>
        [DataMember(Name="lastScheduledExecutionDate", EmitDefaultValue=false)]
        public string LastScheduledExecutionDate { get; set; }
        /// <summary>
        /// Gets or Sets LastScheduledExecutionSuccessDate
        /// </summary>
        [DataMember(Name="lastScheduledExecutionSuccessDate", EmitDefaultValue=false)]
        public string LastScheduledExecutionSuccessDate { get; set; }
        /// <summary>
        /// Gets or Sets ReportCustomizedId
        /// </summary>
        [DataMember(Name="reportCustomizedId", EmitDefaultValue=false)]
        public string ReportCustomizedId { get; set; }
        /// <summary>
        /// Gets or Sets ReportDescription
        /// </summary>
        [DataMember(Name="reportDescription", EmitDefaultValue=false)]
        public string ReportDescription { get; set; }
        /// <summary>
        /// Gets or Sets ReportId
        /// </summary>
        [DataMember(Name="reportId", EmitDefaultValue=false)]
        public string ReportId { get; set; }
        /// <summary>
        /// Gets or Sets ReportName
        /// </summary>
        [DataMember(Name="reportName", EmitDefaultValue=false)]
        public string ReportName { get; set; }
        /// <summary>
        /// Gets or Sets ReportType
        /// </summary>
        [DataMember(Name="reportType", EmitDefaultValue=false)]
        public string ReportType { get; set; }
        /// <summary>
        /// Gets or Sets RunUri
        /// </summary>
        [DataMember(Name="runUri", EmitDefaultValue=false)]
        public string RunUri { get; set; }
        /// <summary>
        /// Gets or Sets SaveUri
        /// </summary>
        [DataMember(Name="saveUri", EmitDefaultValue=false)]
        public string SaveUri { get; set; }
        /// <summary>
        /// Gets or Sets ScheduleCreateDate
        /// </summary>
        [DataMember(Name="scheduleCreateDate", EmitDefaultValue=false)]
        public string ScheduleCreateDate { get; set; }
        /// <summary>
        /// Gets or Sets ScheduleEndDate
        /// </summary>
        [DataMember(Name="scheduleEndDate", EmitDefaultValue=false)]
        public string ScheduleEndDate { get; set; }
        /// <summary>
        /// Gets or Sets ScheduleId
        /// </summary>
        [DataMember(Name="scheduleId", EmitDefaultValue=false)]
        public string ScheduleId { get; set; }
        /// <summary>
        /// Gets or Sets ScheduleRenewDurationDays
        /// </summary>
        [DataMember(Name="scheduleRenewDurationDays", EmitDefaultValue=false)]
        public string ScheduleRenewDurationDays { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ReportInProductListItem {\n");
            sb.Append("  GetUri: ").Append(GetUri).Append("\n");
            sb.Append("  LastScheduledExecutionDate: ").Append(LastScheduledExecutionDate).Append("\n");
            sb.Append("  LastScheduledExecutionSuccessDate: ").Append(LastScheduledExecutionSuccessDate).Append("\n");
            sb.Append("  ReportCustomizedId: ").Append(ReportCustomizedId).Append("\n");
            sb.Append("  ReportDescription: ").Append(ReportDescription).Append("\n");
            sb.Append("  ReportId: ").Append(ReportId).Append("\n");
            sb.Append("  ReportName: ").Append(ReportName).Append("\n");
            sb.Append("  ReportType: ").Append(ReportType).Append("\n");
            sb.Append("  RunUri: ").Append(RunUri).Append("\n");
            sb.Append("  SaveUri: ").Append(SaveUri).Append("\n");
            sb.Append("  ScheduleCreateDate: ").Append(ScheduleCreateDate).Append("\n");
            sb.Append("  ScheduleEndDate: ").Append(ScheduleEndDate).Append("\n");
            sb.Append("  ScheduleId: ").Append(ScheduleId).Append("\n");
            sb.Append("  ScheduleRenewDurationDays: ").Append(ScheduleRenewDurationDays).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as ReportInProductListItem);
        }

        /// <summary>
        /// Returns true if ReportInProductListItem instances are equal
        /// </summary>
        /// <param name="other">Instance of ReportInProductListItem to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ReportInProductListItem other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.GetUri == other.GetUri ||
                    this.GetUri != null &&
                    this.GetUri.Equals(other.GetUri)
                ) && 
                (
                    this.LastScheduledExecutionDate == other.LastScheduledExecutionDate ||
                    this.LastScheduledExecutionDate != null &&
                    this.LastScheduledExecutionDate.Equals(other.LastScheduledExecutionDate)
                ) && 
                (
                    this.LastScheduledExecutionSuccessDate == other.LastScheduledExecutionSuccessDate ||
                    this.LastScheduledExecutionSuccessDate != null &&
                    this.LastScheduledExecutionSuccessDate.Equals(other.LastScheduledExecutionSuccessDate)
                ) && 
                (
                    this.ReportCustomizedId == other.ReportCustomizedId ||
                    this.ReportCustomizedId != null &&
                    this.ReportCustomizedId.Equals(other.ReportCustomizedId)
                ) && 
                (
                    this.ReportDescription == other.ReportDescription ||
                    this.ReportDescription != null &&
                    this.ReportDescription.Equals(other.ReportDescription)
                ) && 
                (
                    this.ReportId == other.ReportId ||
                    this.ReportId != null &&
                    this.ReportId.Equals(other.ReportId)
                ) && 
                (
                    this.ReportName == other.ReportName ||
                    this.ReportName != null &&
                    this.ReportName.Equals(other.ReportName)
                ) && 
                (
                    this.ReportType == other.ReportType ||
                    this.ReportType != null &&
                    this.ReportType.Equals(other.ReportType)
                ) && 
                (
                    this.RunUri == other.RunUri ||
                    this.RunUri != null &&
                    this.RunUri.Equals(other.RunUri)
                ) && 
                (
                    this.SaveUri == other.SaveUri ||
                    this.SaveUri != null &&
                    this.SaveUri.Equals(other.SaveUri)
                ) && 
                (
                    this.ScheduleCreateDate == other.ScheduleCreateDate ||
                    this.ScheduleCreateDate != null &&
                    this.ScheduleCreateDate.Equals(other.ScheduleCreateDate)
                ) && 
                (
                    this.ScheduleEndDate == other.ScheduleEndDate ||
                    this.ScheduleEndDate != null &&
                    this.ScheduleEndDate.Equals(other.ScheduleEndDate)
                ) && 
                (
                    this.ScheduleId == other.ScheduleId ||
                    this.ScheduleId != null &&
                    this.ScheduleId.Equals(other.ScheduleId)
                ) && 
                (
                    this.ScheduleRenewDurationDays == other.ScheduleRenewDurationDays ||
                    this.ScheduleRenewDurationDays != null &&
                    this.ScheduleRenewDurationDays.Equals(other.ScheduleRenewDurationDays)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.GetUri != null)
                    hash = hash * 59 + this.GetUri.GetHashCode();
                if (this.LastScheduledExecutionDate != null)
                    hash = hash * 59 + this.LastScheduledExecutionDate.GetHashCode();
                if (this.LastScheduledExecutionSuccessDate != null)
                    hash = hash * 59 + this.LastScheduledExecutionSuccessDate.GetHashCode();
                if (this.ReportCustomizedId != null)
                    hash = hash * 59 + this.ReportCustomizedId.GetHashCode();
                if (this.ReportDescription != null)
                    hash = hash * 59 + this.ReportDescription.GetHashCode();
                if (this.ReportId != null)
                    hash = hash * 59 + this.ReportId.GetHashCode();
                if (this.ReportName != null)
                    hash = hash * 59 + this.ReportName.GetHashCode();
                if (this.ReportType != null)
                    hash = hash * 59 + this.ReportType.GetHashCode();
                if (this.RunUri != null)
                    hash = hash * 59 + this.RunUri.GetHashCode();
                if (this.SaveUri != null)
                    hash = hash * 59 + this.SaveUri.GetHashCode();
                if (this.ScheduleCreateDate != null)
                    hash = hash * 59 + this.ScheduleCreateDate.GetHashCode();
                if (this.ScheduleEndDate != null)
                    hash = hash * 59 + this.ScheduleEndDate.GetHashCode();
                if (this.ScheduleId != null)
                    hash = hash * 59 + this.ScheduleId.GetHashCode();
                if (this.ScheduleRenewDurationDays != null)
                    hash = hash * 59 + this.ScheduleRenewDurationDays.GetHashCode();
                return hash;
            }
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        { 
            yield break;
        }
    }
}
