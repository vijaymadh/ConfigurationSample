/* 
 * DocuSign REST API
 *
 * The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.
 *
 * OpenAPI spec version: v2.1
 * Contact: devcenter@docusign.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = DocuSign.eSign.Client.SwaggerDateConverter;

namespace DocuSign.eSign.Model
{
    /// <summary>
    /// ReportInProductRunResponseRowFields
    /// </summary>
    [DataContract]
    public partial class ReportInProductRunResponseRowFields :  IEquatable<ReportInProductRunResponseRowFields>, IValidatableObject
    {
        public ReportInProductRunResponseRowFields()
        {
            // Empty Constructor
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ReportInProductRunResponseRowFields" /> class.
        /// </summary>
        /// <param name="AccessCodeRequired">AccessCodeRequired.</param>
        /// <param name="AccessCodesAttempted">AccessCodesAttempted.</param>
        /// <param name="AccessCodesFailed">AccessCodesFailed.</param>
        /// <param name="AccountId">The account ID associated with the envelope..</param>
        /// <param name="AuthenticationCategory">AuthenticationCategory.</param>
        /// <param name="AuthenticationSuccess">AuthenticationSuccess.</param>
        /// <param name="AuthenticationType">AuthenticationType.</param>
        /// <param name="AverageTimeToCompleteSeconds">AverageTimeToCompleteSeconds.</param>
        /// <param name="AvgCompleteSeconds">AvgCompleteSeconds.</param>
        /// <param name="CaptureMethod">CaptureMethod.</param>
        /// <param name="Completed">Completed.</param>
        /// <param name="CompletedTs">CompletedTs.</param>
        /// <param name="CreatedDate">CreatedDate.</param>
        /// <param name="CreatedOn">CreatedOn.</param>
        /// <param name="Creator">Creator.</param>
        /// <param name="CustomField">CustomField.</param>
        /// <param name="DeclinedDate">DeclinedDate.</param>
        /// <param name="DeclinedReason">The reason the recipient declined the document..</param>
        /// <param name="DeliveredDate">DeliveredDate.</param>
        /// <param name="EnvelopeCount">EnvelopeCount.</param>
        /// <param name="EnvelopeCreator">EnvelopeCreator.</param>
        /// <param name="EnvelopeId">The envelope ID of the envelope status that failed to post..</param>
        /// <param name="EnvelopeInitialSendTs">EnvelopeInitialSendTs.</param>
        /// <param name="EnvelopesBilled">EnvelopesBilled.</param>
        /// <param name="EnvelopesCompleted">EnvelopesCompleted.</param>
        /// <param name="EnvelopesCompletedCount">EnvelopesCompletedCount.</param>
        /// <param name="EnvelopesDeclined">EnvelopesDeclined.</param>
        /// <param name="EnvelopesSent">EnvelopesSent.</param>
        /// <param name="EnvelopesSentCount">EnvelopesSentCount.</param>
        /// <param name="EnvelopesVoided">EnvelopesVoided.</param>
        /// <param name="EnvelopeVoidedReason">EnvelopeVoidedReason.</param>
        /// <param name="EodDocumentDescription">EodDocumentDescription.</param>
        /// <param name="EodDocumentName">EodDocumentName.</param>
        /// <param name="EodDocumentProfileId">EodDocumentProfileId.</param>
        /// <param name="EodTransactionId">EodTransactionId.</param>
        /// <param name="EodTransactionName">EodTransactionName.</param>
        /// <param name="EventDate">EventDate.</param>
        /// <param name="ExpirationDate">ExpirationDate.</param>
        /// <param name="ExpiredTs">ExpiredTs.</param>
        /// <param name="FailureReason">FailureReason.</param>
        /// <param name="Failures">Failures.</param>
        /// <param name="FailureVendorCode">FailureVendorCode.</param>
        /// <param name="FailureVendorReason">FailureVendorReason.</param>
        /// <param name="FirstSendTs">FirstSendTs.</param>
        /// <param name="GroupId">GroupId.</param>
        /// <param name="GroupName">The name of the group..</param>
        /// <param name="HoursToCompleteEnd">HoursToCompleteEnd.</param>
        /// <param name="HoursToCompleteStart">HoursToCompleteStart.</param>
        /// <param name="IdChecksAttempted">IdChecksAttempted.</param>
        /// <param name="IdChecksFailed">IdChecksFailed.</param>
        /// <param name="IdCountry">IdCountry.</param>
        /// <param name="IdMethod">IdMethod.</param>
        /// <param name="InitialSendTs">InitialSendTs.</param>
        /// <param name="IpAddress">IpAddress.</param>
        /// <param name="LastActivity">LastActivity.</param>
        /// <param name="LastActivityDate">LastActivityDate.</param>
        /// <param name="LastModified">LastModified.</param>
        /// <param name="LastSentDate">LastSentDate.</param>
        /// <param name="LastUsed">LastUsed.</param>
        /// <param name="MetadataRemoved">MetadataRemoved.</param>
        /// <param name="NotSigned">NotSigned.</param>
        /// <param name="NumberOfAuthenticatedRecipients">NumberOfAuthenticatedRecipients.</param>
        /// <param name="NumberOfCompletedSignatures">NumberOfCompletedSignatures.</param>
        /// <param name="NumberOfDocuments">NumberOfDocuments.</param>
        /// <param name="NumberOfPages">NumberOfPages.</param>
        /// <param name="NumberOfRecipients">NumberOfRecipients.</param>
        /// <param name="NumberOfSends">NumberOfSends.</param>
        /// <param name="NumberOfSigners">NumberOfSigners.</param>
        /// <param name="NumberOfTotalDocuments">NumberOfTotalDocuments.</param>
        /// <param name="NumberOfTotalPages">NumberOfTotalPages.</param>
        /// <param name="NumberOfTotalSigners">NumberOfTotalSigners.</param>
        /// <param name="NumberOfUniqueSenders">NumberOfUniqueSenders.</param>
        /// <param name="NumberTotalRecipients">NumberTotalRecipients.</param>
        /// <param name="OtherRecipientsList">OtherRecipientsList.</param>
        /// <param name="Owner">Owner.</param>
        /// <param name="OwnerMail">OwnerMail.</param>
        /// <param name="PeriodEnd">PeriodEnd.</param>
        /// <param name="PeriodStart">PeriodStart.</param>
        /// <param name="PhoneCallsAttempted">PhoneCallsAttempted.</param>
        /// <param name="PhoneCallsFailed">PhoneCallsFailed.</param>
        /// <param name="PiiRedacted">PiiRedacted.</param>
        /// <param name="PurgeDate">PurgeDate.</param>
        /// <param name="ReasonForDeclining">ReasonForDeclining.</param>
        /// <param name="ReasonForVoiding">ReasonForVoiding.</param>
        /// <param name="ReassignReason">ReassignReason.</param>
        /// <param name="Received">Received.</param>
        /// <param name="Recipient">Recipient.</param>
        /// <param name="RecipientAction">RecipientAction.</param>
        /// <param name="RecipientCompanyName">RecipientCompanyName.</param>
        /// <param name="RecipientCountry">RecipientCountry.</param>
        /// <param name="RecipientEmail">RecipientEmail.</param>
        /// <param name="RecipientId">Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document..</param>
        /// <param name="RecipientName">RecipientName.</param>
        /// <param name="RecipientRoleName">RecipientRoleName.</param>
        /// <param name="RecipientTemplateRoleName">RecipientTemplateRoleName.</param>
        /// <param name="RecipientTitle">RecipientTitle.</param>
        /// <param name="RecipientType">RecipientType.</param>
        /// <param name="RecipientUserId">RecipientUserId.</param>
        /// <param name="RemainingSignatures">RemainingSignatures.</param>
        /// <param name="RoutingOrder">Specifies the routing order of the recipient in the envelope. .</param>
        /// <param name="SenderAccountId">SenderAccountId.</param>
        /// <param name="SenderCompanyName">SenderCompanyName.</param>
        /// <param name="SenderCountry">SenderCountry.</param>
        /// <param name="SenderEmail">SenderEmail.</param>
        /// <param name="SenderIPAddress">SenderIPAddress.</param>
        /// <param name="SenderJobTitle">SenderJobTitle.</param>
        /// <param name="SenderName">SenderName.</param>
        /// <param name="SenderUserId">SenderUserId.</param>
        /// <param name="SignatureType">SignatureType.</param>
        /// <param name="SignatureTypeValue">SignatureTypeValue.</param>
        /// <param name="SignDate">SignDate.</param>
        /// <param name="Signed">Signed.</param>
        /// <param name="SignedDate">SignedDate.</param>
        /// <param name="SignedOnMobile">SignedOnMobile.</param>
        /// <param name="SignedOnPaper">SignedOnPaper.</param>
        /// <param name="SignerList">SignerList.</param>
        /// <param name="Status">Indicates the envelope status. Valid values are:  * sent - The envelope is sent to the recipients.  * created - The envelope is saved as a draft and can be modified and sent later..</param>
        /// <param name="StatusChangedDate">StatusChangedDate.</param>
        /// <param name="StatusChangedTs">StatusChangedTs.</param>
        /// <param name="StatusComment">StatusComment.</param>
        /// <param name="Subject">Subject.</param>
        /// <param name="Successes">Successes.</param>
        /// <param name="TemplateId">The unique identifier of the template. If this is not provided, DocuSign will generate a value. .</param>
        /// <param name="TemplateName">TemplateName.</param>
        /// <param name="TemplatesCreated">TemplatesCreated.</param>
        /// <param name="TemplatesCreatedCount">TemplatesCreatedCount.</param>
        /// <param name="TerminalStatusDate">TerminalStatusDate.</param>
        /// <param name="TimeToCompleteSeconds">TimeToCompleteSeconds.</param>
        /// <param name="TimeToDeliver">TimeToDeliver.</param>
        /// <param name="TotalDocuments">TotalDocuments.</param>
        /// <param name="TotalEnvelopes">TotalEnvelopes.</param>
        /// <param name="TotalPages">TotalPages.</param>
        /// <param name="TotalRecipients">TotalRecipients.</param>
        /// <param name="TotalSigners">TotalSigners.</param>
        /// <param name="UniqueSenders">UniqueSenders.</param>
        /// <param name="UserAccountEmail">UserAccountEmail.</param>
        /// <param name="UserAccountName">UserAccountName.</param>
        /// <param name="UserAccountStatus">UserAccountStatus.</param>
        /// <param name="UserCount">UserCount.</param>
        /// <param name="UserId">UserId.</param>
        /// <param name="VerificationStatus">VerificationStatus.</param>
        /// <param name="VerificationType">VerificationType.</param>
        /// <param name="ViewDate">ViewDate.</param>
        /// <param name="VoidedTs">VoidedTs.</param>
        public ReportInProductRunResponseRowFields(string AccessCodeRequired = default(string), string AccessCodesAttempted = default(string), string AccessCodesFailed = default(string), string AccountId = default(string), string AuthenticationCategory = default(string), string AuthenticationSuccess = default(string), string AuthenticationType = default(string), string AverageTimeToCompleteSeconds = default(string), string AvgCompleteSeconds = default(string), string CaptureMethod = default(string), string Completed = default(string), string CompletedTs = default(string), string CreatedDate = default(string), string CreatedOn = default(string), string Creator = default(string), string CustomField = default(string), string DeclinedDate = default(string), string DeclinedReason = default(string), string DeliveredDate = default(string), string EnvelopeCount = default(string), string EnvelopeCreator = default(string), string EnvelopeId = default(string), string EnvelopeInitialSendTs = default(string), string EnvelopesBilled = default(string), string EnvelopesCompleted = default(string), string EnvelopesCompletedCount = default(string), string EnvelopesDeclined = default(string), string EnvelopesSent = default(string), string EnvelopesSentCount = default(string), string EnvelopesVoided = default(string), string EnvelopeVoidedReason = default(string), string EodDocumentDescription = default(string), string EodDocumentName = default(string), string EodDocumentProfileId = default(string), string EodTransactionId = default(string), string EodTransactionName = default(string), string EventDate = default(string), string ExpirationDate = default(string), string ExpiredTs = default(string), string FailureReason = default(string), string Failures = default(string), string FailureVendorCode = default(string), string FailureVendorReason = default(string), string FirstSendTs = default(string), string GroupId = default(string), string GroupName = default(string), string HoursToCompleteEnd = default(string), string HoursToCompleteStart = default(string), string IdChecksAttempted = default(string), string IdChecksFailed = default(string), string IdCountry = default(string), string IdMethod = default(string), string InitialSendTs = default(string), string IpAddress = default(string), string LastActivity = default(string), string LastActivityDate = default(string), string LastModified = default(string), string LastSentDate = default(string), string LastUsed = default(string), string MetadataRemoved = default(string), string NotSigned = default(string), string NumberOfAuthenticatedRecipients = default(string), string NumberOfCompletedSignatures = default(string), string NumberOfDocuments = default(string), string NumberOfPages = default(string), string NumberOfRecipients = default(string), string NumberOfSends = default(string), string NumberOfSigners = default(string), string NumberOfTotalDocuments = default(string), string NumberOfTotalPages = default(string), string NumberOfTotalSigners = default(string), string NumberOfUniqueSenders = default(string), string NumberTotalRecipients = default(string), string OtherRecipientsList = default(string), string Owner = default(string), string OwnerMail = default(string), string PeriodEnd = default(string), string PeriodStart = default(string), string PhoneCallsAttempted = default(string), string PhoneCallsFailed = default(string), string PiiRedacted = default(string), string PurgeDate = default(string), string ReasonForDeclining = default(string), string ReasonForVoiding = default(string), string ReassignReason = default(string), string Received = default(string), string Recipient = default(string), string RecipientAction = default(string), string RecipientCompanyName = default(string), string RecipientCountry = default(string), string RecipientEmail = default(string), string RecipientId = default(string), string RecipientName = default(string), string RecipientRoleName = default(string), string RecipientTemplateRoleName = default(string), string RecipientTitle = default(string), string RecipientType = default(string), string RecipientUserId = default(string), string RemainingSignatures = default(string), string RoutingOrder = default(string), string SenderAccountId = default(string), string SenderCompanyName = default(string), string SenderCountry = default(string), string SenderEmail = default(string), string SenderIPAddress = default(string), string SenderJobTitle = default(string), string SenderName = default(string), string SenderUserId = default(string), string SignatureType = default(string), string SignatureTypeValue = default(string), string SignDate = default(string), string Signed = default(string), string SignedDate = default(string), string SignedOnMobile = default(string), string SignedOnPaper = default(string), string SignerList = default(string), string Status = default(string), string StatusChangedDate = default(string), string StatusChangedTs = default(string), string StatusComment = default(string), string Subject = default(string), string Successes = default(string), string TemplateId = default(string), string TemplateName = default(string), string TemplatesCreated = default(string), string TemplatesCreatedCount = default(string), string TerminalStatusDate = default(string), string TimeToCompleteSeconds = default(string), string TimeToDeliver = default(string), string TotalDocuments = default(string), string TotalEnvelopes = default(string), string TotalPages = default(string), string TotalRecipients = default(string), string TotalSigners = default(string), string UniqueSenders = default(string), string UserAccountEmail = default(string), string UserAccountName = default(string), string UserAccountStatus = default(string), string UserCount = default(string), string UserId = default(string), string VerificationStatus = default(string), string VerificationType = default(string), string ViewDate = default(string), string VoidedTs = default(string))
        {
            this.AccessCodeRequired = AccessCodeRequired;
            this.AccessCodesAttempted = AccessCodesAttempted;
            this.AccessCodesFailed = AccessCodesFailed;
            this.AccountId = AccountId;
            this.AuthenticationCategory = AuthenticationCategory;
            this.AuthenticationSuccess = AuthenticationSuccess;
            this.AuthenticationType = AuthenticationType;
            this.AverageTimeToCompleteSeconds = AverageTimeToCompleteSeconds;
            this.AvgCompleteSeconds = AvgCompleteSeconds;
            this.CaptureMethod = CaptureMethod;
            this.Completed = Completed;
            this.CompletedTs = CompletedTs;
            this.CreatedDate = CreatedDate;
            this.CreatedOn = CreatedOn;
            this.Creator = Creator;
            this.CustomField = CustomField;
            this.DeclinedDate = DeclinedDate;
            this.DeclinedReason = DeclinedReason;
            this.DeliveredDate = DeliveredDate;
            this.EnvelopeCount = EnvelopeCount;
            this.EnvelopeCreator = EnvelopeCreator;
            this.EnvelopeId = EnvelopeId;
            this.EnvelopeInitialSendTs = EnvelopeInitialSendTs;
            this.EnvelopesBilled = EnvelopesBilled;
            this.EnvelopesCompleted = EnvelopesCompleted;
            this.EnvelopesCompletedCount = EnvelopesCompletedCount;
            this.EnvelopesDeclined = EnvelopesDeclined;
            this.EnvelopesSent = EnvelopesSent;
            this.EnvelopesSentCount = EnvelopesSentCount;
            this.EnvelopesVoided = EnvelopesVoided;
            this.EnvelopeVoidedReason = EnvelopeVoidedReason;
            this.EodDocumentDescription = EodDocumentDescription;
            this.EodDocumentName = EodDocumentName;
            this.EodDocumentProfileId = EodDocumentProfileId;
            this.EodTransactionId = EodTransactionId;
            this.EodTransactionName = EodTransactionName;
            this.EventDate = EventDate;
            this.ExpirationDate = ExpirationDate;
            this.ExpiredTs = ExpiredTs;
            this.FailureReason = FailureReason;
            this.Failures = Failures;
            this.FailureVendorCode = FailureVendorCode;
            this.FailureVendorReason = FailureVendorReason;
            this.FirstSendTs = FirstSendTs;
            this.GroupId = GroupId;
            this.GroupName = GroupName;
            this.HoursToCompleteEnd = HoursToCompleteEnd;
            this.HoursToCompleteStart = HoursToCompleteStart;
            this.IdChecksAttempted = IdChecksAttempted;
            this.IdChecksFailed = IdChecksFailed;
            this.IdCountry = IdCountry;
            this.IdMethod = IdMethod;
            this.InitialSendTs = InitialSendTs;
            this.IpAddress = IpAddress;
            this.LastActivity = LastActivity;
            this.LastActivityDate = LastActivityDate;
            this.LastModified = LastModified;
            this.LastSentDate = LastSentDate;
            this.LastUsed = LastUsed;
            this.MetadataRemoved = MetadataRemoved;
            this.NotSigned = NotSigned;
            this.NumberOfAuthenticatedRecipients = NumberOfAuthenticatedRecipients;
            this.NumberOfCompletedSignatures = NumberOfCompletedSignatures;
            this.NumberOfDocuments = NumberOfDocuments;
            this.NumberOfPages = NumberOfPages;
            this.NumberOfRecipients = NumberOfRecipients;
            this.NumberOfSends = NumberOfSends;
            this.NumberOfSigners = NumberOfSigners;
            this.NumberOfTotalDocuments = NumberOfTotalDocuments;
            this.NumberOfTotalPages = NumberOfTotalPages;
            this.NumberOfTotalSigners = NumberOfTotalSigners;
            this.NumberOfUniqueSenders = NumberOfUniqueSenders;
            this.NumberTotalRecipients = NumberTotalRecipients;
            this.OtherRecipientsList = OtherRecipientsList;
            this.Owner = Owner;
            this.OwnerMail = OwnerMail;
            this.PeriodEnd = PeriodEnd;
            this.PeriodStart = PeriodStart;
            this.PhoneCallsAttempted = PhoneCallsAttempted;
            this.PhoneCallsFailed = PhoneCallsFailed;
            this.PiiRedacted = PiiRedacted;
            this.PurgeDate = PurgeDate;
            this.ReasonForDeclining = ReasonForDeclining;
            this.ReasonForVoiding = ReasonForVoiding;
            this.ReassignReason = ReassignReason;
            this.Received = Received;
            this.Recipient = Recipient;
            this.RecipientAction = RecipientAction;
            this.RecipientCompanyName = RecipientCompanyName;
            this.RecipientCountry = RecipientCountry;
            this.RecipientEmail = RecipientEmail;
            this.RecipientId = RecipientId;
            this.RecipientName = RecipientName;
            this.RecipientRoleName = RecipientRoleName;
            this.RecipientTemplateRoleName = RecipientTemplateRoleName;
            this.RecipientTitle = RecipientTitle;
            this.RecipientType = RecipientType;
            this.RecipientUserId = RecipientUserId;
            this.RemainingSignatures = RemainingSignatures;
            this.RoutingOrder = RoutingOrder;
            this.SenderAccountId = SenderAccountId;
            this.SenderCompanyName = SenderCompanyName;
            this.SenderCountry = SenderCountry;
            this.SenderEmail = SenderEmail;
            this.SenderIPAddress = SenderIPAddress;
            this.SenderJobTitle = SenderJobTitle;
            this.SenderName = SenderName;
            this.SenderUserId = SenderUserId;
            this.SignatureType = SignatureType;
            this.SignatureTypeValue = SignatureTypeValue;
            this.SignDate = SignDate;
            this.Signed = Signed;
            this.SignedDate = SignedDate;
            this.SignedOnMobile = SignedOnMobile;
            this.SignedOnPaper = SignedOnPaper;
            this.SignerList = SignerList;
            this.Status = Status;
            this.StatusChangedDate = StatusChangedDate;
            this.StatusChangedTs = StatusChangedTs;
            this.StatusComment = StatusComment;
            this.Subject = Subject;
            this.Successes = Successes;
            this.TemplateId = TemplateId;
            this.TemplateName = TemplateName;
            this.TemplatesCreated = TemplatesCreated;
            this.TemplatesCreatedCount = TemplatesCreatedCount;
            this.TerminalStatusDate = TerminalStatusDate;
            this.TimeToCompleteSeconds = TimeToCompleteSeconds;
            this.TimeToDeliver = TimeToDeliver;
            this.TotalDocuments = TotalDocuments;
            this.TotalEnvelopes = TotalEnvelopes;
            this.TotalPages = TotalPages;
            this.TotalRecipients = TotalRecipients;
            this.TotalSigners = TotalSigners;
            this.UniqueSenders = UniqueSenders;
            this.UserAccountEmail = UserAccountEmail;
            this.UserAccountName = UserAccountName;
            this.UserAccountStatus = UserAccountStatus;
            this.UserCount = UserCount;
            this.UserId = UserId;
            this.VerificationStatus = VerificationStatus;
            this.VerificationType = VerificationType;
            this.ViewDate = ViewDate;
            this.VoidedTs = VoidedTs;
        }
        
        /// <summary>
        /// Gets or Sets AccessCodeRequired
        /// </summary>
        [DataMember(Name="accessCodeRequired", EmitDefaultValue=false)]
        public string AccessCodeRequired { get; set; }
        /// <summary>
        /// Gets or Sets AccessCodesAttempted
        /// </summary>
        [DataMember(Name="accessCodesAttempted", EmitDefaultValue=false)]
        public string AccessCodesAttempted { get; set; }
        /// <summary>
        /// Gets or Sets AccessCodesFailed
        /// </summary>
        [DataMember(Name="accessCodesFailed", EmitDefaultValue=false)]
        public string AccessCodesFailed { get; set; }
        /// <summary>
        /// The account ID associated with the envelope.
        /// </summary>
        /// <value>The account ID associated with the envelope.</value>
        [DataMember(Name="accountId", EmitDefaultValue=false)]
        public string AccountId { get; set; }
        /// <summary>
        /// Gets or Sets AuthenticationCategory
        /// </summary>
        [DataMember(Name="authenticationCategory", EmitDefaultValue=false)]
        public string AuthenticationCategory { get; set; }
        /// <summary>
        /// Gets or Sets AuthenticationSuccess
        /// </summary>
        [DataMember(Name="authenticationSuccess", EmitDefaultValue=false)]
        public string AuthenticationSuccess { get; set; }
        /// <summary>
        /// Gets or Sets AuthenticationType
        /// </summary>
        [DataMember(Name="authenticationType", EmitDefaultValue=false)]
        public string AuthenticationType { get; set; }
        /// <summary>
        /// Gets or Sets AverageTimeToCompleteSeconds
        /// </summary>
        [DataMember(Name="averageTimeToCompleteSeconds", EmitDefaultValue=false)]
        public string AverageTimeToCompleteSeconds { get; set; }
        /// <summary>
        /// Gets or Sets AvgCompleteSeconds
        /// </summary>
        [DataMember(Name="avgCompleteSeconds", EmitDefaultValue=false)]
        public string AvgCompleteSeconds { get; set; }
        /// <summary>
        /// Gets or Sets CaptureMethod
        /// </summary>
        [DataMember(Name="captureMethod", EmitDefaultValue=false)]
        public string CaptureMethod { get; set; }
        /// <summary>
        /// Gets or Sets Completed
        /// </summary>
        [DataMember(Name="completed", EmitDefaultValue=false)]
        public string Completed { get; set; }
        /// <summary>
        /// Gets or Sets CompletedTs
        /// </summary>
        [DataMember(Name="completedTs", EmitDefaultValue=false)]
        public string CompletedTs { get; set; }
        /// <summary>
        /// Gets or Sets CreatedDate
        /// </summary>
        [DataMember(Name="createdDate", EmitDefaultValue=false)]
        public string CreatedDate { get; set; }
        /// <summary>
        /// Gets or Sets CreatedOn
        /// </summary>
        [DataMember(Name="createdOn", EmitDefaultValue=false)]
        public string CreatedOn { get; set; }
        /// <summary>
        /// Gets or Sets Creator
        /// </summary>
        [DataMember(Name="creator", EmitDefaultValue=false)]
        public string Creator { get; set; }
        /// <summary>
        /// Gets or Sets CustomField
        /// </summary>
        [DataMember(Name="customField", EmitDefaultValue=false)]
        public string CustomField { get; set; }
        /// <summary>
        /// Gets or Sets DeclinedDate
        /// </summary>
        [DataMember(Name="declinedDate", EmitDefaultValue=false)]
        public string DeclinedDate { get; set; }
        /// <summary>
        /// The reason the recipient declined the document.
        /// </summary>
        /// <value>The reason the recipient declined the document.</value>
        [DataMember(Name="declinedReason", EmitDefaultValue=false)]
        public string DeclinedReason { get; set; }
        /// <summary>
        /// Gets or Sets DeliveredDate
        /// </summary>
        [DataMember(Name="deliveredDate", EmitDefaultValue=false)]
        public string DeliveredDate { get; set; }
        /// <summary>
        /// Gets or Sets EnvelopeCount
        /// </summary>
        [DataMember(Name="envelopeCount", EmitDefaultValue=false)]
        public string EnvelopeCount { get; set; }
        /// <summary>
        /// Gets or Sets EnvelopeCreator
        /// </summary>
        [DataMember(Name="envelopeCreator", EmitDefaultValue=false)]
        public string EnvelopeCreator { get; set; }
        /// <summary>
        /// The envelope ID of the envelope status that failed to post.
        /// </summary>
        /// <value>The envelope ID of the envelope status that failed to post.</value>
        [DataMember(Name="envelopeId", EmitDefaultValue=false)]
        public string EnvelopeId { get; set; }
        /// <summary>
        /// Gets or Sets EnvelopeInitialSendTs
        /// </summary>
        [DataMember(Name="envelopeInitialSendTs", EmitDefaultValue=false)]
        public string EnvelopeInitialSendTs { get; set; }
        /// <summary>
        /// Gets or Sets EnvelopesBilled
        /// </summary>
        [DataMember(Name="envelopesBilled", EmitDefaultValue=false)]
        public string EnvelopesBilled { get; set; }
        /// <summary>
        /// Gets or Sets EnvelopesCompleted
        /// </summary>
        [DataMember(Name="envelopesCompleted", EmitDefaultValue=false)]
        public string EnvelopesCompleted { get; set; }
        /// <summary>
        /// Gets or Sets EnvelopesCompletedCount
        /// </summary>
        [DataMember(Name="envelopesCompletedCount", EmitDefaultValue=false)]
        public string EnvelopesCompletedCount { get; set; }
        /// <summary>
        /// Gets or Sets EnvelopesDeclined
        /// </summary>
        [DataMember(Name="envelopesDeclined", EmitDefaultValue=false)]
        public string EnvelopesDeclined { get; set; }
        /// <summary>
        /// Gets or Sets EnvelopesSent
        /// </summary>
        [DataMember(Name="envelopesSent", EmitDefaultValue=false)]
        public string EnvelopesSent { get; set; }
        /// <summary>
        /// Gets or Sets EnvelopesSentCount
        /// </summary>
        [DataMember(Name="envelopesSentCount", EmitDefaultValue=false)]
        public string EnvelopesSentCount { get; set; }
        /// <summary>
        /// Gets or Sets EnvelopesVoided
        /// </summary>
        [DataMember(Name="envelopesVoided", EmitDefaultValue=false)]
        public string EnvelopesVoided { get; set; }
        /// <summary>
        /// Gets or Sets EnvelopeVoidedReason
        /// </summary>
        [DataMember(Name="envelopeVoidedReason", EmitDefaultValue=false)]
        public string EnvelopeVoidedReason { get; set; }
        /// <summary>
        /// Gets or Sets EodDocumentDescription
        /// </summary>
        [DataMember(Name="eodDocumentDescription", EmitDefaultValue=false)]
        public string EodDocumentDescription { get; set; }
        /// <summary>
        /// Gets or Sets EodDocumentName
        /// </summary>
        [DataMember(Name="eodDocumentName", EmitDefaultValue=false)]
        public string EodDocumentName { get; set; }
        /// <summary>
        /// Gets or Sets EodDocumentProfileId
        /// </summary>
        [DataMember(Name="eodDocumentProfileId", EmitDefaultValue=false)]
        public string EodDocumentProfileId { get; set; }
        /// <summary>
        /// Gets or Sets EodTransactionId
        /// </summary>
        [DataMember(Name="eodTransactionId", EmitDefaultValue=false)]
        public string EodTransactionId { get; set; }
        /// <summary>
        /// Gets or Sets EodTransactionName
        /// </summary>
        [DataMember(Name="eodTransactionName", EmitDefaultValue=false)]
        public string EodTransactionName { get; set; }
        /// <summary>
        /// Gets or Sets EventDate
        /// </summary>
        [DataMember(Name="eventDate", EmitDefaultValue=false)]
        public string EventDate { get; set; }
        /// <summary>
        /// Gets or Sets ExpirationDate
        /// </summary>
        [DataMember(Name="expirationDate", EmitDefaultValue=false)]
        public string ExpirationDate { get; set; }
        /// <summary>
        /// Gets or Sets ExpiredTs
        /// </summary>
        [DataMember(Name="expiredTs", EmitDefaultValue=false)]
        public string ExpiredTs { get; set; }
        /// <summary>
        /// Gets or Sets FailureReason
        /// </summary>
        [DataMember(Name="failureReason", EmitDefaultValue=false)]
        public string FailureReason { get; set; }
        /// <summary>
        /// Gets or Sets Failures
        /// </summary>
        [DataMember(Name="failures", EmitDefaultValue=false)]
        public string Failures { get; set; }
        /// <summary>
        /// Gets or Sets FailureVendorCode
        /// </summary>
        [DataMember(Name="failureVendorCode", EmitDefaultValue=false)]
        public string FailureVendorCode { get; set; }
        /// <summary>
        /// Gets or Sets FailureVendorReason
        /// </summary>
        [DataMember(Name="failureVendorReason", EmitDefaultValue=false)]
        public string FailureVendorReason { get; set; }
        /// <summary>
        /// Gets or Sets FirstSendTs
        /// </summary>
        [DataMember(Name="firstSendTs", EmitDefaultValue=false)]
        public string FirstSendTs { get; set; }
        /// <summary>
        /// Gets or Sets GroupId
        /// </summary>
        [DataMember(Name="groupId", EmitDefaultValue=false)]
        public string GroupId { get; set; }
        /// <summary>
        /// The name of the group.
        /// </summary>
        /// <value>The name of the group.</value>
        [DataMember(Name="groupName", EmitDefaultValue=false)]
        public string GroupName { get; set; }
        /// <summary>
        /// Gets or Sets HoursToCompleteEnd
        /// </summary>
        [DataMember(Name="hoursToCompleteEnd", EmitDefaultValue=false)]
        public string HoursToCompleteEnd { get; set; }
        /// <summary>
        /// Gets or Sets HoursToCompleteStart
        /// </summary>
        [DataMember(Name="hoursToCompleteStart", EmitDefaultValue=false)]
        public string HoursToCompleteStart { get; set; }
        /// <summary>
        /// Gets or Sets IdChecksAttempted
        /// </summary>
        [DataMember(Name="idChecksAttempted", EmitDefaultValue=false)]
        public string IdChecksAttempted { get; set; }
        /// <summary>
        /// Gets or Sets IdChecksFailed
        /// </summary>
        [DataMember(Name="idChecksFailed", EmitDefaultValue=false)]
        public string IdChecksFailed { get; set; }
        /// <summary>
        /// Gets or Sets IdCountry
        /// </summary>
        [DataMember(Name="idCountry", EmitDefaultValue=false)]
        public string IdCountry { get; set; }
        /// <summary>
        /// Gets or Sets IdMethod
        /// </summary>
        [DataMember(Name="idMethod", EmitDefaultValue=false)]
        public string IdMethod { get; set; }
        /// <summary>
        /// Gets or Sets InitialSendTs
        /// </summary>
        [DataMember(Name="initialSendTs", EmitDefaultValue=false)]
        public string InitialSendTs { get; set; }
        /// <summary>
        /// Gets or Sets IpAddress
        /// </summary>
        [DataMember(Name="ipAddress", EmitDefaultValue=false)]
        public string IpAddress { get; set; }
        /// <summary>
        /// Gets or Sets LastActivity
        /// </summary>
        [DataMember(Name="lastActivity", EmitDefaultValue=false)]
        public string LastActivity { get; set; }
        /// <summary>
        /// Gets or Sets LastActivityDate
        /// </summary>
        [DataMember(Name="lastActivityDate", EmitDefaultValue=false)]
        public string LastActivityDate { get; set; }
        /// <summary>
        /// Gets or Sets LastModified
        /// </summary>
        [DataMember(Name="lastModified", EmitDefaultValue=false)]
        public string LastModified { get; set; }
        /// <summary>
        /// Gets or Sets LastSentDate
        /// </summary>
        [DataMember(Name="lastSentDate", EmitDefaultValue=false)]
        public string LastSentDate { get; set; }
        /// <summary>
        /// Gets or Sets LastUsed
        /// </summary>
        [DataMember(Name="lastUsed", EmitDefaultValue=false)]
        public string LastUsed { get; set; }
        /// <summary>
        /// Gets or Sets MetadataRemoved
        /// </summary>
        [DataMember(Name="metadataRemoved", EmitDefaultValue=false)]
        public string MetadataRemoved { get; set; }
        /// <summary>
        /// Gets or Sets NotSigned
        /// </summary>
        [DataMember(Name="notSigned", EmitDefaultValue=false)]
        public string NotSigned { get; set; }
        /// <summary>
        /// Gets or Sets NumberOfAuthenticatedRecipients
        /// </summary>
        [DataMember(Name="numberOfAuthenticatedRecipients", EmitDefaultValue=false)]
        public string NumberOfAuthenticatedRecipients { get; set; }
        /// <summary>
        /// Gets or Sets NumberOfCompletedSignatures
        /// </summary>
        [DataMember(Name="numberOfCompletedSignatures", EmitDefaultValue=false)]
        public string NumberOfCompletedSignatures { get; set; }
        /// <summary>
        /// Gets or Sets NumberOfDocuments
        /// </summary>
        [DataMember(Name="numberOfDocuments", EmitDefaultValue=false)]
        public string NumberOfDocuments { get; set; }
        /// <summary>
        /// Gets or Sets NumberOfPages
        /// </summary>
        [DataMember(Name="numberOfPages", EmitDefaultValue=false)]
        public string NumberOfPages { get; set; }
        /// <summary>
        /// Gets or Sets NumberOfRecipients
        /// </summary>
        [DataMember(Name="numberOfRecipients", EmitDefaultValue=false)]
        public string NumberOfRecipients { get; set; }
        /// <summary>
        /// Gets or Sets NumberOfSends
        /// </summary>
        [DataMember(Name="numberOfSends", EmitDefaultValue=false)]
        public string NumberOfSends { get; set; }
        /// <summary>
        /// Gets or Sets NumberOfSigners
        /// </summary>
        [DataMember(Name="numberOfSigners", EmitDefaultValue=false)]
        public string NumberOfSigners { get; set; }
        /// <summary>
        /// Gets or Sets NumberOfTotalDocuments
        /// </summary>
        [DataMember(Name="numberOfTotalDocuments", EmitDefaultValue=false)]
        public string NumberOfTotalDocuments { get; set; }
        /// <summary>
        /// Gets or Sets NumberOfTotalPages
        /// </summary>
        [DataMember(Name="numberOfTotalPages", EmitDefaultValue=false)]
        public string NumberOfTotalPages { get; set; }
        /// <summary>
        /// Gets or Sets NumberOfTotalSigners
        /// </summary>
        [DataMember(Name="numberOfTotalSigners", EmitDefaultValue=false)]
        public string NumberOfTotalSigners { get; set; }
        /// <summary>
        /// Gets or Sets NumberOfUniqueSenders
        /// </summary>
        [DataMember(Name="numberOfUniqueSenders", EmitDefaultValue=false)]
        public string NumberOfUniqueSenders { get; set; }
        /// <summary>
        /// Gets or Sets NumberTotalRecipients
        /// </summary>
        [DataMember(Name="numberTotalRecipients", EmitDefaultValue=false)]
        public string NumberTotalRecipients { get; set; }
        /// <summary>
        /// Gets or Sets OtherRecipientsList
        /// </summary>
        [DataMember(Name="otherRecipientsList", EmitDefaultValue=false)]
        public string OtherRecipientsList { get; set; }
        /// <summary>
        /// Gets or Sets Owner
        /// </summary>
        [DataMember(Name="owner", EmitDefaultValue=false)]
        public string Owner { get; set; }
        /// <summary>
        /// Gets or Sets OwnerMail
        /// </summary>
        [DataMember(Name="ownerMail", EmitDefaultValue=false)]
        public string OwnerMail { get; set; }
        /// <summary>
        /// Gets or Sets PeriodEnd
        /// </summary>
        [DataMember(Name="periodEnd", EmitDefaultValue=false)]
        public string PeriodEnd { get; set; }
        /// <summary>
        /// Gets or Sets PeriodStart
        /// </summary>
        [DataMember(Name="periodStart", EmitDefaultValue=false)]
        public string PeriodStart { get; set; }
        /// <summary>
        /// Gets or Sets PhoneCallsAttempted
        /// </summary>
        [DataMember(Name="phoneCallsAttempted", EmitDefaultValue=false)]
        public string PhoneCallsAttempted { get; set; }
        /// <summary>
        /// Gets or Sets PhoneCallsFailed
        /// </summary>
        [DataMember(Name="phoneCallsFailed", EmitDefaultValue=false)]
        public string PhoneCallsFailed { get; set; }
        /// <summary>
        /// Gets or Sets PiiRedacted
        /// </summary>
        [DataMember(Name="piiRedacted", EmitDefaultValue=false)]
        public string PiiRedacted { get; set; }
        /// <summary>
        /// Gets or Sets PurgeDate
        /// </summary>
        [DataMember(Name="purgeDate", EmitDefaultValue=false)]
        public string PurgeDate { get; set; }
        /// <summary>
        /// Gets or Sets ReasonForDeclining
        /// </summary>
        [DataMember(Name="reasonForDeclining", EmitDefaultValue=false)]
        public string ReasonForDeclining { get; set; }
        /// <summary>
        /// Gets or Sets ReasonForVoiding
        /// </summary>
        [DataMember(Name="reasonForVoiding", EmitDefaultValue=false)]
        public string ReasonForVoiding { get; set; }
        /// <summary>
        /// Gets or Sets ReassignReason
        /// </summary>
        [DataMember(Name="reassignReason", EmitDefaultValue=false)]
        public string ReassignReason { get; set; }
        /// <summary>
        /// Gets or Sets Received
        /// </summary>
        [DataMember(Name="received", EmitDefaultValue=false)]
        public string Received { get; set; }
        /// <summary>
        /// Gets or Sets Recipient
        /// </summary>
        [DataMember(Name="recipient", EmitDefaultValue=false)]
        public string Recipient { get; set; }
        /// <summary>
        /// Gets or Sets RecipientAction
        /// </summary>
        [DataMember(Name="recipientAction", EmitDefaultValue=false)]
        public string RecipientAction { get; set; }
        /// <summary>
        /// Gets or Sets RecipientCompanyName
        /// </summary>
        [DataMember(Name="recipientCompanyName", EmitDefaultValue=false)]
        public string RecipientCompanyName { get; set; }
        /// <summary>
        /// Gets or Sets RecipientCountry
        /// </summary>
        [DataMember(Name="recipientCountry", EmitDefaultValue=false)]
        public string RecipientCountry { get; set; }
        /// <summary>
        /// Gets or Sets RecipientEmail
        /// </summary>
        [DataMember(Name="recipientEmail", EmitDefaultValue=false)]
        public string RecipientEmail { get; set; }
        /// <summary>
        /// Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        /// </summary>
        /// <value>Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.</value>
        [DataMember(Name="recipientId", EmitDefaultValue=false)]
        public string RecipientId { get; set; }
        /// <summary>
        /// Gets or Sets RecipientName
        /// </summary>
        [DataMember(Name="recipientName", EmitDefaultValue=false)]
        public string RecipientName { get; set; }
        /// <summary>
        /// Gets or Sets RecipientRoleName
        /// </summary>
        [DataMember(Name="recipientRoleName", EmitDefaultValue=false)]
        public string RecipientRoleName { get; set; }
        /// <summary>
        /// Gets or Sets RecipientTemplateRoleName
        /// </summary>
        [DataMember(Name="recipientTemplateRoleName", EmitDefaultValue=false)]
        public string RecipientTemplateRoleName { get; set; }
        /// <summary>
        /// Gets or Sets RecipientTitle
        /// </summary>
        [DataMember(Name="recipientTitle", EmitDefaultValue=false)]
        public string RecipientTitle { get; set; }
        /// <summary>
        /// Gets or Sets RecipientType
        /// </summary>
        [DataMember(Name="recipientType", EmitDefaultValue=false)]
        public string RecipientType { get; set; }
        /// <summary>
        /// Gets or Sets RecipientUserId
        /// </summary>
        [DataMember(Name="recipientUserId", EmitDefaultValue=false)]
        public string RecipientUserId { get; set; }
        /// <summary>
        /// Gets or Sets RemainingSignatures
        /// </summary>
        [DataMember(Name="remainingSignatures", EmitDefaultValue=false)]
        public string RemainingSignatures { get; set; }
        /// <summary>
        /// Specifies the routing order of the recipient in the envelope. 
        /// </summary>
        /// <value>Specifies the routing order of the recipient in the envelope. </value>
        [DataMember(Name="routingOrder", EmitDefaultValue=false)]
        public string RoutingOrder { get; set; }
        /// <summary>
        /// Gets or Sets SenderAccountId
        /// </summary>
        [DataMember(Name="senderAccountId", EmitDefaultValue=false)]
        public string SenderAccountId { get; set; }
        /// <summary>
        /// Gets or Sets SenderCompanyName
        /// </summary>
        [DataMember(Name="senderCompanyName", EmitDefaultValue=false)]
        public string SenderCompanyName { get; set; }
        /// <summary>
        /// Gets or Sets SenderCountry
        /// </summary>
        [DataMember(Name="senderCountry", EmitDefaultValue=false)]
        public string SenderCountry { get; set; }
        /// <summary>
        /// Gets or Sets SenderEmail
        /// </summary>
        [DataMember(Name="senderEmail", EmitDefaultValue=false)]
        public string SenderEmail { get; set; }
        /// <summary>
        /// Gets or Sets SenderIPAddress
        /// </summary>
        [DataMember(Name="senderIPAddress", EmitDefaultValue=false)]
        public string SenderIPAddress { get; set; }
        /// <summary>
        /// Gets or Sets SenderJobTitle
        /// </summary>
        [DataMember(Name="senderJobTitle", EmitDefaultValue=false)]
        public string SenderJobTitle { get; set; }
        /// <summary>
        /// Gets or Sets SenderName
        /// </summary>
        [DataMember(Name="senderName", EmitDefaultValue=false)]
        public string SenderName { get; set; }
        /// <summary>
        /// Gets or Sets SenderUserId
        /// </summary>
        [DataMember(Name="senderUserId", EmitDefaultValue=false)]
        public string SenderUserId { get; set; }
        /// <summary>
        /// Gets or Sets SignatureType
        /// </summary>
        [DataMember(Name="signatureType", EmitDefaultValue=false)]
        public string SignatureType { get; set; }
        /// <summary>
        /// Gets or Sets SignatureTypeValue
        /// </summary>
        [DataMember(Name="signatureTypeValue", EmitDefaultValue=false)]
        public string SignatureTypeValue { get; set; }
        /// <summary>
        /// Gets or Sets SignDate
        /// </summary>
        [DataMember(Name="signDate", EmitDefaultValue=false)]
        public string SignDate { get; set; }
        /// <summary>
        /// Gets or Sets Signed
        /// </summary>
        [DataMember(Name="signed", EmitDefaultValue=false)]
        public string Signed { get; set; }
        /// <summary>
        /// Gets or Sets SignedDate
        /// </summary>
        [DataMember(Name="signedDate", EmitDefaultValue=false)]
        public string SignedDate { get; set; }
        /// <summary>
        /// Gets or Sets SignedOnMobile
        /// </summary>
        [DataMember(Name="signedOnMobile", EmitDefaultValue=false)]
        public string SignedOnMobile { get; set; }
        /// <summary>
        /// Gets or Sets SignedOnPaper
        /// </summary>
        [DataMember(Name="signedOnPaper", EmitDefaultValue=false)]
        public string SignedOnPaper { get; set; }
        /// <summary>
        /// Gets or Sets SignerList
        /// </summary>
        [DataMember(Name="signerList", EmitDefaultValue=false)]
        public string SignerList { get; set; }
        /// <summary>
        /// Indicates the envelope status. Valid values are:  * sent - The envelope is sent to the recipients.  * created - The envelope is saved as a draft and can be modified and sent later.
        /// </summary>
        /// <value>Indicates the envelope status. Valid values are:  * sent - The envelope is sent to the recipients.  * created - The envelope is saved as a draft and can be modified and sent later.</value>
        [DataMember(Name="status", EmitDefaultValue=false)]
        public string Status { get; set; }
        /// <summary>
        /// Gets or Sets StatusChangedDate
        /// </summary>
        [DataMember(Name="statusChangedDate", EmitDefaultValue=false)]
        public string StatusChangedDate { get; set; }
        /// <summary>
        /// Gets or Sets StatusChangedTs
        /// </summary>
        [DataMember(Name="statusChangedTs", EmitDefaultValue=false)]
        public string StatusChangedTs { get; set; }
        /// <summary>
        /// Gets or Sets StatusComment
        /// </summary>
        [DataMember(Name="statusComment", EmitDefaultValue=false)]
        public string StatusComment { get; set; }
        /// <summary>
        /// Gets or Sets Subject
        /// </summary>
        [DataMember(Name="subject", EmitDefaultValue=false)]
        public string Subject { get; set; }
        /// <summary>
        /// Gets or Sets Successes
        /// </summary>
        [DataMember(Name="successes", EmitDefaultValue=false)]
        public string Successes { get; set; }
        /// <summary>
        /// The unique identifier of the template. If this is not provided, DocuSign will generate a value. 
        /// </summary>
        /// <value>The unique identifier of the template. If this is not provided, DocuSign will generate a value. </value>
        [DataMember(Name="templateId", EmitDefaultValue=false)]
        public string TemplateId { get; set; }
        /// <summary>
        /// Gets or Sets TemplateName
        /// </summary>
        [DataMember(Name="templateName", EmitDefaultValue=false)]
        public string TemplateName { get; set; }
        /// <summary>
        /// Gets or Sets TemplatesCreated
        /// </summary>
        [DataMember(Name="templatesCreated", EmitDefaultValue=false)]
        public string TemplatesCreated { get; set; }
        /// <summary>
        /// Gets or Sets TemplatesCreatedCount
        /// </summary>
        [DataMember(Name="templatesCreatedCount", EmitDefaultValue=false)]
        public string TemplatesCreatedCount { get; set; }
        /// <summary>
        /// Gets or Sets TerminalStatusDate
        /// </summary>
        [DataMember(Name="terminalStatusDate", EmitDefaultValue=false)]
        public string TerminalStatusDate { get; set; }
        /// <summary>
        /// Gets or Sets TimeToCompleteSeconds
        /// </summary>
        [DataMember(Name="timeToCompleteSeconds", EmitDefaultValue=false)]
        public string TimeToCompleteSeconds { get; set; }
        /// <summary>
        /// Gets or Sets TimeToDeliver
        /// </summary>
        [DataMember(Name="timeToDeliver", EmitDefaultValue=false)]
        public string TimeToDeliver { get; set; }
        /// <summary>
        /// Gets or Sets TotalDocuments
        /// </summary>
        [DataMember(Name="totalDocuments", EmitDefaultValue=false)]
        public string TotalDocuments { get; set; }
        /// <summary>
        /// Gets or Sets TotalEnvelopes
        /// </summary>
        [DataMember(Name="totalEnvelopes", EmitDefaultValue=false)]
        public string TotalEnvelopes { get; set; }
        /// <summary>
        /// Gets or Sets TotalPages
        /// </summary>
        [DataMember(Name="totalPages", EmitDefaultValue=false)]
        public string TotalPages { get; set; }
        /// <summary>
        /// Gets or Sets TotalRecipients
        /// </summary>
        [DataMember(Name="totalRecipients", EmitDefaultValue=false)]
        public string TotalRecipients { get; set; }
        /// <summary>
        /// Gets or Sets TotalSigners
        /// </summary>
        [DataMember(Name="totalSigners", EmitDefaultValue=false)]
        public string TotalSigners { get; set; }
        /// <summary>
        /// Gets or Sets UniqueSenders
        /// </summary>
        [DataMember(Name="uniqueSenders", EmitDefaultValue=false)]
        public string UniqueSenders { get; set; }
        /// <summary>
        /// Gets or Sets UserAccountEmail
        /// </summary>
        [DataMember(Name="userAccountEmail", EmitDefaultValue=false)]
        public string UserAccountEmail { get; set; }
        /// <summary>
        /// Gets or Sets UserAccountName
        /// </summary>
        [DataMember(Name="userAccountName", EmitDefaultValue=false)]
        public string UserAccountName { get; set; }
        /// <summary>
        /// Gets or Sets UserAccountStatus
        /// </summary>
        [DataMember(Name="userAccountStatus", EmitDefaultValue=false)]
        public string UserAccountStatus { get; set; }
        /// <summary>
        /// Gets or Sets UserCount
        /// </summary>
        [DataMember(Name="userCount", EmitDefaultValue=false)]
        public string UserCount { get; set; }
        /// <summary>
        /// Gets or Sets UserId
        /// </summary>
        [DataMember(Name="userId", EmitDefaultValue=false)]
        public string UserId { get; set; }
        /// <summary>
        /// Gets or Sets VerificationStatus
        /// </summary>
        [DataMember(Name="verificationStatus", EmitDefaultValue=false)]
        public string VerificationStatus { get; set; }
        /// <summary>
        /// Gets or Sets VerificationType
        /// </summary>
        [DataMember(Name="verificationType", EmitDefaultValue=false)]
        public string VerificationType { get; set; }
        /// <summary>
        /// Gets or Sets ViewDate
        /// </summary>
        [DataMember(Name="viewDate", EmitDefaultValue=false)]
        public string ViewDate { get; set; }
        /// <summary>
        /// Gets or Sets VoidedTs
        /// </summary>
        [DataMember(Name="voidedTs", EmitDefaultValue=false)]
        public string VoidedTs { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ReportInProductRunResponseRowFields {\n");
            sb.Append("  AccessCodeRequired: ").Append(AccessCodeRequired).Append("\n");
            sb.Append("  AccessCodesAttempted: ").Append(AccessCodesAttempted).Append("\n");
            sb.Append("  AccessCodesFailed: ").Append(AccessCodesFailed).Append("\n");
            sb.Append("  AccountId: ").Append(AccountId).Append("\n");
            sb.Append("  AuthenticationCategory: ").Append(AuthenticationCategory).Append("\n");
            sb.Append("  AuthenticationSuccess: ").Append(AuthenticationSuccess).Append("\n");
            sb.Append("  AuthenticationType: ").Append(AuthenticationType).Append("\n");
            sb.Append("  AverageTimeToCompleteSeconds: ").Append(AverageTimeToCompleteSeconds).Append("\n");
            sb.Append("  AvgCompleteSeconds: ").Append(AvgCompleteSeconds).Append("\n");
            sb.Append("  CaptureMethod: ").Append(CaptureMethod).Append("\n");
            sb.Append("  Completed: ").Append(Completed).Append("\n");
            sb.Append("  CompletedTs: ").Append(CompletedTs).Append("\n");
            sb.Append("  CreatedDate: ").Append(CreatedDate).Append("\n");
            sb.Append("  CreatedOn: ").Append(CreatedOn).Append("\n");
            sb.Append("  Creator: ").Append(Creator).Append("\n");
            sb.Append("  CustomField: ").Append(CustomField).Append("\n");
            sb.Append("  DeclinedDate: ").Append(DeclinedDate).Append("\n");
            sb.Append("  DeclinedReason: ").Append(DeclinedReason).Append("\n");
            sb.Append("  DeliveredDate: ").Append(DeliveredDate).Append("\n");
            sb.Append("  EnvelopeCount: ").Append(EnvelopeCount).Append("\n");
            sb.Append("  EnvelopeCreator: ").Append(EnvelopeCreator).Append("\n");
            sb.Append("  EnvelopeId: ").Append(EnvelopeId).Append("\n");
            sb.Append("  EnvelopeInitialSendTs: ").Append(EnvelopeInitialSendTs).Append("\n");
            sb.Append("  EnvelopesBilled: ").Append(EnvelopesBilled).Append("\n");
            sb.Append("  EnvelopesCompleted: ").Append(EnvelopesCompleted).Append("\n");
            sb.Append("  EnvelopesCompletedCount: ").Append(EnvelopesCompletedCount).Append("\n");
            sb.Append("  EnvelopesDeclined: ").Append(EnvelopesDeclined).Append("\n");
            sb.Append("  EnvelopesSent: ").Append(EnvelopesSent).Append("\n");
            sb.Append("  EnvelopesSentCount: ").Append(EnvelopesSentCount).Append("\n");
            sb.Append("  EnvelopesVoided: ").Append(EnvelopesVoided).Append("\n");
            sb.Append("  EnvelopeVoidedReason: ").Append(EnvelopeVoidedReason).Append("\n");
            sb.Append("  EodDocumentDescription: ").Append(EodDocumentDescription).Append("\n");
            sb.Append("  EodDocumentName: ").Append(EodDocumentName).Append("\n");
            sb.Append("  EodDocumentProfileId: ").Append(EodDocumentProfileId).Append("\n");
            sb.Append("  EodTransactionId: ").Append(EodTransactionId).Append("\n");
            sb.Append("  EodTransactionName: ").Append(EodTransactionName).Append("\n");
            sb.Append("  EventDate: ").Append(EventDate).Append("\n");
            sb.Append("  ExpirationDate: ").Append(ExpirationDate).Append("\n");
            sb.Append("  ExpiredTs: ").Append(ExpiredTs).Append("\n");
            sb.Append("  FailureReason: ").Append(FailureReason).Append("\n");
            sb.Append("  Failures: ").Append(Failures).Append("\n");
            sb.Append("  FailureVendorCode: ").Append(FailureVendorCode).Append("\n");
            sb.Append("  FailureVendorReason: ").Append(FailureVendorReason).Append("\n");
            sb.Append("  FirstSendTs: ").Append(FirstSendTs).Append("\n");
            sb.Append("  GroupId: ").Append(GroupId).Append("\n");
            sb.Append("  GroupName: ").Append(GroupName).Append("\n");
            sb.Append("  HoursToCompleteEnd: ").Append(HoursToCompleteEnd).Append("\n");
            sb.Append("  HoursToCompleteStart: ").Append(HoursToCompleteStart).Append("\n");
            sb.Append("  IdChecksAttempted: ").Append(IdChecksAttempted).Append("\n");
            sb.Append("  IdChecksFailed: ").Append(IdChecksFailed).Append("\n");
            sb.Append("  IdCountry: ").Append(IdCountry).Append("\n");
            sb.Append("  IdMethod: ").Append(IdMethod).Append("\n");
            sb.Append("  InitialSendTs: ").Append(InitialSendTs).Append("\n");
            sb.Append("  IpAddress: ").Append(IpAddress).Append("\n");
            sb.Append("  LastActivity: ").Append(LastActivity).Append("\n");
            sb.Append("  LastActivityDate: ").Append(LastActivityDate).Append("\n");
            sb.Append("  LastModified: ").Append(LastModified).Append("\n");
            sb.Append("  LastSentDate: ").Append(LastSentDate).Append("\n");
            sb.Append("  LastUsed: ").Append(LastUsed).Append("\n");
            sb.Append("  MetadataRemoved: ").Append(MetadataRemoved).Append("\n");
            sb.Append("  NotSigned: ").Append(NotSigned).Append("\n");
            sb.Append("  NumberOfAuthenticatedRecipients: ").Append(NumberOfAuthenticatedRecipients).Append("\n");
            sb.Append("  NumberOfCompletedSignatures: ").Append(NumberOfCompletedSignatures).Append("\n");
            sb.Append("  NumberOfDocuments: ").Append(NumberOfDocuments).Append("\n");
            sb.Append("  NumberOfPages: ").Append(NumberOfPages).Append("\n");
            sb.Append("  NumberOfRecipients: ").Append(NumberOfRecipients).Append("\n");
            sb.Append("  NumberOfSends: ").Append(NumberOfSends).Append("\n");
            sb.Append("  NumberOfSigners: ").Append(NumberOfSigners).Append("\n");
            sb.Append("  NumberOfTotalDocuments: ").Append(NumberOfTotalDocuments).Append("\n");
            sb.Append("  NumberOfTotalPages: ").Append(NumberOfTotalPages).Append("\n");
            sb.Append("  NumberOfTotalSigners: ").Append(NumberOfTotalSigners).Append("\n");
            sb.Append("  NumberOfUniqueSenders: ").Append(NumberOfUniqueSenders).Append("\n");
            sb.Append("  NumberTotalRecipients: ").Append(NumberTotalRecipients).Append("\n");
            sb.Append("  OtherRecipientsList: ").Append(OtherRecipientsList).Append("\n");
            sb.Append("  Owner: ").Append(Owner).Append("\n");
            sb.Append("  OwnerMail: ").Append(OwnerMail).Append("\n");
            sb.Append("  PeriodEnd: ").Append(PeriodEnd).Append("\n");
            sb.Append("  PeriodStart: ").Append(PeriodStart).Append("\n");
            sb.Append("  PhoneCallsAttempted: ").Append(PhoneCallsAttempted).Append("\n");
            sb.Append("  PhoneCallsFailed: ").Append(PhoneCallsFailed).Append("\n");
            sb.Append("  PiiRedacted: ").Append(PiiRedacted).Append("\n");
            sb.Append("  PurgeDate: ").Append(PurgeDate).Append("\n");
            sb.Append("  ReasonForDeclining: ").Append(ReasonForDeclining).Append("\n");
            sb.Append("  ReasonForVoiding: ").Append(ReasonForVoiding).Append("\n");
            sb.Append("  ReassignReason: ").Append(ReassignReason).Append("\n");
            sb.Append("  Received: ").Append(Received).Append("\n");
            sb.Append("  Recipient: ").Append(Recipient).Append("\n");
            sb.Append("  RecipientAction: ").Append(RecipientAction).Append("\n");
            sb.Append("  RecipientCompanyName: ").Append(RecipientCompanyName).Append("\n");
            sb.Append("  RecipientCountry: ").Append(RecipientCountry).Append("\n");
            sb.Append("  RecipientEmail: ").Append(RecipientEmail).Append("\n");
            sb.Append("  RecipientId: ").Append(RecipientId).Append("\n");
            sb.Append("  RecipientName: ").Append(RecipientName).Append("\n");
            sb.Append("  RecipientRoleName: ").Append(RecipientRoleName).Append("\n");
            sb.Append("  RecipientTemplateRoleName: ").Append(RecipientTemplateRoleName).Append("\n");
            sb.Append("  RecipientTitle: ").Append(RecipientTitle).Append("\n");
            sb.Append("  RecipientType: ").Append(RecipientType).Append("\n");
            sb.Append("  RecipientUserId: ").Append(RecipientUserId).Append("\n");
            sb.Append("  RemainingSignatures: ").Append(RemainingSignatures).Append("\n");
            sb.Append("  RoutingOrder: ").Append(RoutingOrder).Append("\n");
            sb.Append("  SenderAccountId: ").Append(SenderAccountId).Append("\n");
            sb.Append("  SenderCompanyName: ").Append(SenderCompanyName).Append("\n");
            sb.Append("  SenderCountry: ").Append(SenderCountry).Append("\n");
            sb.Append("  SenderEmail: ").Append(SenderEmail).Append("\n");
            sb.Append("  SenderIPAddress: ").Append(SenderIPAddress).Append("\n");
            sb.Append("  SenderJobTitle: ").Append(SenderJobTitle).Append("\n");
            sb.Append("  SenderName: ").Append(SenderName).Append("\n");
            sb.Append("  SenderUserId: ").Append(SenderUserId).Append("\n");
            sb.Append("  SignatureType: ").Append(SignatureType).Append("\n");
            sb.Append("  SignatureTypeValue: ").Append(SignatureTypeValue).Append("\n");
            sb.Append("  SignDate: ").Append(SignDate).Append("\n");
            sb.Append("  Signed: ").Append(Signed).Append("\n");
            sb.Append("  SignedDate: ").Append(SignedDate).Append("\n");
            sb.Append("  SignedOnMobile: ").Append(SignedOnMobile).Append("\n");
            sb.Append("  SignedOnPaper: ").Append(SignedOnPaper).Append("\n");
            sb.Append("  SignerList: ").Append(SignerList).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  StatusChangedDate: ").Append(StatusChangedDate).Append("\n");
            sb.Append("  StatusChangedTs: ").Append(StatusChangedTs).Append("\n");
            sb.Append("  StatusComment: ").Append(StatusComment).Append("\n");
            sb.Append("  Subject: ").Append(Subject).Append("\n");
            sb.Append("  Successes: ").Append(Successes).Append("\n");
            sb.Append("  TemplateId: ").Append(TemplateId).Append("\n");
            sb.Append("  TemplateName: ").Append(TemplateName).Append("\n");
            sb.Append("  TemplatesCreated: ").Append(TemplatesCreated).Append("\n");
            sb.Append("  TemplatesCreatedCount: ").Append(TemplatesCreatedCount).Append("\n");
            sb.Append("  TerminalStatusDate: ").Append(TerminalStatusDate).Append("\n");
            sb.Append("  TimeToCompleteSeconds: ").Append(TimeToCompleteSeconds).Append("\n");
            sb.Append("  TimeToDeliver: ").Append(TimeToDeliver).Append("\n");
            sb.Append("  TotalDocuments: ").Append(TotalDocuments).Append("\n");
            sb.Append("  TotalEnvelopes: ").Append(TotalEnvelopes).Append("\n");
            sb.Append("  TotalPages: ").Append(TotalPages).Append("\n");
            sb.Append("  TotalRecipients: ").Append(TotalRecipients).Append("\n");
            sb.Append("  TotalSigners: ").Append(TotalSigners).Append("\n");
            sb.Append("  UniqueSenders: ").Append(UniqueSenders).Append("\n");
            sb.Append("  UserAccountEmail: ").Append(UserAccountEmail).Append("\n");
            sb.Append("  UserAccountName: ").Append(UserAccountName).Append("\n");
            sb.Append("  UserAccountStatus: ").Append(UserAccountStatus).Append("\n");
            sb.Append("  UserCount: ").Append(UserCount).Append("\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("  VerificationStatus: ").Append(VerificationStatus).Append("\n");
            sb.Append("  VerificationType: ").Append(VerificationType).Append("\n");
            sb.Append("  ViewDate: ").Append(ViewDate).Append("\n");
            sb.Append("  VoidedTs: ").Append(VoidedTs).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as ReportInProductRunResponseRowFields);
        }

        /// <summary>
        /// Returns true if ReportInProductRunResponseRowFields instances are equal
        /// </summary>
        /// <param name="other">Instance of ReportInProductRunResponseRowFields to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ReportInProductRunResponseRowFields other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.AccessCodeRequired == other.AccessCodeRequired ||
                    this.AccessCodeRequired != null &&
                    this.AccessCodeRequired.Equals(other.AccessCodeRequired)
                ) && 
                (
                    this.AccessCodesAttempted == other.AccessCodesAttempted ||
                    this.AccessCodesAttempted != null &&
                    this.AccessCodesAttempted.Equals(other.AccessCodesAttempted)
                ) && 
                (
                    this.AccessCodesFailed == other.AccessCodesFailed ||
                    this.AccessCodesFailed != null &&
                    this.AccessCodesFailed.Equals(other.AccessCodesFailed)
                ) && 
                (
                    this.AccountId == other.AccountId ||
                    this.AccountId != null &&
                    this.AccountId.Equals(other.AccountId)
                ) && 
                (
                    this.AuthenticationCategory == other.AuthenticationCategory ||
                    this.AuthenticationCategory != null &&
                    this.AuthenticationCategory.Equals(other.AuthenticationCategory)
                ) && 
                (
                    this.AuthenticationSuccess == other.AuthenticationSuccess ||
                    this.AuthenticationSuccess != null &&
                    this.AuthenticationSuccess.Equals(other.AuthenticationSuccess)
                ) && 
                (
                    this.AuthenticationType == other.AuthenticationType ||
                    this.AuthenticationType != null &&
                    this.AuthenticationType.Equals(other.AuthenticationType)
                ) && 
                (
                    this.AverageTimeToCompleteSeconds == other.AverageTimeToCompleteSeconds ||
                    this.AverageTimeToCompleteSeconds != null &&
                    this.AverageTimeToCompleteSeconds.Equals(other.AverageTimeToCompleteSeconds)
                ) && 
                (
                    this.AvgCompleteSeconds == other.AvgCompleteSeconds ||
                    this.AvgCompleteSeconds != null &&
                    this.AvgCompleteSeconds.Equals(other.AvgCompleteSeconds)
                ) && 
                (
                    this.CaptureMethod == other.CaptureMethod ||
                    this.CaptureMethod != null &&
                    this.CaptureMethod.Equals(other.CaptureMethod)
                ) && 
                (
                    this.Completed == other.Completed ||
                    this.Completed != null &&
                    this.Completed.Equals(other.Completed)
                ) && 
                (
                    this.CompletedTs == other.CompletedTs ||
                    this.CompletedTs != null &&
                    this.CompletedTs.Equals(other.CompletedTs)
                ) && 
                (
                    this.CreatedDate == other.CreatedDate ||
                    this.CreatedDate != null &&
                    this.CreatedDate.Equals(other.CreatedDate)
                ) && 
                (
                    this.CreatedOn == other.CreatedOn ||
                    this.CreatedOn != null &&
                    this.CreatedOn.Equals(other.CreatedOn)
                ) && 
                (
                    this.Creator == other.Creator ||
                    this.Creator != null &&
                    this.Creator.Equals(other.Creator)
                ) && 
                (
                    this.CustomField == other.CustomField ||
                    this.CustomField != null &&
                    this.CustomField.Equals(other.CustomField)
                ) && 
                (
                    this.DeclinedDate == other.DeclinedDate ||
                    this.DeclinedDate != null &&
                    this.DeclinedDate.Equals(other.DeclinedDate)
                ) && 
                (
                    this.DeclinedReason == other.DeclinedReason ||
                    this.DeclinedReason != null &&
                    this.DeclinedReason.Equals(other.DeclinedReason)
                ) && 
                (
                    this.DeliveredDate == other.DeliveredDate ||
                    this.DeliveredDate != null &&
                    this.DeliveredDate.Equals(other.DeliveredDate)
                ) && 
                (
                    this.EnvelopeCount == other.EnvelopeCount ||
                    this.EnvelopeCount != null &&
                    this.EnvelopeCount.Equals(other.EnvelopeCount)
                ) && 
                (
                    this.EnvelopeCreator == other.EnvelopeCreator ||
                    this.EnvelopeCreator != null &&
                    this.EnvelopeCreator.Equals(other.EnvelopeCreator)
                ) && 
                (
                    this.EnvelopeId == other.EnvelopeId ||
                    this.EnvelopeId != null &&
                    this.EnvelopeId.Equals(other.EnvelopeId)
                ) && 
                (
                    this.EnvelopeInitialSendTs == other.EnvelopeInitialSendTs ||
                    this.EnvelopeInitialSendTs != null &&
                    this.EnvelopeInitialSendTs.Equals(other.EnvelopeInitialSendTs)
                ) && 
                (
                    this.EnvelopesBilled == other.EnvelopesBilled ||
                    this.EnvelopesBilled != null &&
                    this.EnvelopesBilled.Equals(other.EnvelopesBilled)
                ) && 
                (
                    this.EnvelopesCompleted == other.EnvelopesCompleted ||
                    this.EnvelopesCompleted != null &&
                    this.EnvelopesCompleted.Equals(other.EnvelopesCompleted)
                ) && 
                (
                    this.EnvelopesCompletedCount == other.EnvelopesCompletedCount ||
                    this.EnvelopesCompletedCount != null &&
                    this.EnvelopesCompletedCount.Equals(other.EnvelopesCompletedCount)
                ) && 
                (
                    this.EnvelopesDeclined == other.EnvelopesDeclined ||
                    this.EnvelopesDeclined != null &&
                    this.EnvelopesDeclined.Equals(other.EnvelopesDeclined)
                ) && 
                (
                    this.EnvelopesSent == other.EnvelopesSent ||
                    this.EnvelopesSent != null &&
                    this.EnvelopesSent.Equals(other.EnvelopesSent)
                ) && 
                (
                    this.EnvelopesSentCount == other.EnvelopesSentCount ||
                    this.EnvelopesSentCount != null &&
                    this.EnvelopesSentCount.Equals(other.EnvelopesSentCount)
                ) && 
                (
                    this.EnvelopesVoided == other.EnvelopesVoided ||
                    this.EnvelopesVoided != null &&
                    this.EnvelopesVoided.Equals(other.EnvelopesVoided)
                ) && 
                (
                    this.EnvelopeVoidedReason == other.EnvelopeVoidedReason ||
                    this.EnvelopeVoidedReason != null &&
                    this.EnvelopeVoidedReason.Equals(other.EnvelopeVoidedReason)
                ) && 
                (
                    this.EodDocumentDescription == other.EodDocumentDescription ||
                    this.EodDocumentDescription != null &&
                    this.EodDocumentDescription.Equals(other.EodDocumentDescription)
                ) && 
                (
                    this.EodDocumentName == other.EodDocumentName ||
                    this.EodDocumentName != null &&
                    this.EodDocumentName.Equals(other.EodDocumentName)
                ) && 
                (
                    this.EodDocumentProfileId == other.EodDocumentProfileId ||
                    this.EodDocumentProfileId != null &&
                    this.EodDocumentProfileId.Equals(other.EodDocumentProfileId)
                ) && 
                (
                    this.EodTransactionId == other.EodTransactionId ||
                    this.EodTransactionId != null &&
                    this.EodTransactionId.Equals(other.EodTransactionId)
                ) && 
                (
                    this.EodTransactionName == other.EodTransactionName ||
                    this.EodTransactionName != null &&
                    this.EodTransactionName.Equals(other.EodTransactionName)
                ) && 
                (
                    this.EventDate == other.EventDate ||
                    this.EventDate != null &&
                    this.EventDate.Equals(other.EventDate)
                ) && 
                (
                    this.ExpirationDate == other.ExpirationDate ||
                    this.ExpirationDate != null &&
                    this.ExpirationDate.Equals(other.ExpirationDate)
                ) && 
                (
                    this.ExpiredTs == other.ExpiredTs ||
                    this.ExpiredTs != null &&
                    this.ExpiredTs.Equals(other.ExpiredTs)
                ) && 
                (
                    this.FailureReason == other.FailureReason ||
                    this.FailureReason != null &&
                    this.FailureReason.Equals(other.FailureReason)
                ) && 
                (
                    this.Failures == other.Failures ||
                    this.Failures != null &&
                    this.Failures.Equals(other.Failures)
                ) && 
                (
                    this.FailureVendorCode == other.FailureVendorCode ||
                    this.FailureVendorCode != null &&
                    this.FailureVendorCode.Equals(other.FailureVendorCode)
                ) && 
                (
                    this.FailureVendorReason == other.FailureVendorReason ||
                    this.FailureVendorReason != null &&
                    this.FailureVendorReason.Equals(other.FailureVendorReason)
                ) && 
                (
                    this.FirstSendTs == other.FirstSendTs ||
                    this.FirstSendTs != null &&
                    this.FirstSendTs.Equals(other.FirstSendTs)
                ) && 
                (
                    this.GroupId == other.GroupId ||
                    this.GroupId != null &&
                    this.GroupId.Equals(other.GroupId)
                ) && 
                (
                    this.GroupName == other.GroupName ||
                    this.GroupName != null &&
                    this.GroupName.Equals(other.GroupName)
                ) && 
                (
                    this.HoursToCompleteEnd == other.HoursToCompleteEnd ||
                    this.HoursToCompleteEnd != null &&
                    this.HoursToCompleteEnd.Equals(other.HoursToCompleteEnd)
                ) && 
                (
                    this.HoursToCompleteStart == other.HoursToCompleteStart ||
                    this.HoursToCompleteStart != null &&
                    this.HoursToCompleteStart.Equals(other.HoursToCompleteStart)
                ) && 
                (
                    this.IdChecksAttempted == other.IdChecksAttempted ||
                    this.IdChecksAttempted != null &&
                    this.IdChecksAttempted.Equals(other.IdChecksAttempted)
                ) && 
                (
                    this.IdChecksFailed == other.IdChecksFailed ||
                    this.IdChecksFailed != null &&
                    this.IdChecksFailed.Equals(other.IdChecksFailed)
                ) && 
                (
                    this.IdCountry == other.IdCountry ||
                    this.IdCountry != null &&
                    this.IdCountry.Equals(other.IdCountry)
                ) && 
                (
                    this.IdMethod == other.IdMethod ||
                    this.IdMethod != null &&
                    this.IdMethod.Equals(other.IdMethod)
                ) && 
                (
                    this.InitialSendTs == other.InitialSendTs ||
                    this.InitialSendTs != null &&
                    this.InitialSendTs.Equals(other.InitialSendTs)
                ) && 
                (
                    this.IpAddress == other.IpAddress ||
                    this.IpAddress != null &&
                    this.IpAddress.Equals(other.IpAddress)
                ) && 
                (
                    this.LastActivity == other.LastActivity ||
                    this.LastActivity != null &&
                    this.LastActivity.Equals(other.LastActivity)
                ) && 
                (
                    this.LastActivityDate == other.LastActivityDate ||
                    this.LastActivityDate != null &&
                    this.LastActivityDate.Equals(other.LastActivityDate)
                ) && 
                (
                    this.LastModified == other.LastModified ||
                    this.LastModified != null &&
                    this.LastModified.Equals(other.LastModified)
                ) && 
                (
                    this.LastSentDate == other.LastSentDate ||
                    this.LastSentDate != null &&
                    this.LastSentDate.Equals(other.LastSentDate)
                ) && 
                (
                    this.LastUsed == other.LastUsed ||
                    this.LastUsed != null &&
                    this.LastUsed.Equals(other.LastUsed)
                ) && 
                (
                    this.MetadataRemoved == other.MetadataRemoved ||
                    this.MetadataRemoved != null &&
                    this.MetadataRemoved.Equals(other.MetadataRemoved)
                ) && 
                (
                    this.NotSigned == other.NotSigned ||
                    this.NotSigned != null &&
                    this.NotSigned.Equals(other.NotSigned)
                ) && 
                (
                    this.NumberOfAuthenticatedRecipients == other.NumberOfAuthenticatedRecipients ||
                    this.NumberOfAuthenticatedRecipients != null &&
                    this.NumberOfAuthenticatedRecipients.Equals(other.NumberOfAuthenticatedRecipients)
                ) && 
                (
                    this.NumberOfCompletedSignatures == other.NumberOfCompletedSignatures ||
                    this.NumberOfCompletedSignatures != null &&
                    this.NumberOfCompletedSignatures.Equals(other.NumberOfCompletedSignatures)
                ) && 
                (
                    this.NumberOfDocuments == other.NumberOfDocuments ||
                    this.NumberOfDocuments != null &&
                    this.NumberOfDocuments.Equals(other.NumberOfDocuments)
                ) && 
                (
                    this.NumberOfPages == other.NumberOfPages ||
                    this.NumberOfPages != null &&
                    this.NumberOfPages.Equals(other.NumberOfPages)
                ) && 
                (
                    this.NumberOfRecipients == other.NumberOfRecipients ||
                    this.NumberOfRecipients != null &&
                    this.NumberOfRecipients.Equals(other.NumberOfRecipients)
                ) && 
                (
                    this.NumberOfSends == other.NumberOfSends ||
                    this.NumberOfSends != null &&
                    this.NumberOfSends.Equals(other.NumberOfSends)
                ) && 
                (
                    this.NumberOfSigners == other.NumberOfSigners ||
                    this.NumberOfSigners != null &&
                    this.NumberOfSigners.Equals(other.NumberOfSigners)
                ) && 
                (
                    this.NumberOfTotalDocuments == other.NumberOfTotalDocuments ||
                    this.NumberOfTotalDocuments != null &&
                    this.NumberOfTotalDocuments.Equals(other.NumberOfTotalDocuments)
                ) && 
                (
                    this.NumberOfTotalPages == other.NumberOfTotalPages ||
                    this.NumberOfTotalPages != null &&
                    this.NumberOfTotalPages.Equals(other.NumberOfTotalPages)
                ) && 
                (
                    this.NumberOfTotalSigners == other.NumberOfTotalSigners ||
                    this.NumberOfTotalSigners != null &&
                    this.NumberOfTotalSigners.Equals(other.NumberOfTotalSigners)
                ) && 
                (
                    this.NumberOfUniqueSenders == other.NumberOfUniqueSenders ||
                    this.NumberOfUniqueSenders != null &&
                    this.NumberOfUniqueSenders.Equals(other.NumberOfUniqueSenders)
                ) && 
                (
                    this.NumberTotalRecipients == other.NumberTotalRecipients ||
                    this.NumberTotalRecipients != null &&
                    this.NumberTotalRecipients.Equals(other.NumberTotalRecipients)
                ) && 
                (
                    this.OtherRecipientsList == other.OtherRecipientsList ||
                    this.OtherRecipientsList != null &&
                    this.OtherRecipientsList.Equals(other.OtherRecipientsList)
                ) && 
                (
                    this.Owner == other.Owner ||
                    this.Owner != null &&
                    this.Owner.Equals(other.Owner)
                ) && 
                (
                    this.OwnerMail == other.OwnerMail ||
                    this.OwnerMail != null &&
                    this.OwnerMail.Equals(other.OwnerMail)
                ) && 
                (
                    this.PeriodEnd == other.PeriodEnd ||
                    this.PeriodEnd != null &&
                    this.PeriodEnd.Equals(other.PeriodEnd)
                ) && 
                (
                    this.PeriodStart == other.PeriodStart ||
                    this.PeriodStart != null &&
                    this.PeriodStart.Equals(other.PeriodStart)
                ) && 
                (
                    this.PhoneCallsAttempted == other.PhoneCallsAttempted ||
                    this.PhoneCallsAttempted != null &&
                    this.PhoneCallsAttempted.Equals(other.PhoneCallsAttempted)
                ) && 
                (
                    this.PhoneCallsFailed == other.PhoneCallsFailed ||
                    this.PhoneCallsFailed != null &&
                    this.PhoneCallsFailed.Equals(other.PhoneCallsFailed)
                ) && 
                (
                    this.PiiRedacted == other.PiiRedacted ||
                    this.PiiRedacted != null &&
                    this.PiiRedacted.Equals(other.PiiRedacted)
                ) && 
                (
                    this.PurgeDate == other.PurgeDate ||
                    this.PurgeDate != null &&
                    this.PurgeDate.Equals(other.PurgeDate)
                ) && 
                (
                    this.ReasonForDeclining == other.ReasonForDeclining ||
                    this.ReasonForDeclining != null &&
                    this.ReasonForDeclining.Equals(other.ReasonForDeclining)
                ) && 
                (
                    this.ReasonForVoiding == other.ReasonForVoiding ||
                    this.ReasonForVoiding != null &&
                    this.ReasonForVoiding.Equals(other.ReasonForVoiding)
                ) && 
                (
                    this.ReassignReason == other.ReassignReason ||
                    this.ReassignReason != null &&
                    this.ReassignReason.Equals(other.ReassignReason)
                ) && 
                (
                    this.Received == other.Received ||
                    this.Received != null &&
                    this.Received.Equals(other.Received)
                ) && 
                (
                    this.Recipient == other.Recipient ||
                    this.Recipient != null &&
                    this.Recipient.Equals(other.Recipient)
                ) && 
                (
                    this.RecipientAction == other.RecipientAction ||
                    this.RecipientAction != null &&
                    this.RecipientAction.Equals(other.RecipientAction)
                ) && 
                (
                    this.RecipientCompanyName == other.RecipientCompanyName ||
                    this.RecipientCompanyName != null &&
                    this.RecipientCompanyName.Equals(other.RecipientCompanyName)
                ) && 
                (
                    this.RecipientCountry == other.RecipientCountry ||
                    this.RecipientCountry != null &&
                    this.RecipientCountry.Equals(other.RecipientCountry)
                ) && 
                (
                    this.RecipientEmail == other.RecipientEmail ||
                    this.RecipientEmail != null &&
                    this.RecipientEmail.Equals(other.RecipientEmail)
                ) && 
                (
                    this.RecipientId == other.RecipientId ||
                    this.RecipientId != null &&
                    this.RecipientId.Equals(other.RecipientId)
                ) && 
                (
                    this.RecipientName == other.RecipientName ||
                    this.RecipientName != null &&
                    this.RecipientName.Equals(other.RecipientName)
                ) && 
                (
                    this.RecipientRoleName == other.RecipientRoleName ||
                    this.RecipientRoleName != null &&
                    this.RecipientRoleName.Equals(other.RecipientRoleName)
                ) && 
                (
                    this.RecipientTemplateRoleName == other.RecipientTemplateRoleName ||
                    this.RecipientTemplateRoleName != null &&
                    this.RecipientTemplateRoleName.Equals(other.RecipientTemplateRoleName)
                ) && 
                (
                    this.RecipientTitle == other.RecipientTitle ||
                    this.RecipientTitle != null &&
                    this.RecipientTitle.Equals(other.RecipientTitle)
                ) && 
                (
                    this.RecipientType == other.RecipientType ||
                    this.RecipientType != null &&
                    this.RecipientType.Equals(other.RecipientType)
                ) && 
                (
                    this.RecipientUserId == other.RecipientUserId ||
                    this.RecipientUserId != null &&
                    this.RecipientUserId.Equals(other.RecipientUserId)
                ) && 
                (
                    this.RemainingSignatures == other.RemainingSignatures ||
                    this.RemainingSignatures != null &&
                    this.RemainingSignatures.Equals(other.RemainingSignatures)
                ) && 
                (
                    this.RoutingOrder == other.RoutingOrder ||
                    this.RoutingOrder != null &&
                    this.RoutingOrder.Equals(other.RoutingOrder)
                ) && 
                (
                    this.SenderAccountId == other.SenderAccountId ||
                    this.SenderAccountId != null &&
                    this.SenderAccountId.Equals(other.SenderAccountId)
                ) && 
                (
                    this.SenderCompanyName == other.SenderCompanyName ||
                    this.SenderCompanyName != null &&
                    this.SenderCompanyName.Equals(other.SenderCompanyName)
                ) && 
                (
                    this.SenderCountry == other.SenderCountry ||
                    this.SenderCountry != null &&
                    this.SenderCountry.Equals(other.SenderCountry)
                ) && 
                (
                    this.SenderEmail == other.SenderEmail ||
                    this.SenderEmail != null &&
                    this.SenderEmail.Equals(other.SenderEmail)
                ) && 
                (
                    this.SenderIPAddress == other.SenderIPAddress ||
                    this.SenderIPAddress != null &&
                    this.SenderIPAddress.Equals(other.SenderIPAddress)
                ) && 
                (
                    this.SenderJobTitle == other.SenderJobTitle ||
                    this.SenderJobTitle != null &&
                    this.SenderJobTitle.Equals(other.SenderJobTitle)
                ) && 
                (
                    this.SenderName == other.SenderName ||
                    this.SenderName != null &&
                    this.SenderName.Equals(other.SenderName)
                ) && 
                (
                    this.SenderUserId == other.SenderUserId ||
                    this.SenderUserId != null &&
                    this.SenderUserId.Equals(other.SenderUserId)
                ) && 
                (
                    this.SignatureType == other.SignatureType ||
                    this.SignatureType != null &&
                    this.SignatureType.Equals(other.SignatureType)
                ) && 
                (
                    this.SignatureTypeValue == other.SignatureTypeValue ||
                    this.SignatureTypeValue != null &&
                    this.SignatureTypeValue.Equals(other.SignatureTypeValue)
                ) && 
                (
                    this.SignDate == other.SignDate ||
                    this.SignDate != null &&
                    this.SignDate.Equals(other.SignDate)
                ) && 
                (
                    this.Signed == other.Signed ||
                    this.Signed != null &&
                    this.Signed.Equals(other.Signed)
                ) && 
                (
                    this.SignedDate == other.SignedDate ||
                    this.SignedDate != null &&
                    this.SignedDate.Equals(other.SignedDate)
                ) && 
                (
                    this.SignedOnMobile == other.SignedOnMobile ||
                    this.SignedOnMobile != null &&
                    this.SignedOnMobile.Equals(other.SignedOnMobile)
                ) && 
                (
                    this.SignedOnPaper == other.SignedOnPaper ||
                    this.SignedOnPaper != null &&
                    this.SignedOnPaper.Equals(other.SignedOnPaper)
                ) && 
                (
                    this.SignerList == other.SignerList ||
                    this.SignerList != null &&
                    this.SignerList.Equals(other.SignerList)
                ) && 
                (
                    this.Status == other.Status ||
                    this.Status != null &&
                    this.Status.Equals(other.Status)
                ) && 
                (
                    this.StatusChangedDate == other.StatusChangedDate ||
                    this.StatusChangedDate != null &&
                    this.StatusChangedDate.Equals(other.StatusChangedDate)
                ) && 
                (
                    this.StatusChangedTs == other.StatusChangedTs ||
                    this.StatusChangedTs != null &&
                    this.StatusChangedTs.Equals(other.StatusChangedTs)
                ) && 
                (
                    this.StatusComment == other.StatusComment ||
                    this.StatusComment != null &&
                    this.StatusComment.Equals(other.StatusComment)
                ) && 
                (
                    this.Subject == other.Subject ||
                    this.Subject != null &&
                    this.Subject.Equals(other.Subject)
                ) && 
                (
                    this.Successes == other.Successes ||
                    this.Successes != null &&
                    this.Successes.Equals(other.Successes)
                ) && 
                (
                    this.TemplateId == other.TemplateId ||
                    this.TemplateId != null &&
                    this.TemplateId.Equals(other.TemplateId)
                ) && 
                (
                    this.TemplateName == other.TemplateName ||
                    this.TemplateName != null &&
                    this.TemplateName.Equals(other.TemplateName)
                ) && 
                (
                    this.TemplatesCreated == other.TemplatesCreated ||
                    this.TemplatesCreated != null &&
                    this.TemplatesCreated.Equals(other.TemplatesCreated)
                ) && 
                (
                    this.TemplatesCreatedCount == other.TemplatesCreatedCount ||
                    this.TemplatesCreatedCount != null &&
                    this.TemplatesCreatedCount.Equals(other.TemplatesCreatedCount)
                ) && 
                (
                    this.TerminalStatusDate == other.TerminalStatusDate ||
                    this.TerminalStatusDate != null &&
                    this.TerminalStatusDate.Equals(other.TerminalStatusDate)
                ) && 
                (
                    this.TimeToCompleteSeconds == other.TimeToCompleteSeconds ||
                    this.TimeToCompleteSeconds != null &&
                    this.TimeToCompleteSeconds.Equals(other.TimeToCompleteSeconds)
                ) && 
                (
                    this.TimeToDeliver == other.TimeToDeliver ||
                    this.TimeToDeliver != null &&
                    this.TimeToDeliver.Equals(other.TimeToDeliver)
                ) && 
                (
                    this.TotalDocuments == other.TotalDocuments ||
                    this.TotalDocuments != null &&
                    this.TotalDocuments.Equals(other.TotalDocuments)
                ) && 
                (
                    this.TotalEnvelopes == other.TotalEnvelopes ||
                    this.TotalEnvelopes != null &&
                    this.TotalEnvelopes.Equals(other.TotalEnvelopes)
                ) && 
                (
                    this.TotalPages == other.TotalPages ||
                    this.TotalPages != null &&
                    this.TotalPages.Equals(other.TotalPages)
                ) && 
                (
                    this.TotalRecipients == other.TotalRecipients ||
                    this.TotalRecipients != null &&
                    this.TotalRecipients.Equals(other.TotalRecipients)
                ) && 
                (
                    this.TotalSigners == other.TotalSigners ||
                    this.TotalSigners != null &&
                    this.TotalSigners.Equals(other.TotalSigners)
                ) && 
                (
                    this.UniqueSenders == other.UniqueSenders ||
                    this.UniqueSenders != null &&
                    this.UniqueSenders.Equals(other.UniqueSenders)
                ) && 
                (
                    this.UserAccountEmail == other.UserAccountEmail ||
                    this.UserAccountEmail != null &&
                    this.UserAccountEmail.Equals(other.UserAccountEmail)
                ) && 
                (
                    this.UserAccountName == other.UserAccountName ||
                    this.UserAccountName != null &&
                    this.UserAccountName.Equals(other.UserAccountName)
                ) && 
                (
                    this.UserAccountStatus == other.UserAccountStatus ||
                    this.UserAccountStatus != null &&
                    this.UserAccountStatus.Equals(other.UserAccountStatus)
                ) && 
                (
                    this.UserCount == other.UserCount ||
                    this.UserCount != null &&
                    this.UserCount.Equals(other.UserCount)
                ) && 
                (
                    this.UserId == other.UserId ||
                    this.UserId != null &&
                    this.UserId.Equals(other.UserId)
                ) && 
                (
                    this.VerificationStatus == other.VerificationStatus ||
                    this.VerificationStatus != null &&
                    this.VerificationStatus.Equals(other.VerificationStatus)
                ) && 
                (
                    this.VerificationType == other.VerificationType ||
                    this.VerificationType != null &&
                    this.VerificationType.Equals(other.VerificationType)
                ) && 
                (
                    this.ViewDate == other.ViewDate ||
                    this.ViewDate != null &&
                    this.ViewDate.Equals(other.ViewDate)
                ) && 
                (
                    this.VoidedTs == other.VoidedTs ||
                    this.VoidedTs != null &&
                    this.VoidedTs.Equals(other.VoidedTs)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.AccessCodeRequired != null)
                    hash = hash * 59 + this.AccessCodeRequired.GetHashCode();
                if (this.AccessCodesAttempted != null)
                    hash = hash * 59 + this.AccessCodesAttempted.GetHashCode();
                if (this.AccessCodesFailed != null)
                    hash = hash * 59 + this.AccessCodesFailed.GetHashCode();
                if (this.AccountId != null)
                    hash = hash * 59 + this.AccountId.GetHashCode();
                if (this.AuthenticationCategory != null)
                    hash = hash * 59 + this.AuthenticationCategory.GetHashCode();
                if (this.AuthenticationSuccess != null)
                    hash = hash * 59 + this.AuthenticationSuccess.GetHashCode();
                if (this.AuthenticationType != null)
                    hash = hash * 59 + this.AuthenticationType.GetHashCode();
                if (this.AverageTimeToCompleteSeconds != null)
                    hash = hash * 59 + this.AverageTimeToCompleteSeconds.GetHashCode();
                if (this.AvgCompleteSeconds != null)
                    hash = hash * 59 + this.AvgCompleteSeconds.GetHashCode();
                if (this.CaptureMethod != null)
                    hash = hash * 59 + this.CaptureMethod.GetHashCode();
                if (this.Completed != null)
                    hash = hash * 59 + this.Completed.GetHashCode();
                if (this.CompletedTs != null)
                    hash = hash * 59 + this.CompletedTs.GetHashCode();
                if (this.CreatedDate != null)
                    hash = hash * 59 + this.CreatedDate.GetHashCode();
                if (this.CreatedOn != null)
                    hash = hash * 59 + this.CreatedOn.GetHashCode();
                if (this.Creator != null)
                    hash = hash * 59 + this.Creator.GetHashCode();
                if (this.CustomField != null)
                    hash = hash * 59 + this.CustomField.GetHashCode();
                if (this.DeclinedDate != null)
                    hash = hash * 59 + this.DeclinedDate.GetHashCode();
                if (this.DeclinedReason != null)
                    hash = hash * 59 + this.DeclinedReason.GetHashCode();
                if (this.DeliveredDate != null)
                    hash = hash * 59 + this.DeliveredDate.GetHashCode();
                if (this.EnvelopeCount != null)
                    hash = hash * 59 + this.EnvelopeCount.GetHashCode();
                if (this.EnvelopeCreator != null)
                    hash = hash * 59 + this.EnvelopeCreator.GetHashCode();
                if (this.EnvelopeId != null)
                    hash = hash * 59 + this.EnvelopeId.GetHashCode();
                if (this.EnvelopeInitialSendTs != null)
                    hash = hash * 59 + this.EnvelopeInitialSendTs.GetHashCode();
                if (this.EnvelopesBilled != null)
                    hash = hash * 59 + this.EnvelopesBilled.GetHashCode();
                if (this.EnvelopesCompleted != null)
                    hash = hash * 59 + this.EnvelopesCompleted.GetHashCode();
                if (this.EnvelopesCompletedCount != null)
                    hash = hash * 59 + this.EnvelopesCompletedCount.GetHashCode();
                if (this.EnvelopesDeclined != null)
                    hash = hash * 59 + this.EnvelopesDeclined.GetHashCode();
                if (this.EnvelopesSent != null)
                    hash = hash * 59 + this.EnvelopesSent.GetHashCode();
                if (this.EnvelopesSentCount != null)
                    hash = hash * 59 + this.EnvelopesSentCount.GetHashCode();
                if (this.EnvelopesVoided != null)
                    hash = hash * 59 + this.EnvelopesVoided.GetHashCode();
                if (this.EnvelopeVoidedReason != null)
                    hash = hash * 59 + this.EnvelopeVoidedReason.GetHashCode();
                if (this.EodDocumentDescription != null)
                    hash = hash * 59 + this.EodDocumentDescription.GetHashCode();
                if (this.EodDocumentName != null)
                    hash = hash * 59 + this.EodDocumentName.GetHashCode();
                if (this.EodDocumentProfileId != null)
                    hash = hash * 59 + this.EodDocumentProfileId.GetHashCode();
                if (this.EodTransactionId != null)
                    hash = hash * 59 + this.EodTransactionId.GetHashCode();
                if (this.EodTransactionName != null)
                    hash = hash * 59 + this.EodTransactionName.GetHashCode();
                if (this.EventDate != null)
                    hash = hash * 59 + this.EventDate.GetHashCode();
                if (this.ExpirationDate != null)
                    hash = hash * 59 + this.ExpirationDate.GetHashCode();
                if (this.ExpiredTs != null)
                    hash = hash * 59 + this.ExpiredTs.GetHashCode();
                if (this.FailureReason != null)
                    hash = hash * 59 + this.FailureReason.GetHashCode();
                if (this.Failures != null)
                    hash = hash * 59 + this.Failures.GetHashCode();
                if (this.FailureVendorCode != null)
                    hash = hash * 59 + this.FailureVendorCode.GetHashCode();
                if (this.FailureVendorReason != null)
                    hash = hash * 59 + this.FailureVendorReason.GetHashCode();
                if (this.FirstSendTs != null)
                    hash = hash * 59 + this.FirstSendTs.GetHashCode();
                if (this.GroupId != null)
                    hash = hash * 59 + this.GroupId.GetHashCode();
                if (this.GroupName != null)
                    hash = hash * 59 + this.GroupName.GetHashCode();
                if (this.HoursToCompleteEnd != null)
                    hash = hash * 59 + this.HoursToCompleteEnd.GetHashCode();
                if (this.HoursToCompleteStart != null)
                    hash = hash * 59 + this.HoursToCompleteStart.GetHashCode();
                if (this.IdChecksAttempted != null)
                    hash = hash * 59 + this.IdChecksAttempted.GetHashCode();
                if (this.IdChecksFailed != null)
                    hash = hash * 59 + this.IdChecksFailed.GetHashCode();
                if (this.IdCountry != null)
                    hash = hash * 59 + this.IdCountry.GetHashCode();
                if (this.IdMethod != null)
                    hash = hash * 59 + this.IdMethod.GetHashCode();
                if (this.InitialSendTs != null)
                    hash = hash * 59 + this.InitialSendTs.GetHashCode();
                if (this.IpAddress != null)
                    hash = hash * 59 + this.IpAddress.GetHashCode();
                if (this.LastActivity != null)
                    hash = hash * 59 + this.LastActivity.GetHashCode();
                if (this.LastActivityDate != null)
                    hash = hash * 59 + this.LastActivityDate.GetHashCode();
                if (this.LastModified != null)
                    hash = hash * 59 + this.LastModified.GetHashCode();
                if (this.LastSentDate != null)
                    hash = hash * 59 + this.LastSentDate.GetHashCode();
                if (this.LastUsed != null)
                    hash = hash * 59 + this.LastUsed.GetHashCode();
                if (this.MetadataRemoved != null)
                    hash = hash * 59 + this.MetadataRemoved.GetHashCode();
                if (this.NotSigned != null)
                    hash = hash * 59 + this.NotSigned.GetHashCode();
                if (this.NumberOfAuthenticatedRecipients != null)
                    hash = hash * 59 + this.NumberOfAuthenticatedRecipients.GetHashCode();
                if (this.NumberOfCompletedSignatures != null)
                    hash = hash * 59 + this.NumberOfCompletedSignatures.GetHashCode();
                if (this.NumberOfDocuments != null)
                    hash = hash * 59 + this.NumberOfDocuments.GetHashCode();
                if (this.NumberOfPages != null)
                    hash = hash * 59 + this.NumberOfPages.GetHashCode();
                if (this.NumberOfRecipients != null)
                    hash = hash * 59 + this.NumberOfRecipients.GetHashCode();
                if (this.NumberOfSends != null)
                    hash = hash * 59 + this.NumberOfSends.GetHashCode();
                if (this.NumberOfSigners != null)
                    hash = hash * 59 + this.NumberOfSigners.GetHashCode();
                if (this.NumberOfTotalDocuments != null)
                    hash = hash * 59 + this.NumberOfTotalDocuments.GetHashCode();
                if (this.NumberOfTotalPages != null)
                    hash = hash * 59 + this.NumberOfTotalPages.GetHashCode();
                if (this.NumberOfTotalSigners != null)
                    hash = hash * 59 + this.NumberOfTotalSigners.GetHashCode();
                if (this.NumberOfUniqueSenders != null)
                    hash = hash * 59 + this.NumberOfUniqueSenders.GetHashCode();
                if (this.NumberTotalRecipients != null)
                    hash = hash * 59 + this.NumberTotalRecipients.GetHashCode();
                if (this.OtherRecipientsList != null)
                    hash = hash * 59 + this.OtherRecipientsList.GetHashCode();
                if (this.Owner != null)
                    hash = hash * 59 + this.Owner.GetHashCode();
                if (this.OwnerMail != null)
                    hash = hash * 59 + this.OwnerMail.GetHashCode();
                if (this.PeriodEnd != null)
                    hash = hash * 59 + this.PeriodEnd.GetHashCode();
                if (this.PeriodStart != null)
                    hash = hash * 59 + this.PeriodStart.GetHashCode();
                if (this.PhoneCallsAttempted != null)
                    hash = hash * 59 + this.PhoneCallsAttempted.GetHashCode();
                if (this.PhoneCallsFailed != null)
                    hash = hash * 59 + this.PhoneCallsFailed.GetHashCode();
                if (this.PiiRedacted != null)
                    hash = hash * 59 + this.PiiRedacted.GetHashCode();
                if (this.PurgeDate != null)
                    hash = hash * 59 + this.PurgeDate.GetHashCode();
                if (this.ReasonForDeclining != null)
                    hash = hash * 59 + this.ReasonForDeclining.GetHashCode();
                if (this.ReasonForVoiding != null)
                    hash = hash * 59 + this.ReasonForVoiding.GetHashCode();
                if (this.ReassignReason != null)
                    hash = hash * 59 + this.ReassignReason.GetHashCode();
                if (this.Received != null)
                    hash = hash * 59 + this.Received.GetHashCode();
                if (this.Recipient != null)
                    hash = hash * 59 + this.Recipient.GetHashCode();
                if (this.RecipientAction != null)
                    hash = hash * 59 + this.RecipientAction.GetHashCode();
                if (this.RecipientCompanyName != null)
                    hash = hash * 59 + this.RecipientCompanyName.GetHashCode();
                if (this.RecipientCountry != null)
                    hash = hash * 59 + this.RecipientCountry.GetHashCode();
                if (this.RecipientEmail != null)
                    hash = hash * 59 + this.RecipientEmail.GetHashCode();
                if (this.RecipientId != null)
                    hash = hash * 59 + this.RecipientId.GetHashCode();
                if (this.RecipientName != null)
                    hash = hash * 59 + this.RecipientName.GetHashCode();
                if (this.RecipientRoleName != null)
                    hash = hash * 59 + this.RecipientRoleName.GetHashCode();
                if (this.RecipientTemplateRoleName != null)
                    hash = hash * 59 + this.RecipientTemplateRoleName.GetHashCode();
                if (this.RecipientTitle != null)
                    hash = hash * 59 + this.RecipientTitle.GetHashCode();
                if (this.RecipientType != null)
                    hash = hash * 59 + this.RecipientType.GetHashCode();
                if (this.RecipientUserId != null)
                    hash = hash * 59 + this.RecipientUserId.GetHashCode();
                if (this.RemainingSignatures != null)
                    hash = hash * 59 + this.RemainingSignatures.GetHashCode();
                if (this.RoutingOrder != null)
                    hash = hash * 59 + this.RoutingOrder.GetHashCode();
                if (this.SenderAccountId != null)
                    hash = hash * 59 + this.SenderAccountId.GetHashCode();
                if (this.SenderCompanyName != null)
                    hash = hash * 59 + this.SenderCompanyName.GetHashCode();
                if (this.SenderCountry != null)
                    hash = hash * 59 + this.SenderCountry.GetHashCode();
                if (this.SenderEmail != null)
                    hash = hash * 59 + this.SenderEmail.GetHashCode();
                if (this.SenderIPAddress != null)
                    hash = hash * 59 + this.SenderIPAddress.GetHashCode();
                if (this.SenderJobTitle != null)
                    hash = hash * 59 + this.SenderJobTitle.GetHashCode();
                if (this.SenderName != null)
                    hash = hash * 59 + this.SenderName.GetHashCode();
                if (this.SenderUserId != null)
                    hash = hash * 59 + this.SenderUserId.GetHashCode();
                if (this.SignatureType != null)
                    hash = hash * 59 + this.SignatureType.GetHashCode();
                if (this.SignatureTypeValue != null)
                    hash = hash * 59 + this.SignatureTypeValue.GetHashCode();
                if (this.SignDate != null)
                    hash = hash * 59 + this.SignDate.GetHashCode();
                if (this.Signed != null)
                    hash = hash * 59 + this.Signed.GetHashCode();
                if (this.SignedDate != null)
                    hash = hash * 59 + this.SignedDate.GetHashCode();
                if (this.SignedOnMobile != null)
                    hash = hash * 59 + this.SignedOnMobile.GetHashCode();
                if (this.SignedOnPaper != null)
                    hash = hash * 59 + this.SignedOnPaper.GetHashCode();
                if (this.SignerList != null)
                    hash = hash * 59 + this.SignerList.GetHashCode();
                if (this.Status != null)
                    hash = hash * 59 + this.Status.GetHashCode();
                if (this.StatusChangedDate != null)
                    hash = hash * 59 + this.StatusChangedDate.GetHashCode();
                if (this.StatusChangedTs != null)
                    hash = hash * 59 + this.StatusChangedTs.GetHashCode();
                if (this.StatusComment != null)
                    hash = hash * 59 + this.StatusComment.GetHashCode();
                if (this.Subject != null)
                    hash = hash * 59 + this.Subject.GetHashCode();
                if (this.Successes != null)
                    hash = hash * 59 + this.Successes.GetHashCode();
                if (this.TemplateId != null)
                    hash = hash * 59 + this.TemplateId.GetHashCode();
                if (this.TemplateName != null)
                    hash = hash * 59 + this.TemplateName.GetHashCode();
                if (this.TemplatesCreated != null)
                    hash = hash * 59 + this.TemplatesCreated.GetHashCode();
                if (this.TemplatesCreatedCount != null)
                    hash = hash * 59 + this.TemplatesCreatedCount.GetHashCode();
                if (this.TerminalStatusDate != null)
                    hash = hash * 59 + this.TerminalStatusDate.GetHashCode();
                if (this.TimeToCompleteSeconds != null)
                    hash = hash * 59 + this.TimeToCompleteSeconds.GetHashCode();
                if (this.TimeToDeliver != null)
                    hash = hash * 59 + this.TimeToDeliver.GetHashCode();
                if (this.TotalDocuments != null)
                    hash = hash * 59 + this.TotalDocuments.GetHashCode();
                if (this.TotalEnvelopes != null)
                    hash = hash * 59 + this.TotalEnvelopes.GetHashCode();
                if (this.TotalPages != null)
                    hash = hash * 59 + this.TotalPages.GetHashCode();
                if (this.TotalRecipients != null)
                    hash = hash * 59 + this.TotalRecipients.GetHashCode();
                if (this.TotalSigners != null)
                    hash = hash * 59 + this.TotalSigners.GetHashCode();
                if (this.UniqueSenders != null)
                    hash = hash * 59 + this.UniqueSenders.GetHashCode();
                if (this.UserAccountEmail != null)
                    hash = hash * 59 + this.UserAccountEmail.GetHashCode();
                if (this.UserAccountName != null)
                    hash = hash * 59 + this.UserAccountName.GetHashCode();
                if (this.UserAccountStatus != null)
                    hash = hash * 59 + this.UserAccountStatus.GetHashCode();
                if (this.UserCount != null)
                    hash = hash * 59 + this.UserCount.GetHashCode();
                if (this.UserId != null)
                    hash = hash * 59 + this.UserId.GetHashCode();
                if (this.VerificationStatus != null)
                    hash = hash * 59 + this.VerificationStatus.GetHashCode();
                if (this.VerificationType != null)
                    hash = hash * 59 + this.VerificationType.GetHashCode();
                if (this.ViewDate != null)
                    hash = hash * 59 + this.ViewDate.GetHashCode();
                if (this.VoidedTs != null)
                    hash = hash * 59 + this.VoidedTs.GetHashCode();
                return hash;
            }
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        { 
            yield break;
        }
    }
}
