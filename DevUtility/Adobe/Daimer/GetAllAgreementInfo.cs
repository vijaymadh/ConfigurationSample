namespace ConfigurationValidation.Adobe.CSV
{
    using System;
    using System.Collections.Generic;
    using System.Data;
    using System.Data.SqlClient;
    using System.Text;
    using System.Windows.Forms;
    using ConfigurationValidation.Common;
    using EchosignRESTClient.Helper;

    public partial class GetAllAgreementInfo : Form
    {
        public GetAllAgreementInfo()
        {
            this.InitializeComponent();
        }

        string failedEnvelopeIds = string.Empty;

        private SqlConnection sqlConnectionDamler = new SqlConnection("Data Source=ILPT547;Initial Catalog=LocalNeed;Integrated Security=SSPI;User ID=vijay;Password=vijay;");
        private SqlConnection sqlConnectionLocal = new SqlConnection("Data Source=ILPT547;Initial Catalog=LocalNeed;Integrated Security=SSPI;User ID=vijay;Password=vijay;");



        string LoadEnveloeInfo(TempCSV row)
        {
            var oauthRefreshCode = EsignCommon.GetOauthRefreshCode(this.txtAKVClientID.Text, this.txtAKVClientSecret.Text, this.txtAKVVaultUri.Text);
            var AccessApi = EsignCommon.GetAccessAPI(this.txtAKVClientID.Text, this.txtAKVClientSecret.Text, this.txtAKVVaultUri.Text);

            var echoSignRestHelper = new EchoSignRestHelper(AccessApi, this.txtEchoSignClientId.Text, this.txtEchoSignClientSecret.Text, oauthRefreshCode);
            var newEnvelopeInfo = echoSignRestHelper.GetAgreement(row.NewEnvID).Result;
            var oldEnvelopeInfo = echoSignRestHelper.GetAgreement(row.OldEnvID).Result;

            if (newEnvelopeInfo == null && oldEnvelopeInfo == null)
            {
                return "ICMAgreementCode,OldEnvID,OldEnvAdobeStatus,OldEnvLastSignedByAndDate,NewEnvID,NewEnvCreatedDate, NewEnvCancelDate,NewEnvCancelReason";
            }

            var rowData = new StringBuilder();

            var ICMAgreementCode = row.ICMAgreementCode;
            var OldEnvID = row.OldEnvID;
            var OldEnvAdobeStatus = row.OldEnvAdobeStatus;
            var OldEnvLastSignedByAndDate = string.Empty;

            var signedEvents = oldEnvelopeInfo?.events?.FindAll(x => x.type == "ESIGNED");

            foreach (var signedEvent in signedEvents)
            {
                OldEnvLastSignedByAndDate += $"[SignedBy: {signedEvent.actingUserEmail} Signed On: {signedEvent.date}]";
            }

            var NewEnvID = row.NewEnvID;

            var createdEvent = newEnvelopeInfo?.events?.Find(x => x.type == "CREATED");
            var NewEnvCreatedDate = createdEvent?.date;

            var cancledEvent = newEnvelopeInfo?.events?.Find(x => x.type.Contains("CANCELLED"));
            var NewEnvCancelDate = cancledEvent?.date;
            var NewEnvCancelReason = $"{cancledEvent?.type}-{cancledEvent?.description}";

            return $"{ICMAgreementCode},{OldEnvID},{OldEnvAdobeStatus},{OldEnvLastSignedByAndDate},{NewEnvID},{NewEnvCreatedDate}, {NewEnvCancelDate},{NewEnvCancelReason}";

        }

        void CheckEsignEnvelope_Load(object sender, EventArgs e)
        {
            this.txtAKVClientID.Text = Configuration.AkvClientId;
            this.txtAKVClientSecret.Text = Configuration.AkvClientSecret;
            this.txtAKVVaultUri.Text = Configuration.AkvClientKeyVaultUri;
            this.txtEchoSignClientId.Text = Configuration.EchoSignClientId;
            this.txtEchoSignClientSecret.Text = Configuration.EchoSignClientSecret;
            this.sqlConnectionDamler.Open();
            this.sqlConnectionLocal.Open();
        }

        string LoadDocumentStatus(List<TempCSV> data)
        {
            var csvBulder = new StringBuilder();
            var counter = 0;
            foreach (var row in data)
            {
                counter++;

                if (counter != 5)
                {
                    continue;
                }

                counter = 0;
                try
                {
                    csvBulder.AppendLine(this.LoadEnveloeInfo(row));
                }
                catch
                {
                    csvBulder.AppendLine("envelopeid");
                }
            }

            return csvBulder.ToString();
        }


        void btnLoad_Click(object sender, EventArgs e)
        {
            List<AgreementInfo> agreementInfos = this.ReadDataFromDaimler();
            this.ProcessedData(agreementInfos);
            txtFaileEnvelope.Text = failedEnvelopeIds;
            MessageBox.Show("Done");
        }

        private void ProcessedData(List<AgreementInfo> agreementInfos)
        {
            foreach (var agreement in agreementInfos)
            {
                var envelops = this.GetEnvelopsFromDamler(agreement);
                LoadCurrentEnveloeStatus(agreement);

                foreach (var envelopeId in envelops)
                {
                    LoadEnveloeInfo(envelopeId, agreement);
                }

                this.SaveToLocalDB(agreement);
            }
        }


        void LoadEnveloeInfo(string envelopeId, AgreementInfo agreement)
        {
            try { 
            var envelop = new EnvelopeInfo();
            var oauthRefreshCode = EsignCommon.GetOauthRefreshCode(this.txtAKVClientID.Text, this.txtAKVClientSecret.Text, this.txtAKVVaultUri.Text);
            var AccessApi = EsignCommon.GetAccessAPI(this.txtAKVClientID.Text, this.txtAKVClientSecret.Text, this.txtAKVVaultUri.Text);

            var echoSignRestHelper = new EchoSignRestHelper(AccessApi, this.txtEchoSignClientId.Text, this.txtEchoSignClientSecret.Text, oauthRefreshCode);
            var envelopeInfo = echoSignRestHelper.GetAgreement(envelopeId).Result;

            var createdEvent = envelopeInfo?.events?.Find(x => x.type == "CREATED");
            var NewEnvCreatedDate = createdEvent?.date;


            if (envelopeInfo.status=="SIGNED")
            {
                if(string.IsNullOrWhiteSpace(agreement.SignedEnv1))
                {
                    agreement.SignedEnv1 = envelopeId;
                    agreement.SignedEnv1CreationDate = NewEnvCreatedDate;
                }
                else
                 
                {
                    agreement.SignedEnv2 = envelopeId;
                    agreement.SignedEnv2CreationDate = NewEnvCreatedDate;
                }
            }
            else
            {
                var declinedEvent = envelopeInfo?.events?.Find(x => x.type.Contains("REJECTED"));
                if(declinedEvent!=null)
                {
                    var declineDate = declinedEvent?.date;
                    if (string.IsNullOrWhiteSpace(agreement.RejectedEnv1))
                    {
                        agreement.RejectedEnv1 = envelopeId;
                        agreement.RejectedEnv1CreationDate = $"Created ON: {NewEnvCreatedDate.ToString()} Declined On {declineDate.ToString()}";
                    }
                    else

                    {
                        agreement.RejectedEnv2 = envelopeId;
                        agreement.RejectedEnv2CreationDate = $"Created ON: {NewEnvCreatedDate.ToString()} Declined On {declineDate.ToString()}";
                    }
                } 
            }
            }
            catch
            {

                failedEnvelopeIds += envelopeId + "\n";
            }
        }


        void LoadCurrentEnveloeStatus(AgreementInfo agreement)
        {
            try
            {
                var envelop = new EnvelopeInfo();
                var oauthRefreshCode = EsignCommon.GetOauthRefreshCode(this.txtAKVClientID.Text, this.txtAKVClientSecret.Text, this.txtAKVVaultUri.Text);
                var AccessApi = EsignCommon.GetAccessAPI(this.txtAKVClientID.Text, this.txtAKVClientSecret.Text, this.txtAKVVaultUri.Text);

                var echoSignRestHelper = new EchoSignRestHelper(AccessApi, this.txtEchoSignClientId.Text, this.txtEchoSignClientSecret.Text, oauthRefreshCode);
                var envelopeInfo = echoSignRestHelper.GetAgreement(agreement.CurrentEnv).Result;
                agreement.CurrentEnvStatus = envelopeInfo.status;
            }
            catch
            {
                failedEnvelopeIds += agreement.CurrentEnv + "\n";

            }
        }

        private List<string> GetEnvelopsFromDamler(AgreementInfo agreement)
        {

            var res = new List<string>();

            using (var envelopeReader = new SqlCommand($"select envelopeId from ESignDocumentInformation where EntityInstanceId='{agreement.SysId.Trim()}' order by etag desc", this.sqlConnectionDamler).ExecuteReader())
            {
                while (envelopeReader.Read())
                {
                    res.Add(envelopeReader["envelopeId"]?.ToString());
                }
            }

            return res;
        }

        private void SaveToLocalDB(AgreementInfo agreement)
        {
             var cmd = new SqlCommand
                {
                    Connection = sqlConnectionLocal,
                    CommandText = $"[CreateUpdateAgreementsInQuestion]",
                    CommandType=CommandType.StoredProcedure
                };

                cmd.Parameters.Add(new SqlParameter("@SysId", agreement.SysId));
                cmd.Parameters.Add(new SqlParameter("@Status", agreement.Status));
                cmd.Parameters.Add(new SqlParameter("@IsActive", agreement.IsActive));
                cmd.Parameters.Add(new SqlParameter("@RejectedEnv1", agreement.RejectedEnv1??string.Empty));
                cmd.Parameters.Add(new SqlParameter("@RejectedEnv1CreationDate", agreement.@RejectedEnv1CreationDate ?? string.Empty));
                cmd.Parameters.Add(new SqlParameter("@RejectedEnv2", agreement.RejectedEnv2 ?? string.Empty));
                cmd.Parameters.Add(new SqlParameter("@RejectedEnv2CreationDate",agreement.@RejectedEnv2CreationDate ?? string.Empty));
                cmd.Parameters.Add(new SqlParameter("@SignedEnv1", agreement.SignedEnv1 ?? string.Empty));
                cmd.Parameters.Add(new SqlParameter("@SignedEnv1CreationDate",agreement.SignedEnv1CreationDate ?? string.Empty));

                cmd.Parameters.Add(new SqlParameter("@SignedEnv2", agreement.SignedEnv2 ?? string.Empty));
                cmd.Parameters.Add(new SqlParameter("@SignedEnv2CreationDate",agreement.SignedEnv2CreationDate ?? string.Empty));

                cmd.Parameters.Add(new SqlParameter("@CurrentEnv",agreement.CurrentEnv ?? string.Empty));
                cmd.Parameters.Add(new SqlParameter("@CurrentEnvStatus", agreement.CurrentEnvStatus ?? string.Empty));

                cmd.Parameters.Add(new SqlParameter("@SignatureType", agreement.SignatureType ?? string.Empty));

                cmd.ExecuteNonQuery();            

        }

        private List<AgreementInfo> ReadDataFromDaimler()
        {
            var dataFromDaimler = new List<AgreementInfo>();
            using (var agreementReader = new SqlCommand("Select sysid, status, isactive, ICMSignatureType, EnvelopeId from ICMGeneralAgreement where sysid in ('13389F42-F394-42BA-ACD6-005C31475401','74DAED0B-CC8D-45A1-95EC-005F513591F9','DD49ACDA-9B43-45EB-845D-00DE18D8F776','3E6E4237-D7EC-47B6-8D55-021C2CB35EDE','9BFCA45B-3030-467D-8B1B-030BEDB34D22','C4979669-8F82-422D-B824-03A0C2A29B28','F676B757-9F48-448A-B024-03E89A4C69A4','54F6B1FB-6393-45B8-815C-04975F897D3D','1809A30D-B988-4752-BB36-04F326D73EAA','072ED8CA-0B26-4424-B022-051ED9120723','8B520245-5B5C-48C8-BDDF-0528804282D5','0B66249D-B1BB-43D6-B24D-0554E98618DF','F6071342-985F-4389-A1BE-05B6C2B99D8B','842577BA-9E37-4484-A39F-0649B7FDF2DD','1A42D261-4A5E-402C-A3F4-0675D3557DC6','FD5B9B0E-1F6B-4DF6-B072-0677BDAE67E8','54FF5494-A31D-48DA-A814-0683B0369505','87A9C1DD-8023-498E-AFAC-06DE80D80DE7','8475F963-C7BA-4DFE-868B-06E82A16340A','845D6AD2-1E64-4044-9793-070B6B5E0EF8','3406C433-B1D3-497B-8508-07564C061D2B','ECB7DB64-C506-4A28-B0A9-07DBA975A6C2','85565263-8236-46F4-A03B-085DACE8F605','F79C530A-ADDB-4F9B-B4FA-0866AB6A002D','D857D5A9-75AA-4717-BB81-0A054D6ED63F','FC72363D-EE09-4E18-AF8B-0A3F7DB723D0','2D115F4F-219F-47A9-87D1-0A88D979A7D3','1EBA4B0F-836F-4F94-AD48-0AECDA013ECB','30DC6E0A-E7CA-4D66-BEC0-0B75E0C80584','67BF6FFD-8180-424A-9330-0B9A022F4E2D','DB5F96F5-93AF-4C1D-9806-0BDF42666457','0FDB026B-AD2C-4AB4-8154-0BE50EEBC667','CE23106A-19E5-4B4E-A737-0BE5F82B9888','708704B2-DB6A-4093-AA4C-0C24798D2DC5','41EEF27D-0C1A-4F8A-BA52-0C4EBD2C86F4','59D5AF07-B385-46B4-A544-0D5BFCF56122','289AB172-401F-4AC1-A6F5-0D7033184AA1','AF9093D1-C5B4-479C-9A64-0DBCB3C3D99C','E2F64A6E-E4BC-49FA-A7C0-0DD4C9841D58','EBD57A77-103D-4821-B3DD-0E37B5041F42','31DBAE42-3596-4B85-ABC0-0F1CF0881E5A','5D67B5A7-F29E-4BAB-B8F5-0F20C3465B16','4FE23408-6A36-443E-8A55-0F9C270EE731','0565925A-7DC7-4951-A2F0-1167A0A8AF68','D53140B5-A834-4746-BCF0-11D1DE2A6C2A','8DD89034-FF2B-498E-81D2-121A231CDAF4','7F49AEF0-2E9C-4055-A56D-12B4CB7689FF','5DA9BD5E-4D66-468A-B245-12C80EB019A6','E93F9604-14BE-4565-9F4C-1356142D4BEE','C825B818-A85B-4B7D-89CB-137469F8E36D','C4622027-EFBF-4903-B9D3-1421622646F1','56FAD260-8CFF-4257-AFBB-15A46B4CB72E','88124B70-31E8-4675-9391-15B1B76B7C5A','9489A414-E04C-4749-98CC-15B439B86BFC','C4A57285-2FC1-45FD-A591-15CE25C1C10F','A44B1A47-1C00-4772-86C4-165F2DE2B3FD','4BD15485-63ED-4201-9355-16A8EDD92A38','CE18CB13-5225-4563-B219-16B5DE76978B','D7448D2D-D16D-4451-9C1A-171D299D1A13','C87AC661-01A1-4774-BF7A-17A092DF2967','391249C7-B0BC-41AE-9B08-17ABA4F5A793','4C94E7B0-717D-4396-853A-184295D3C742','F295C8FD-6BB0-4488-8A56-1856503DCAF4','55378FE1-2616-4EE5-BE5F-185E663173EC','7766B16E-74CE-48F0-8688-19384DBAD16B','D16FE386-F77B-401F-8EF0-19436CCF08AE','882BA257-DC2D-49B0-A590-19622EF76F11','51F5A837-F414-410B-A44B-19FBBB5DDA27','90309F32-9999-4BB7-9AA3-1A2D248515D4','2D9EC165-226B-45BC-8E39-1A9159DBCE72','C5B36C68-B62E-419A-95B5-1A966FD9368C','D5127CB1-00FE-4110-B03D-1B363B482E01','4C90A520-EA60-4D81-8F43-1B582E2D55FA','DAEBCB31-F383-4ABC-A01F-1B5F06025397','05333C61-E144-4717-8DD0-1BB2B2F5FEF7','F5001D26-75FF-4B5F-B92A-1C8CE62E2E0C','C347A389-3F91-4898-993A-1D8F2EFEFB53','E4ADFA04-EA58-4EEE-AFC9-1DB37C668B19','DDEE7A07-140B-4AE0-A220-1DE2DDBD3044','8FC7AA16-D9BA-4976-B753-1E764CC41EEC','478CCCBA-EF3B-4B1E-BF40-1E8F96023F43','8CE55FF2-CF31-4BA3-B16F-1EC7CBBC72A2','5F1CFB93-A47F-4734-90E4-1EFC6D6CAB07','FEEB4B2D-6133-4358-BE29-1F2D77ABB2FD','AD86FBB9-747B-42E3-B059-1FDFA4D364B8','A96D9494-4103-4008-AC9E-2000D1A43478','9918E735-A66A-4D83-963C-21203C7C47C5','CCD61F49-9BA3-445F-AC5B-2170D381DD7C','4B42DBEB-E42D-4423-9976-21736884200E','5D85EEA6-26D2-4EC9-8C01-220367AAC348','B72107B6-BA21-4E7C-93E7-23725D8E9440','8F4DE77D-BFC7-4C3B-8C05-23AFCBD14FEA','64989F8A-54C5-4547-961B-25F18F8EC404','7F3E63DB-3DAE-496F-96B7-25F57DA7ED25','EDF21D28-1176-4DED-B72F-261ADBD1E360','43071EFF-4EF1-4A2D-BA20-26A4BAD3B047','0799694E-446A-460B-822B-26E7C8FE14CA','B346F5E3-3975-42CE-9760-278EC7FBAFAF','6CD7CB19-C132-4745-9EF8-27A61C9932A8','9A18FD75-A1D6-42F6-A089-2812FFA2E206','FB27069C-CF87-4108-87C8-2828E10E5E2D','053BC144-9B8C-4DD6-B739-292A4178B55D','65EBF9F8-D8AF-45D1-8B67-293996A664C9','52AE2A4E-E931-4169-B7A3-2979096B6248','6AC7AF09-C7B2-43D3-A96E-29CDA0E29EF1','693535AE-8905-4B84-BB72-2A205B247BD9','A42B30C5-E605-4518-9B42-2A29FC8D1062','E47DDC2B-37DA-403D-982E-2BA9B0A17A7F','84580437-19E7-4F59-BBC4-2D13BF419253','743BC4F0-C93D-465A-83CA-2DE47D492FFB','8BA9C1A8-6CF8-4591-9AF8-2DFDAA47203D','908E908C-59A1-417C-BBC5-2E0FFC1AD23E','23C9402A-0449-431B-84E5-2E416C382BBC','747FD3AC-33B3-4A21-8D05-2EA2C31A7B6E','A8224845-84B0-46E8-9D15-2F677E191772','BD7B2929-50DC-40D6-8F1C-2F739007CFE6','ABD04149-40B4-4050-9AFB-2FD69708AB62','C3CB88DE-75ED-4C6A-AB72-2FE311504C53','8B4891C9-ACB3-4B64-8218-3023FDE05903','3C27705E-7E96-46D6-ACDA-3052DE6D11D4','2A853FE5-188B-45BB-BEFD-305ED0D1A067','F471D936-1999-4A07-AD97-306033CA95CF','63BD8956-271C-415D-B16F-30C9136F3A1E','091479BD-0E9C-4B0F-8634-3110A458213E','76AC7788-FDC3-4506-B9AD-312097491E8C','3DFCA8F2-BAF3-43EC-A9B9-31B57201D9C0','AF80CC21-CF3B-4187-B4CB-31DA89C44E67','78A369F7-B558-42F9-A061-33433E0D872F','67426B0B-51DD-4CC6-B8A4-3355D1BC53BF','3CA2A2AA-28F4-463A-A0EA-33A13257F0C1','6606BC2D-CE0C-42BB-9BE4-33E5B81DC667','23847936-5FB3-4BD1-9025-344FF889A352','84805C80-69BD-44DC-B661-3588FD34012F','8233E0DC-E592-4CC8-B0A6-3600EC292D5A','D3AC5160-4F19-4453-BAC3-365EBF7B050A','B26CBA5A-A067-4AAA-BEFC-3686CD1C1E41','7F88E696-5FBB-4521-9532-370D8B0CB079','F0F29BB1-2E42-45C4-8FF4-38827176B6EB','D08D20AE-39F1-4C61-BBE0-38CE3EBB7E3F','53332EA3-F0AF-4C6A-AA72-39B022384C1C','70F9EE60-3632-445F-8003-39B98583148C','C54E8A30-7991-40D8-A77A-39C621CBCDE7','49EF8C08-A98C-4F19-B4F3-39F151A3A54A','B040A489-C63F-4500-B702-39FE14896BBE','C436BFF0-4E2D-413B-97B8-3A17ADF3BBC2','974591BF-FAEF-4BDC-8BA3-3A20569B34E3','0D8A15F5-263B-4ED4-BA72-3AB123F22535','5A8C4A41-EFA5-4192-80B4-3AD658D9E6A2','18C82F25-2635-4D8B-867F-3B4C08C976B1','1A52B026-FA28-4140-A593-3B7CABC8FC56','3FA7C7F8-CE16-4D67-A1EC-3B87628D546B','87340057-78C6-40E2-BF72-3B8A8F2A206F','F8D5FB21-94FA-4260-9DC0-3B9D4A42A7D0','F799DA5F-737C-40F7-BB90-3BD2A82E90D3','F4268DA6-0D88-4722-88FD-3CFFC1E90F7D','21C070FD-9C32-4849-B58D-3D1E4512789F','64BA17A7-321F-48AF-91D3-3D96FAA68379','642344DE-C99A-453F-8C9F-3DA12C463C26','2383FFFC-8ECA-41EA-BFB1-3EB1EBBA7EA4','325C6772-AE37-4E30-AB13-3EE38B9CD045','BA587595-9269-47F3-8899-3F458A4A60AD','2711AE4C-7C54-4A0B-89EE-3F57EB79CF57','FF6E9204-6CBC-4CD4-BD7F-3F917778DE5A','B8BCCFAF-A951-4DCE-B95D-3FA6F1B8F26A','4AD515AB-E7D0-4D59-A147-4004C278013D','5ECAD6EF-2EAE-463A-A207-403D6A971F20','1A609425-C8E7-455B-BADE-40EC9B4DC39F','78C57EA3-E308-46DF-95C8-40F263BBBEF7','0F0E6220-7E92-4602-9B08-41832BBEB582','92F9CAFF-962A-4D59-AD63-41E54A5430B3','C9853519-7C0D-40DC-A5B5-420822574B74','99910EB0-0865-40D6-A8E5-421D1C7FD05D','64E66BCD-CA99-417C-80D9-42A63B06E092','F37A0170-4731-432D-8A63-42DE2D3C7C44','4C0AB7C2-C078-48C6-A094-43E3E9C07FF7','1AEFD7FA-7649-4606-9F2D-43F53D995FAC','5F21C3DE-384A-4896-86E1-4404B2F44AC0','9CB4CFEE-15CB-4EC4-9DF1-44A4C7041E86','F14AF6A7-6251-46C7-B38E-4535D27C789E','1AA92C97-9D34-44C8-AB97-45AC61F2C85F','8FB8F6DB-DA8A-423B-B0B4-45B540CFCCD1','C7DD9E81-E083-4863-A4CF-45FCBE14CDD8','39C4C4BB-F734-4E42-AD07-464BE1CE9A5E','DEE4B399-0F03-4257-A542-467C1833710B','6F5FE8B5-AF9C-47D6-8A33-4688C9F99510','B4D161AB-8410-48BE-8443-46DE75D65B53','31E06FDF-733F-4987-989C-4708A103F448','81C413E4-470C-4948-A089-480BF52341A6','C7A159D6-27E2-4C9B-97EB-4878532D7D87','E45597C8-47A9-4D0A-82AD-496498309562','CCB4A8E2-C306-4A66-96C0-49A5A0E9FCC8','30D10C48-8C92-4634-9F0E-49C3E7D2F462','8F0A4C55-3E4F-4604-8953-49F5E05FC799','81B13540-69D0-4731-AD8E-4A6041DFDAEB','FB9286EE-DAC7-4847-B035-4A67D2206AC6','71639624-E389-4F4A-8223-4AB6543AA45F','66263E09-3FE2-4A5B-8BAC-4AE84972C532','A293686E-20A5-4A2C-920C-4B3563597154','C4D7C752-EC2E-49CD-9406-4B9E114C24AC','4FA51BE1-1DF0-40FF-85C5-4BC6C62373C7','E40CC003-4B46-4A57-834C-4C407D99AB88','56B83B51-A4B3-49E6-B908-4C568E211F8E','7ED59903-B65F-41DD-93A4-4CAF5872AC7D','9CBAB451-A88C-41ED-9A32-4CE5595F85D6','58781DF2-38BE-4D46-B75E-4CED7DCB027C','238927CC-9A6D-417B-B5A0-4D172A8A06A4','18FF27FD-ACAA-464B-B99E-4D87E44FE39D','27A918D5-C919-4DE4-8635-4DAE51869074','9C9DD727-D590-4890-8CDE-4DAEA86D9839','026B4693-974B-4264-B9A5-4DD6724EA2AF','568A289B-5639-4D67-A13A-4DF4AC09E0EF','F5DFDE12-58DF-4FCA-A279-4EA586D0F9BC','CA5518FF-42A3-45E8-B1E3-5004101A0ABB','651354B1-5380-455C-9A7D-5076A2D25E95','459BF452-EA24-4901-ACE4-509CE8603E20','CD7BB021-CC45-443D-A81E-510919BD949B','41DCE8E1-A714-4629-847B-5120422A64D0','537A55E2-2D57-49CD-8166-513F1B9E118D','FFBBD302-4261-45C0-A499-51707DE43C61','7E41E5EE-F901-4925-A37A-51B9F96EB11D','2D8080CD-B43C-448F-AD8F-51E124A11530','EE9F76C9-50EF-4312-9450-51E9129F65AD','777A18D8-6F8F-4F7F-A000-52773490C006','E4B1919D-5F78-4C55-9C30-529CB9659E98','B521F8D6-6D95-4195-88AA-52A5B68C9A62','08E31E7C-C9F2-4FAB-BFD2-5329F2407FDC','6B8D6A7C-938D-4B53-B696-5391DA3AB170','565EDC23-CBD7-46DE-B98F-5396166C63CD','9266B209-EF2B-4169-8FDE-53B00C3F0B9E','0491C308-537F-44A9-A2B8-54030D830A04','7572EB1F-F4AB-4ECA-B8B2-544F8B044260','F7E74CD8-19DB-47E1-8B21-547EDAAF295C','F4D8FF76-B01A-4244-8662-549B35C40836','46466675-F6BA-4C97-8AB6-54A0007C488E','1ED12EF5-43EA-4AD7-81FC-54B694C54983','8D1A0719-6EDF-4DEF-8B9A-5506A79C69EA','F42B7ADD-5C7F-4692-8106-5529878EDD54','A40966B2-EE52-4611-9D0E-553601D31552','8C1E152B-68BE-41E7-B8AA-554C80BE4286','BC55AAC9-0EF0-425A-A77B-55717C0978B7','394F1B0C-3962-4474-88EF-558F2D289B70','B5FBC6A6-D676-4930-8452-55B7AAF8BF6C','1998BD79-813C-49A9-B56A-562DE682DB5B','43581625-FB06-4B0E-A574-565570E21AB6','7A337172-A823-44A2-8BCA-577A57814910','2E5C5D09-AE9F-4531-97F9-58B176DCA5A7','DCEB3D7A-2165-47FC-AC7C-59C2DC70AD6F','E624E6DC-0FEE-4B3D-B831-59C837A3992D','4A5DA9B7-DD72-4707-AA1D-5A053DAC0354','760A2936-54D8-4ED1-BB3F-5AAAE8874624','7F47773C-C581-400F-9E69-5BD0499CA4CD','4587F86E-7B88-43CF-A060-5C740E05199B','2CF6923A-8A1B-4736-803B-5D0009D50DAD','88F04890-14F5-4D85-8C52-5D4B68067BCC','F81F9F61-4682-44B3-8BD4-5D60E926DB3A','23E74FA1-ADF9-417E-84DB-5D8B6B4D3AE7','0AD54CA9-BD33-439B-8343-5DA02B3166CF','1BF899A1-065F-4B77-BFCA-5DC9CAC94F55','66357E83-5D75-4B05-870B-5E0838A4B262','E9177899-4BE7-47FC-BCC3-5E7DFB0B217F','9A6A1AB5-1977-48DA-874A-5E89996A6025','FE57182B-FD77-4A0D-BCD7-5F0A944CF375','A3DB78FF-BDC6-4057-B092-5F76FA7743E1','5B87D306-FF86-4E1C-9818-5FB3308C5724','464513E5-5C61-4DB5-B5ED-6015781CEE20','AAE531BA-BCCC-499A-B924-6066A1F8CEF2','04D8AF05-BF80-47B4-9F8B-60A245982F2B','E84A0BFD-0F04-4F46-BD3A-614BC99DCAA2','F00A8B2B-DB35-41A1-93E0-618F1CF2DA65','E5057C80-E638-4017-AB00-6205D80FDBF1','172F88B3-B640-4276-83A3-620B699D9CE8','118A98F3-B021-42C5-A06D-623E293F6D6E','51413938-2E85-4163-8813-62D8EDB4AB44','5A0F9927-096F-4C7A-B43E-62FFF944B0E9','1131400F-5791-48C7-A99A-63B05EB37405','23CFE327-3332-48B9-8187-6461AC4DBF25','DFE188DF-DFC5-4771-AFE0-65395604A7A1','8FA9235A-962C-43FC-829E-655BDE662E66','2C777C8D-B00D-424E-BC8C-6574697104F1','32FB5AD6-716A-4602-971C-65746C9768AA','F4FC8242-EFC0-442A-AACF-660D10B27C75','5E5EABC8-FE63-409C-A21C-667AC2789A6B','0BDC895C-4A62-4BF5-B803-66BDEE2333E1','486B6620-EB67-4B0F-8BBB-671CC707120A','5158F1BC-6414-4D44-A7B9-6721FF9DB99F','C030C581-6DD8-4BFE-AE1E-67297C9BF242','D107AAD9-D169-426E-87BE-6733006C39B1','54C8BF38-1766-4F68-AF74-67819A057AEC','277ECDB6-68E4-42CC-AEBD-6872482ED5F0','B611CF5E-D977-46F4-8013-68C6FA3C0C47','D12FEBB7-0C45-4F9E-9B2D-692EAEB5F71D','21931AEC-9070-41E1-898A-693318D87EF7','84AF2E55-C943-48DE-AD28-69CC50085BDB','1FF39E65-DE43-4924-963E-69E52A84C100','E82BB575-B590-4BDB-B0E6-6A0B37644C20','EF31E4BA-421D-47AF-A0AF-6B1C7A1C74BB','4E47D43B-BA41-4BE6-950A-6B39047CBEC2','E3B80931-34EC-4280-9688-6BD077C7F78E','E5D36A82-F917-4E9E-8933-6C2343D337B0','43758314-92D4-450D-9C28-6C49DB739652','47111F4C-B75B-47B4-95E5-6CE4F1A89A75','B1FBDF2C-5467-44FA-95BB-6D09D8F9E03B','018CC561-FB54-4A58-9207-6DB80F7BEB5C','23C6DBB1-FDE3-4BF1-810A-6E1981AEBE19','FFD7509A-DE4F-427D-A5A2-6E5D845C0CDE','E584672C-F066-4BB5-982B-6E74E2FEBC8C','5B562470-6ECE-4A0E-B6FC-6E7D6194E769','24CCD193-6A5A-4484-9F35-6EEF60302D71','551CDCB6-9886-493A-8B7E-6EF7EE3B24AD','C5EDB744-5C69-4D19-8B30-6EFD50060481','82C5CA54-65C8-405C-8FD9-6F2F6B5033D3','3565AE74-4629-4862-8BCD-70041C488CDA','C4EB8BA6-CC3B-4E74-8608-7143AC720748','ED293181-0F62-4E59-BA92-715E3FEED91C','D9994F3A-4253-4F5F-A080-7180D692EF80','62F7ABAF-FB52-48DF-AAA5-731BCB716C37','BC468AFA-447B-4F6B-A4CF-740A3779880D','73A86A30-E586-43BF-873F-7464EE3BC9BA','6DEE924D-1E8B-454C-B32C-7475C8BD78CF','D645C737-C3C2-4C43-AC0D-74B9CB164327','00FF8FA4-EE43-44E6-81BC-75425DB1CD49','7A484A48-C753-406E-9E41-7548A3AB2AFB','FAF15374-BA43-481A-8BC7-76686C0BAAAC','5BB0573B-7566-4F82-BF71-7678D1104762','EA14CB55-BC7F-4008-B56F-771E5AAD6A98','00B483D4-EBEA-4C19-BFFF-7722ADF7C88A','20084D4D-796C-47A0-B9DE-7774D0AB1125','1299DF83-B36F-4290-B78F-779A49353BE0','06147B29-717A-443A-8B37-78EFB3E45007','99DCBF11-573A-4EAA-9B5B-79145060B055','E3F14FEE-DD80-4120-A570-793390E73ABF','4FFC7D2A-19EA-4668-AA93-7970FFC3BF84','65A1827B-40FF-4E23-B59D-797AFA40AB94','DC89E446-252E-4F6B-892C-79A8CECA349C','603C677B-F756-4901-A629-79C07E1F04F9','C3295A87-CBC0-426D-890F-7A26EBE77FF9','5C70B001-09A7-4E17-A484-7ADC5C2C1C35','B4C97232-EFE0-47A7-8505-7B15C30FF82B','38FCC1CD-A059-4606-9D5D-7B4D8695E7B7','5288E7E0-A401-44F9-AF87-7BDA49EE1B25','2AB6FDB0-B794-4A01-A0BC-7CB7438AA19A','B776F815-7EEE-4177-827B-7D58805FDFD6','D5DF8991-D6ED-4B46-A641-7E9E9534FBBC','96528CCC-62B5-426A-900E-7EA820C14A25','0AC42741-D831-469A-AB0E-7EF56B124FA1','5978A4D5-0645-4E0B-B0BC-7F340D25A358','C8BC2A21-5D19-492B-B8EC-7F8385BFA60A','CE3026C7-C8D4-4B76-971C-7F8D41E14A9F','4A385F10-D4C8-45C3-95A2-7FB12C17400C','77BACB72-1DDA-4B9C-84EB-7FBD445E4617','14D44C16-C5B6-4754-AD8A-7FE060F92F74','76A1A52A-8573-4768-992B-800BDD23CA3E','DF2A16E1-FD62-4F76-953E-802EF741DDC9','7D291B24-44A7-4658-A82B-80687D604FFE','181991F4-A8AB-4675-B129-8092BF87F500','3FCECE6E-555D-43A8-BDF0-811D5232D11F','180E61CF-0891-4562-BD88-8126A48B5933','1AAA3310-59B2-4E10-B20F-8133306C9DE6','0EF26BA8-153C-4188-9EA1-8380D421CA8F','2C897F2B-76F4-43CA-B6DC-83D9F5638A65','59CDC00D-1094-4298-A0A7-83E0DC588258','82A64605-3731-4DBE-8D45-83F6D99D9315','EB0C6D28-A93D-402B-A23B-84AD62CDDA38','122188C2-9F0C-43FC-8397-8529DF4ADF9D','3CCE596C-6D58-4E44-985C-8618B94FD266','9188C588-86CB-4ACA-B452-86A6D1A2E726','4A325BB0-3ECE-4B2C-A807-875EDED67A33','698246B3-E587-4599-9A38-87715EA4DCEF','D2D5406F-E2B8-4ECD-A41B-87A3218AA464','9F50347A-6830-49BF-9845-87FDB08D340B','9A968F9B-80E2-4326-A0BD-880ED57C3446','320636F4-208F-4232-91AB-88F238B3D778','FB59BCF8-D298-4B30-82CF-892C92337984','C08AE287-E5EC-4453-9234-8937856D50C8','2BC1730A-A935-4F31-9D51-89756AF9086B','239B0003-2289-4C3E-96E9-8982CE44879E','25F805E6-F4EB-4E91-B78A-8A21E491FD98','BBA49CB3-4DCC-4700-AD05-8A90C7329A76','0D7F2F82-65C7-49B5-86EE-8AAE1D601990','9C7923CD-A3B3-4F00-8877-8AB1D8F44794','262B09A8-583D-4A39-9898-8BB0674246F8','9F6F2515-9A0D-4AC7-8468-8BC2C45641CA','3680FC95-52B9-4832-AAFF-8BCFA5B64EB4','C859D9CF-0F38-412D-A881-8C24D1C43A61','631C39A5-BBF3-4F6F-82FA-8C250E8F3250','80F85F0A-F75B-48AC-8C7A-8CF167CEECF6','393361B9-BDF2-4301-AF0C-8D07FFED61A0','215EB124-D2E7-4061-8F66-8D198245E07A','0FF68E40-FE4B-4C40-93C6-8DA865488961','A40FE8A2-1CEE-4325-A5C5-8DBFA83B6763','768CD17A-66B5-40FE-88DD-8DDD575F90AD','A3990C1F-CB24-4074-AB70-8DFDD76BA79C','BED23B1D-99B3-4365-A8CE-8F525E209AF8','0F5841C7-4514-450B-A52D-8F89108796D5','3969CA43-E497-4864-83DA-8FE87A1A6E01','CA9647C5-CF6C-4B48-84DD-9013C330274A','36B0C6FB-4F81-44C0-BF79-90EE1D9A8BB1','CD9147DF-82EE-4B6E-BF2B-913175927C7B','D9465743-2528-4030-BD81-913253F0FAB8','69797788-98A4-4406-8481-9138192CB208','06CE9B5D-6D68-4057-9B61-91B087EDA59F','6B9C9EC1-5EDF-4EB8-AB76-91D7A8A043D1','8CA3FA79-F029-4D72-A99A-9223F08C38FC','1C9C9BBC-44CA-4024-A17D-924A6B4267D0','0A6D8A99-1D07-42D7-BAE9-9269F4A11EF8','9A960EFB-FD4A-44B5-A049-92BDADC56C56','DC18D99E-7E18-43B3-BF41-932C9AF2BC12','13EE8346-C427-441F-8C98-9345CA642E2D','6BCDEAFA-D8CE-43AD-BBCB-942ADAFE540D','E482BE4C-A169-45AF-8411-94B814B072EE','F1C2D81D-9F71-41F9-B181-953988C32002','490B4B1D-CBC8-41EA-B64A-95635B2C7C02','BB7843A2-D9D5-475D-B25A-9585EEBFB15C','2E825094-4BC9-4A32-8D01-96439257344C','6E042326-1831-4758-B41C-96B99FC7BE27','3CEDBA7E-BAFD-45AF-B2D5-970C9871399D','09004330-D147-4C6D-BF49-971C5BD3CF5C','1C94F6A7-7CC0-4741-A3DF-9740600A7B5A','2261194F-BEEE-42B4-AF61-974BFCDD629A','46A1BF4D-C53A-4292-8933-97E57C3DD47C','1F9EDB13-036C-471D-82CE-9819088E80E9','0C980475-9C9E-4D7F-BA20-98A4CBF40D1A','1213A975-7979-463B-B0FE-98B994BBAD58','97A96DCF-9CC6-4621-A939-98FCA5CB2663','D37AAE5A-C412-4B12-A24F-994694BEAC42','ED01D3C7-DA22-4561-BE31-99A077CC476E','6421610D-5FB2-4CF1-8E3C-9B1F3DED1923','B7A14964-E5E4-4D25-B8CB-9B2A495EF9DF','36DBD184-9668-4304-AE7C-9B474CB170B7','4896A7C4-50E5-4694-A625-9B798CA852CE','D72EE47A-894B-4A23-8929-9B84F31F0C9B','8FE7F50B-BBD1-4FCE-9BAF-9BC552576F5C','DC12AE32-A94A-4995-ACE6-9C08024DC915','1D328BFB-E8B9-46C7-B010-9C0EBC1A73AF','4A5B5611-93A5-423D-A605-9C5520C1674B','AC3B7EF9-9B2A-4194-A0FE-9C7377B9D49E','E5F97563-73EE-4B1E-BC1B-9DF5A0184FEA','71FCA13F-05E4-4EF2-88CB-9E1773D09E95','3EBDD352-12C5-4B1F-8ACC-9E2FFA7BAE1D','2B99C7D9-C81F-4DC0-940D-9E8BF0D632EC','1F96E9B8-1E74-45EA-909A-9F375F9458BD','EC88FC6B-4916-4FF4-8B0F-9FE964349403','19373D45-F704-4E7F-AEE6-A032162B1D28','37AC65C1-C8F7-4FB9-807A-A0F63A6D0F68','943119EF-BAD1-4BCA-8649-A157BE313D11','235CA836-A339-4246-A4BC-A17082F6EF6F','8D5F9221-3B95-493E-918E-A185DF7F666D','0D500D4C-81C3-48EB-8FAE-A1ED34A2487E','AF325F18-9451-437F-AB75-A24C27AB564F','F8F3F915-C328-4CBD-A750-A264757B09DD','2F7EE772-B972-4D2B-845C-A322D9A99FF4','7B3B6CDA-89CD-4E84-8CCA-A39FA1E8243A','529EC923-89AD-4747-B7A6-A3CC0B010CDD','BB883DBA-C0F7-4759-9167-A4250C989CA3','31A1F2F7-2B0C-44F0-812F-A470915C1257','B88E0A98-8342-4A6A-AAF6-A537CE69E23E','DE5A7EDC-7103-451A-B059-A53FAF3F0685','CAF8538C-A00A-4276-8E25-A55388E20848','056C5A6D-A256-4260-8BA2-A560ABAF9B78','116CFEA6-EB4B-45C0-AED3-A60945C74C83','1BFE2976-354E-43D8-9DBA-A62D2A179F59','D2762B09-1188-4333-B01F-A65AB2DCD15E','ECF9FBBC-4A00-406F-8ADA-A6AAF34B09A3','D66D3536-DCE6-45A6-86E6-A6B9960275F0','5D6BB085-152C-47B2-BCFD-A6CC6317A010','1A95E1DB-EB99-402C-8D00-A6CEFFFE69BB','8B7C7307-C2D9-4B2C-A691-A6F03A26C597','FF50CCFB-8F38-44F3-96CC-A7A41E1DF838','EE3AD5AB-1D97-4C77-8149-A7D192016896','9F35C1FC-0E86-4176-8DBE-A7F2A68F5D50','EFB6BFDF-609A-4635-A1F3-A8B4985B865D','8F428F3E-FBC7-41E4-85AD-A8D33ED7B045','4B47C7CD-BCAB-44EB-A242-A94AF9FB62B6','595614AD-5C0A-4F17-AF4A-A9AB0073AAF1','99913800-1EA8-4B87-9693-A9B3E2E1E373','627CF8B0-737F-4D18-97F9-A9E901E315D2','715132B5-2E21-46CD-A850-AA9CDCFB5023','7598D4DD-B6A8-4C71-8F8B-AB0DE70ECE5B','A2D2FB92-92F8-4ECC-A979-AB4881154E5A','FCD739CA-6B7B-46A2-9F3C-ABEE88121444','99303084-441B-4001-9446-ABF723740EEB','6CD0DEAA-A2B0-42A3-A991-AD0BBD3EC650','6229C7F3-9025-486B-9E8B-AD0C6FBE015C','D489EDC1-A633-4DA6-A61E-AD3CF2026904','C8F47CE9-46BD-4859-9121-AE7844FAEBB9','B2D20735-7116-4EA7-8FD6-AEA4E790D91D','71600ED6-A4F7-4A6A-86B4-AF1BC7A81904','0C41B7E1-9EB1-4D76-868A-AF2EF0075F95','6D47C1A0-2B9F-4201-9510-AF907DD2A0B4','008B5F07-F22D-489D-B8DD-AFC005226B07','7CBB5C47-93FF-4810-8A7E-B1C55000525A','EF420B83-32DB-4F31-A16A-B29701B84AB9','B49D24C9-2495-427B-B587-B2E39D7F92DB','9084EB47-A565-49A2-98DE-B3ADE10ECC59','F8E5CBBB-AD66-450E-8C2B-B41D045BF28A','32E1E11C-91ED-4141-9436-B4917B10FB85','6856F709-C46C-462A-87C6-B4AB0E3A9B45','F7546787-4D61-48FD-98CA-B4D0771B38A0','F8851E4D-DBB8-4D50-9A8E-B5009B633A75','EAD048A4-4622-47F3-816A-B54264661718','3FFB9CBD-8D3B-4FC3-97FC-B57C65EF7126','622E17C0-3679-44A9-BFD2-B59987A87D99','72C9A4EB-DB30-490F-A17C-B61A0EBB1A21','3539C700-A3E4-4FB2-8190-B61E8B75103C','F402FECB-96FF-4183-B193-B6C12EEB274C','F2E2B78B-218C-418D-84ED-B82F5BC43C6A','AC42922E-0196-414E-96A4-B836E8F38572','15729834-9F06-49A2-A96C-B867771360E4','D57B79CB-3029-4EA2-9278-B952C655042E','5002D51D-A4A1-40E7-B4B2-B9AFA493A12F','CA024616-F52C-4BA5-B4FC-BB185CE20B71','B22187C0-5B8A-4996-801A-BB2D031E9A38','B52E4F06-7A46-4CF0-8726-BB6746CBCF6F','854E1AAD-8D45-4C6E-BF34-BBEC21FE3645','09D575F0-A12A-433A-B9FB-BC97E627565E','8BDB313F-2043-4826-98CF-BD899623032C','E9A95067-9DCF-4BF1-8C30-BD8E05AC840F','80014C91-1B3F-46DD-9C2B-BE89BEAE6293','89AB2B41-3BF3-4441-9066-BE8BCEA9A811','E4D48513-7B9E-420E-9577-BEC9F51000C8','5D66BD40-FBE1-4F67-A3C7-BEF52109F009','C5F07691-00AA-47A7-8CEE-BEF9ADBB0833','E72B540C-68C2-4793-8023-BF20AA7924D2','55285A3F-E6A8-498C-9137-BFBD280B6EDD','E54A49A5-0BCE-46D1-8F88-C0278464E570','7249E3D0-1760-466C-8A6A-C036FEA432D7','0165FE08-0004-4858-AA7D-C09236892AD3','20A8E32C-35EC-4D2D-A5C8-C0ACA3EAB865','249F8964-9830-418E-B5E5-C0C6819CB68E','2704181B-8519-4085-BFE7-C0F0B080CA65','F3B49BF5-7547-4FE9-9B6E-C190DC5C687D','F8AE527A-3BB6-4B9B-8AB2-C1B6F37CD109','D0440D52-3E53-419D-990D-C1CDF49551D6','9CA418D3-C005-4D28-B097-C1D937637073','4F1DA2DE-B5AB-4051-8DE2-C203FE382FC4','34D792C2-AF8C-4AA8-AF63-C22763C0B040','EA83A29C-A26E-410F-9CFC-C25168EB7354','F87462BE-6F93-4D63-8FB6-C289772FE35F','C35E05F3-0305-404A-A431-C307505EEA26','775FFF62-12ED-49C5-B3FA-C355926B8F3F','CE7BA631-6621-40F0-9D29-C47205865B7A','CAEB7B1A-D39C-45D2-B29A-C4D131B8DC8F','F017E83B-6070-46A7-99C1-C50E0A59579E','A96D71EF-586C-433C-AFA7-C58AF29F2902','51808830-D6F2-4526-B176-C5FC15EE9FB8','033E08B4-731A-433F-A7C4-C5FC44D157F5','EE244CD6-0864-44B2-BC6F-C62B17F8151A','1C1ADC5C-B1F4-45E0-91A3-C70A2F2BE5A9','E149F24C-039D-4D38-A040-C76134C08E6E','7E176C59-3983-42B2-BE85-C78EE71FA217','473F1B60-AA88-442C-95DF-C7C085ED3A25','FCF73D32-419C-49C4-B48F-C7CF578A7324','36336DBB-1497-494B-8BA4-C81240CCAFD2','7148D53B-3B7E-48B0-ADA1-C87AA153C24A','39528CC3-6172-40A1-A3EC-C8865CD43090','F229827C-811A-4F5F-B0F1-C8B11B2B1122','CF5BC267-30DF-4237-BCF4-C8F8F7BAF51D','C352DB6B-2F51-422D-AE36-C9239DDFCC88','A1299DE7-09B0-4A04-BF76-C97F22136BB5','1918FC52-EE28-4A71-AB6C-CA207477D3E6','C76F501C-7162-4C61-B449-CAD545115E5E','B4ABD9D1-1DDD-4023-A07F-CADA428E0593','B454978C-BB9B-49FF-8983-CB6B955BD72B','D40BC3A7-A0F9-4E4A-9849-CBA004569E05','1E344D42-E999-4F67-8171-CC1EC4D45CF9','0A87C532-3FF4-442D-8D5F-CCFEE4222FDB','CA064FBB-5E6A-486C-A201-CD219D395280','025062C5-0D27-4728-A08B-CD5CE85BF070','8C1C5263-C824-4003-9169-CDF0129ED2AD','3C7DBF86-A137-4707-A6C5-CE4A1EB4E2CC','6F7802B9-2ADA-48A3-81F6-CF16D65AED9C','80250A16-1194-4BA7-BB84-CFCC718F2AAF','A1625BF2-27B4-4F91-A70A-D02733B125C3','502F2570-D3EA-4770-AA87-D077ED52AB96','0C90FDF7-FDEC-416D-8CF1-D0E9C4CAC28B','AE81C60C-F89D-4D10-B1AB-D18CA13D0EF2','12837126-B93A-4E96-8B46-D1DA41DBEC16','843B885F-2A8E-470F-B50A-D25E2A169434','7156806F-03E4-409F-83F1-D2ADE744572F','950A7A3E-B999-48BB-9FA0-D2C4ABBE9392','1213378D-A7A5-4609-9362-D33138FD0E45','A00F80AE-EA3F-4D02-9C30-D3C78A50FAC9','E79137DE-BD69-463D-A952-D4067D4B699C','F5BECC6B-B2CB-443D-A52E-D42D90FC3DC6','6A8CCB6C-A078-4091-AD9A-D48EEB1D066D','C46768B5-1FFC-450A-835D-D4979E921D49','2CE1DA77-B208-46C1-81D7-D4BBD3B2ADEB','02A4DE15-22DA-4201-A146-D5A413D5B8E4','595A5929-0224-4A9F-86A8-D6056826751B','8ECEC63A-59D7-44B2-B6B5-D611ECBF9015','7E6F101A-F149-4133-B211-D6E610C6192A','EDF0B60F-6936-4ED3-88A6-D75BC1215106','37C4F752-89A4-4D06-BA3E-D79A8CF118E3','9039BCA0-18DB-402F-9DD1-D85ACD9A93FC','83D9A5C7-2425-42B6-B9F5-D92C26B46E00','04D2AE9F-EFA1-41DB-ACD1-D9CDA59979AB','AABC014A-EEAA-46C1-B61D-D9E8BB47BBE3','8342EA52-DB3F-45B3-BCD9-DA951350E51A','4108DE1B-528C-4D4C-AB94-DB7B0F24AE7C','76766BD1-5691-4E9C-8FC3-DB93C1005978','C58C3518-0359-41EE-80CB-DBC771EC24F6','AFB6D0B4-8FE2-45DE-8D18-DBE733E8D794','199348FD-7616-4C80-BDF1-DBF496E3E27E','6557B1CE-0563-48E3-B699-DE2E7644CAE0','DBE1CF0A-B7F7-4D1E-BBAA-DE5EDEBD1191','850E61F5-27D2-4889-96E4-DE6CF37228DE','AB4DC326-2622-4B6A-A848-DE809800B5F9','2DE3D51F-3D9A-4B06-817E-DE8BDD2E3240','5917CC96-FDE2-41CF-B21D-DFA973E11D85','8438D989-5274-4B12-A7A0-E02C7485184C','8769309C-112D-403E-8A65-E09EFE3FAF56','36E818F1-993C-4845-B24E-E0A9276A9945','01132836-2EF0-4DF0-9B11-E24C5A733E28','11A1992A-2AB9-4D4B-B1E7-E2766407B883','B67A4101-769C-4D62-8734-E2A4BB4E7161','A0BDB3E4-9B88-4869-9B2D-E2D4322A3CFD','007EBCBB-CDB1-4392-AD02-E2DA15D80181','C541AB11-6FC7-41EC-8D5F-E38E10A4EF5D','A71A8875-97D3-4542-8A9E-E397D5F0BA12','9029E656-28D5-4069-A8D0-E3BC08FE4FD7','75399D7F-4AE4-4EDE-ACE0-E3C1F10E11CD','D005803E-D2FA-4D57-A1EB-E3E46DDFA8EB','5E23CBB5-390F-4AF3-BE96-E4473087210F','3D85B9E9-A740-4BFE-910F-E46E248269AA','14969513-7AE4-4FC0-A2E8-E4E919CC0C20','E2347352-F609-4C3F-8B67-E675608525A2','3CE8BE26-E08D-404C-85D0-E6C022F9E59C','1D8301CC-5AE7-4B33-89B2-E70889CF211F','D72E9D88-7BF8-4D19-A2FF-E7D9AD27B6B5','01AC16A9-A903-4923-BE54-E895D65CFF8D','560AF498-0B3D-4277-89C5-E897EAF1D456','D95338CC-FF85-46E9-8EF8-E9B22D4092C9','6696ED00-269D-4C59-92E3-E9C42F027A5D','4C721491-59F0-4907-91AD-E9D499EE8485','815B5730-CB94-4CC5-90FB-E9E240969F8C','945EE48C-3D8C-4E8E-9D59-E9F83A58FD76','3B078B3E-67D5-4047-9DA8-EA04887957CB','54A4D079-D121-4D7F-913B-EA08DEDD3880','F284ACCF-87A1-43BA-86FB-EA19EA22A3A4','7530F627-4590-4574-821E-EAC454F7ED92','45993CF4-43A2-43AF-AF85-EAD88ED7DA28','E748738F-CF97-4281-92BC-EB410B3FD2A1','EAF9DBDB-1334-4E72-BB3F-EB64EB9C2F4E','43E07606-F9C5-447E-9875-EB7F57DB221F','A6E91860-C68D-4207-8354-ED2479E170B1','6F99B40D-623C-4878-AA81-EE1A2413F737','9D164FAB-374D-4139-866B-EE461EAA980F','BC3DF89F-CBEB-4256-9018-EE59C5834D4D','74014106-E637-4FAF-878B-EEBE4882929D','C5095E7D-3722-450E-AD5F-EFB687E2F880','89C2BAA3-AFED-4153-8F68-F0CB38C8EB0C','E5E73C01-E20F-4B7E-A48A-F13183D8BD34','CE9A945F-B76C-4DB5-985C-F24D571EE5A9','A2B4DC93-0E0C-41E4-8BBF-F2A4147D8C84','EC7FE048-64CB-4AA3-9069-F38A8ABC917F','0B21D160-B2C5-49B1-A6E9-F38B6FD3A923','FAB341A6-AFE2-44E7-9D6F-F38F2CF3B46D','E1292D91-E159-4CF1-B2B1-F3DF47242647','700FDFD2-6E6C-4E6D-B20E-F40B6808214B','ECD2BE35-2DEE-47D8-88BA-F41E2CB9D293','C180CBC4-2AF1-4EB2-A6C3-F4C5094DC808','F0160FA1-6EAF-47CE-9339-F5E38C885306','A90B5218-2455-472F-AA45-F66984EDB273','5AA9A5DA-C0F4-4B1E-A5D1-F75E6A03349E','D196174F-F413-42E7-B16F-F7A33F0E3070','350EDF2B-0A04-4D16-8CF5-F7C678E84E00','40CF9123-6338-42F6-A9BA-F7FC91A0B980','21AD7689-513A-407F-9138-F80041A90E07','F4240FF6-B649-41F7-AA5A-F8020076012D','9F140EBE-EB3A-42E5-906C-F8E844C1DEBF','072C0D53-76FC-4021-B8A5-F92BC0E2EAA5','31FF72E4-038A-4603-8DF2-F96274422ECF','C20389B6-B9CB-4ABE-B703-FA313121D116','2CEF2FA9-564C-4704-B98B-FAAC4C66B24A','3FC97EFF-C141-49ED-8B38-FACCCE751AB4','2BE59927-E4E7-4B94-A5F4-FAD263FDF7F4','8AF8624C-4E7A-41D6-8357-FB449941CB7E','85F2D9E0-2524-40CF-A627-FBC1EAA31AE2','BAFDE175-F719-4DAF-98E3-FBF2C7590B5B','11505FA4-954F-4684-A6B5-FBFB4CA9C9D5','A8178990-3087-48D6-83F1-FC5A399DC3B0','A1E149F1-393A-40ED-95AD-FCDE83D3B12D','64391239-23FC-46B1-AD26-FD06F924DB13','A11BB08A-CFF5-497B-8326-FD1BE5DDF0C6','D79F9919-4A36-4452-B088-FD28251C411E','02B02F1B-94F7-4ADE-86E8-FDA469ECD278','AD5C45EC-335A-472B-A187-FDDC9BC6D618','42BE789E-AD60-40CD-B194-FDDCAF15C1C8','02F6A9FA-5793-47A0-A15F-FDFB97CB2FA1','E0600DBD-2581-4D3C-84E4-FE10F3958C21','3B336E5C-C3DE-48F5-9EF0-FEC240C0387F','597C0C05-87F2-4DBE-A3A6-FF858869942F','D27698F7-FDEC-4143-A9A5-FFB475FDB8D6','2C2D246E-B11A-45BA-A83D-FFBACBA387B6','670269D4-680C-4550-A01E-FFC6C2675A62')", this.sqlConnectionDamler).ExecuteReader())
            {
                while (agreementReader.Read())
                {
                    var daimlerRow = new AgreementInfo();
                    daimlerRow.SysId = agreementReader["sysid"]?.ToString();
                    daimlerRow.Status = agreementReader["status"]?.ToString();

                    daimlerRow.IsActive = agreementReader["isactive"] == null ? false : Convert.ToBoolean(agreementReader["isactive"].ToString());
                    daimlerRow.SignatureType = agreementReader["ICMSignatureType"]?.ToString();

                    daimlerRow.CurrentEnv = agreementReader["EnvelopeId"]?.ToString();
                    dataFromDaimler.Add(daimlerRow);
                }
            }

            return dataFromDaimler;
        }

        private List<AgreementInfo> ReadDataFromDaimlerShort()
        {
            var dataFromDaimler = new List<AgreementInfo>();
            using (var agreementReader = new SqlCommand("Select sysid, status, isactive, ICMSignatureType, EnvelopeId from ICMGeneralAgreement where sysid in ('13389F42-F394-42BA-ACD6-005C31475401','74DAED0B-CC8D-45A1-95EC-005F513591F9','DD49ACDA-9B43-45EB-845D-00DE18D8F776','3E6E4237-D7EC-47B6-8D55-021C2CB35EDE','9BFCA45B-3030-467D-8B1B-030BEDB34D22','C4979669-8F82-422D-B824-03A0C2A29B28','F676B757-9F48-448A-B024-03E89A4C69A4','54F6B1FB-6393-45B8-815C-04975F897D3D','1809A30D-B988-4752-BB36-04F326D73EAA','072ED8CA-0B26-4424-B022-051ED9120723','8B520245-5B5C-48C8-BDDF-0528804282D5','0B66249D-B1BB-43D6-B24D-0554E98618DF','F6071342-985F-4389-A1BE-05B6C2B99D8B','842577BA-9E37-4484-A39F-0649B7FDF2DD','1A42D261-4A5E-402C-A3F4-0675D3557DC6','FD5B9B0E-1F6B-4DF6-B072-0677BDAE67E8')", this.sqlConnectionDamler).ExecuteReader())
            {
                while (agreementReader.Read())
                {
                    var daimlerRow = new AgreementInfo();
                    daimlerRow.SysId = agreementReader["sysid"]?.ToString();
                    daimlerRow.Status = agreementReader["status"]?.ToString();

                    daimlerRow.IsActive = agreementReader["isactive"] == null ? false : Convert.ToBoolean(agreementReader["isactive"].ToString());
                    daimlerRow.SignatureType = agreementReader["ICMSignatureType"]?.ToString();

                    daimlerRow.CurrentEnv = agreementReader["EnvelopeId"]?.ToString();
                    dataFromDaimler.Add(daimlerRow);
                }
            }

            return dataFromDaimler;
        }
    }
}
