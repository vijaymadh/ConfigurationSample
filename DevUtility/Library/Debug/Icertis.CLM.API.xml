<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Icertis.CLM.API</name>
    </assembly>
    <members>
        <member name="T:Icertis.CLM.API.ActionFilters.CertificateTokenValidationHandler">
            <summary>
            The Certificate Authentication delegation handler.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.ActionFilters.CertificateTokenValidationHandler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Icertis.CLM.API.ActionFilters.CertificateTokenValidationHandler"/> class
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.ActionFilters.CertificateTokenValidationHandler.CertificateValidator">
            <summary>
            Gets or sets Certificate validator to use. Any class that implements ICertificateValidator can be used.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.ActionFilters.CertificateTokenValidationHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Overrides the base SendSync to intercept and process requests.
            The Service user used should have appropriate privileges to get data. 
            </summary>
            <param name="request">Http request object</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Returns an async task with either an http error or base async results</returns>
        </member>
        <member name="M:Icertis.CLM.API.ActionFilters.CertificateTokenValidationHandler.ServeServiceAPI(System.Net.Http.HttpRequestMessage)">
            <summary>
            Serves the Service API.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="M:Icertis.CLM.API.ActionFilters.CertificateTokenValidationHandler.ServeAPI(System.Net.Http.HttpRequestMessage)">
            <summary>
            Services the API.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="T:Icertis.CLM.API.ActionFilters.ClientTokenValidationHandler">
            <summary>
            Validates tokens for add-in client calls.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.ActionFilters.ClientTokenValidationHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Overrides the base SendSync to intercept and process requests.
            The Service user used should have appropriate privileges to get data. 
            </summary>
            <param name="request">Http request object</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Returns an async task with either an http error or base async results</returns>
        </member>
        <member name="T:Icertis.CLM.API.ActionFilters.IdentityValidationHandler">
            <summary>
            The identity validation handler.
            This validation handler will reject requests, if they are not authenticated.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.ActionFilters.IdentityValidationHandler.AuthorizationCheckAbsolutePathWhiteList">
            <summary>
            List of controllers that can that need authorization check.
            </summary>
            <remarks>
            This will act as a white list of paths that support unauthenticated requests.
            </remarks>
        </member>
        <member name="M:Icertis.CLM.API.ActionFilters.IdentityValidationHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
                Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.
            </summary>
            <param name="request">
                The HTTP request message to send to the server.
            </param>
            <param name="cancellationToken">
                A cancellation token to cancel operation.
            </param>
            <exception cref="T:Icertis.ACF.Helpers.Core.Exceptions.AccessDeniedException">If the user is unauthenticated</exception>
            <returns>
                Returns <see cref="T:System.Threading.Tasks.Task" />, the task object representing the asynchronous operation.
            </returns>
        </member>
        <member name="T:Icertis.CLM.API.ActionFilters.JwtTokenValidationHandler">
            <summary>
                JWT security token validation handler.
            </summary>
            <remarks>
                This handler is responsible for validating the security token from clients.
                Upon successful validation, will result in delegating the processing of HTTP response messages
                to another handler or the built-in inner handler as needed.
            </remarks>
        </member>
        <member name="F:Icertis.CLM.API.ActionFilters.JwtTokenValidationHandler.jwtTokenValidator">
            <summary>
                holds the JWT token validator
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.ActionFilters.JwtTokenValidationHandler.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Icertis.CLM.API.ActionFilters.JwtTokenValidationHandler" /> class
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.ActionFilters.JwtTokenValidationHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
                Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.
            </summary>
            <param name="request">
                The HTTP request message to send to the server.
            </param>
            <param name="cancellationToken">
                A cancellation token to cancel operation.
            </param>
            <returns>
                Returns <see cref="T:System.Threading.Tasks.Task`1" />, the task object representing the asynchronous operation.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.ActionFilters.JwtTokenValidationHandler.VerifyApplicationConfigurations">
            <summary>
            Verify and Log missinf Application Configuration settings
            </summary>
            <returns>Boolean value set to true if anty of the config settings are missing</returns>
        </member>
        <member name="M:Icertis.CLM.API.ActionFilters.JwtTokenValidationHandler.addClaimsToAugment(System.Text.StringBuilder,System.Collections.Generic.Dictionary{System.String,System.String}@,Icertis.CLM.Masters.UserInformation)">
            <summary>
            Add Claims to Augment
            </summary>
            <param name="logString">To log in Kibana</param>
            <param name="additionalClaimsToAugment">dictionary of Additional claims</param>
            <param name="user">User entity instance retrieved from ICM</param>
        </member>
        <member name="T:Icertis.CLM.API.ActionFilters.SamlTokenValidationHandler">
            <summary>
                SAML security token validation handler.
            </summary>
            <remarks>
                This handler is responsible for validating the security token from clients.
                Upon successful validation, will result in delegating the processing of HTTP response messages
                to another handler or the built-in inner handler as needed.
            </remarks>
        </member>
        <member name="F:Icertis.CLM.API.ActionFilters.SamlTokenValidationHandler.samlTokenValidator">
            <summary>
                holds the SAML token validator
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.ActionFilters.SamlTokenValidationHandler.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Icertis.CLM.API.ActionFilters.SamlTokenValidationHandler" /> class
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.ActionFilters.SamlTokenValidationHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
                Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.
            </summary>
            <param name="request">
                The HTTP request message to send to the server.
            </param>
            <param name="cancellationToken">
                A cancellation token to cancel operation.
            </param>
            <returns>
                Returns <see cref="T:System.Threading.Tasks.Task`1" />, the task object representing the asynchronous operation.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.ActionFilters.SamlTokenValidationHandler.IsValidXml(System.String)">
            <summary>
               Verify whether XML string is a valid XML
            </summary>
            <param name="xmlString">
                The HTTP request message to send to the server.
            </param>
            <returns>
                Returns <see cref="T:System.Boolean" />, if XML is valid or not.
            </returns>
        </member>
        <member name="T:Icertis.CLM.API.ActionFilters.SetCultureHandler">
            <summary>
            Handler for setting culture
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.ActionFilters.SetCultureHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.
            </summary>
            <param name="request">The HTTP request message to send to the server.</param>
            <param name="cancellationToken">A cancellation token to cancel operation.</param>
            <returns>
            Returns <see cref="T:System.Threading.Tasks.Task`1"/>, the task object representing the asynchronous operation.
            </returns>
        </member>
        <member name="T:Icertis.CLM.API.ActionFilters.SupportProjectionJsonResponseFomatter">
            <summary>
            Support Projections If applied to action.
            </summary>
            <seealso cref="T:System.Web.Http.Filters.ActionFilterAttribute" />
        </member>
        <member name="M:Icertis.CLM.API.ActionFilters.SupportProjectionJsonResponseFomatter.OnActionExecuted(System.Web.Http.Filters.HttpActionExecutedContext)">
            <summary>
            Occurs after the action method is invoked.
            </summary>
            <param name="actionExecutedContext">The action executed context.</param>
        </member>
        <member name="T:Icertis.CLM.API.ActionFilters.TelemetryActionFilter">
            <summary>
            Action filter for logging telemetry
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.ActionFilters.TelemetryActionFilter.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>
             Logging telemetry page views
            </summary>
            <param name="filterContext">input filter context</param>
        </member>
        <member name="T:Icertis.CLM.API.RouteConfig">
            <summary>
            Route Config settings.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.RouteConfig.Register">
            <summary>
            The register.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.RouteConfig.Register(System.Web.Routing.RouteCollection)">
            <summary>
            Register Routes.
            </summary>
            <param name="routes">Route Collection.</param>
        </member>
        <member name="T:Icertis.CLM.API.WebApiConfig">
            <summary>
            Route Configuration.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.WebApiConfig.Register">
            <summary>
                Register configuration.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.WebApiConfig.Register(System.Web.Http.HttpConfiguration)">
            <summary>
            Register Route Configuration.
            </summary>
            <param name="config">Http Configuration.</param>
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:Icertis.CLM.API.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:Icertis.CLM.API.Areas.HelpPage.App_Start.AuthorizeIPAddressAttribute">
            <summary> 
            Only allows authorized IP addresses access. 
            </summary> 
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.App_Start.AuthorizeIPAddressAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>
            forbid based on ip address
            </summary>
            <param name="filterContext">filter context</param>
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.App_Start.AuthorizeIPAddressAttribute.IsIpAddressValid(System.String)">
            <summary> 
            Compares an IP address to list of valid IP addresses attempting to 
            find a match 
            </summary> 
            <param name="ipAddress">String representation of a valid IP Address</param> 
            <returns></returns> 
        </member>
        <member name="T:Icertis.CLM.API.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForMediaType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets the sample directly for all actions with the specified media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,Icertis.CLM.API.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.HelpPageConfigurationExtensions.GetModelDescriptionGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the model description generator.
            </summary>
            <param name="config">The configuration.</param>
            <returns>The <see cref="T:Icertis.CLM.API.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator"/></returns>
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:Icertis.CLM.API.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:Icertis.CLM.API.Areas.HelpPage.ModelDescriptions.ModelDescription">
            <summary>
            Describes a type model.
            </summary>
        </member>
        <member name="T:Icertis.CLM.API.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator">
            <summary>
            Generates model descriptions for given types.
            </summary>
        </member>
        <member name="T:Icertis.CLM.API.Areas.HelpPage.ModelDescriptions.ModelNameAttribute">
            <summary>
            Use this attribute to change the name of the <see cref="T:Icertis.CLM.API.Areas.HelpPage.ModelDescriptions.ModelDescription"/> generated for a type.
            </summary>
        </member>
        <member name="T:Icertis.CLM.API.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Icertis.CLM.API.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:Icertis.CLM.API.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Areas.HelpPage.Models.HelpPageApiModel.UriParameters">
            <summary>
            Gets or sets the <see cref="T:Icertis.CLM.API.Areas.HelpPage.ModelDescriptions.ParameterDescription"/> collection that describes the URI parameters for the API.
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Areas.HelpPage.Models.HelpPageApiModel.RequestDocumentation">
            <summary>
            Gets or sets the documentation for the request.
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Areas.HelpPage.Models.HelpPageApiModel.RequestModelDescription">
            <summary>
            Gets or sets the <see cref="T:Icertis.CLM.API.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the request body.
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Areas.HelpPage.Models.HelpPageApiModel.RequestBodyParameters">
            <summary>
            Gets the request body parameter descriptions.
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Areas.HelpPage.Models.HelpPageApiModel.ResourceDescription">
            <summary>
            Gets or sets the <see cref="T:Icertis.CLM.API.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the resource.
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Areas.HelpPage.Models.HelpPageApiModel.ResourceProperties">
            <summary>
            Gets the resource property descriptions.
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories">
            <summary>
            Gets factories for the objects that the supported formatters will serialize as samples. Processed in order,
            stopping when the factory successfully returns a non-<see langref="null"/> object.
            </summary>
            <remarks>
            Collection includes just <see cref="M:Icertis.CLM.API.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)"/> initially. Use
            <code>SampleObjectFactories.Insert(0, func)</code> to provide an override and
            <code>SampleObjectFactories.Add(func)</code> to provide a fallback.</remarks>
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,Icertis.CLM.API.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,Icertis.CLM.API.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create
            one using <see cref="M:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleGenerator.DefaultSampleObjectFactory(Icertis.CLM.API.Areas.HelpPage.HelpPageSampleGenerator,System.Type)"/> (which wraps an <see cref="T:Icertis.CLM.API.Areas.HelpPage.ObjectGenerator"/>) and other
            factories in <see cref="P:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleGenerator.ResolveHttpRequestMessageType(System.Web.Http.Description.ApiDescription)">
            <summary>
            Resolves the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The type.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Icertis.CLM.API.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="T:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleKey"/> based on media type.
            </summary>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleKey.#ctor(Icertis.CLM.API.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,Icertis.CLM.API.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:Icertis.CLM.API.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:Icertis.CLM.API.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Icertis.CLM.API.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:Icertis.CLM.API.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:Icertis.CLM.API.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:Icertis.CLM.API.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:Icertis.CLM.API.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:Icertis.CLM.API.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Icertis.CLM.API.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="T:Icertis.CLM.API.Configuration.EnableCorsMessagingHandler">
            <summary>
            Enable cors
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Configuration.EnableCorsMessagingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Override default Send Async method
            </summary>3+6
            <param name="request">http request</param>
            <param name="cancellationToken">token</param>
            <returns>http response</returns>
        </member>
        <member name="T:Icertis.CLM.API.Configuration.GlobalErrorMessageHandler">
            <summary>
            Gobal Error Handler for Owin Pipelines
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Configuration.GlobalErrorMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Override default Send Async method
            </summary>
            <param name="request">http request</param>
            <param name="cancellationToken">token</param>
            <returns>http response</returns>
        </member>
        <member name="T:Icertis.CLM.API.Configuration.IcmWebApiExceptionFilter">
            <summary>
            The exception handling attribute.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Configuration.IcmWebApiExceptionFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Icertis.CLM.API.Configuration.IcmWebApiExceptionFilter"/> class.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Configuration.IcmWebApiExceptionFilter.OnException(System.Web.Http.Filters.HttpActionExecutedContext)">
            <summary>
            The on exception.
            </summary>
            <param name="context">
            The context.
            </param>
        </member>
        <member name="T:Icertis.CLM.API.Controllers.AgreementController">
            <summary>
            Agreement Controller
            </summary>
            <summary>
            Agreement Controller
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.AgreementController.agreementModel">
            <summary>
            Agreement Model.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.AgreementController.userModel">
            <summary>
            User Model.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.AgreementController.instanceModel">
            <summary>
            The instance model
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.AgreementController.contractTypeModel">
            <summary>
            ContractType model
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.AgreementController.documentStoreModel">
            <summary>
            The document store model
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Icertis.CLM.API.Controllers.AgreementController"/> class, and the <see cref="T:Icertis.CLM.API.Common.Models.AgreementModel"/> class.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetAgreementFromSearch(System.Guid,System.String)">
            <summary>
            Gets Agreement object From Elastic Search
            </summary>
            <param name="entityInstanceId">Entity Instance Id of the agreement.</param>
            <param name="contractType">Name of the contract type.</param>
            <returns>An <see cref="T:Icertis.ACF.EntityService.Data.EntityBase"/> object.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetAssociationInstancesCountFromSearch(System.Guid,System.String)">
            <summary>
            Gets Agreement associations instances count from elastic search
            </summary>
            <param name="entityInstanceId">Entity Instance Id of the agreement.</param>
            <param name="contractType">Name of the contract type.</param>
            <returns>An dictionary object with the association name and the instance count</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetCascadedInstancesFromSearch(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets cascaded instances from search
            </summary>
            <param name="entityName">Entity name of the cascaded instances</param>
            <param name="attributeName">Attribute name of the attribute on which to cascade</param>
            <param name="attributeValue">Attribute value of the attribute on which to cascade</param>
            <param name="attributesFilter">List of attributes, if provided, gets only those attributes.</param>
            <returns>Cascaded instances.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.FindContractTypes">
            <summary>
            Find approved Contract Types having "TypeOfContract" as "Agreement"
            </summary>
            <returns>Http Response code - ContractType List</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.CreateAgreement(System.Collections.ArrayList,System.String,System.Int64,System.Boolean)">
            <summary>
            Create the <see cref="T:Icertis.ACF.EntityService.Data.EntityBase"/> object.
            </summary>
            <param name="wrapperObject"> Object of the. <see cref="T:Icertis.ACF.EntityService.Data.EntityBase"/> </param>
            <param name="contractType"> Contract Type name </param>
            <param name="loggedInUserId"> logged In User Id </param>
            <param name="getValidationMessage">get validation messages</param>
            <returns> instance ID of the object saved. </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.CreateAgreementWithoutWorkflow(System.Collections.ArrayList,System.String,System.Int64,System.Boolean,System.Guid)">
            <summary>
            Create the <see cref="T:Icertis.ACF.EntityService.Data.EntityBase"/> object.
            </summary>
            <param name="wrapperObject"> Object of the. <see cref="T:Icertis.ACF.EntityService.Data.EntityBase"/> </param>
            <param name="contractType"> Contract Type name </param>
            <param name="ownerId"> Owner Id </param>
            <param name="amendmentCreation">value indicating whether this is an amendment create call</param>
            <param name="parentInstanceId">parent instance id</param>
            <returns> instance ID of the object saved. </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.CreateAndPublish(System.Collections.ArrayList,System.String,System.Int64)">
            <summary>
            Create and publish the <see cref="T:Icertis.ACF.EntityService.Data.EntityBase"/> agreement. 
            </summary>
            <param name="wrapperObject">Wrapper object with agreement and file payload</param>
            <param name="contractType">contract type name</param>
            <param name="loggedInUserId">current user initiating the call</param>
            <returns>Mandatory validation messages, if any</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.CreateAndSendForApproval(System.Collections.ArrayList,System.String,System.Int64)">
            <summary>
            Create and sent the agreement for approval <see cref="T:Icertis.ACF.EntityService.Data.EntityBase"/>. 
            </summary>
            <param name="wrapperObject">Wrapper object with agreement and file payload</param>
            <param name="contractType">contract type name</param>
            <param name="loggedInUserId">current user initiating the call</param>
            <returns>Mandatory validation messages, if any</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.UpdateAgreement(System.Object,System.Int64,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Update the <see cref="T:Icertis.ACF.EntityService.Data.EntityBase"/> object.
            </summary>
            <param name="wrapperObject">Object of the. <see cref="T:Icertis.ACF.EntityService.Data.EntityBase"/></param>
            <param name="loggedInUserId">logged In User Id</param>
            <param name="workflowActionName">Workflow action name</param>        
            <param name="isSavingPartial">Indicates whether a partial agreement is being saved.</param>
            <param name="isWorkflowBookmark">Indicates whether an action is workflow bookmark</param>
            <param name="documentVersionLabel">Document Version Label</param>
            <returns>instance ID of the object saved.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.UpdateAndPublish(System.Object,System.Int64,System.String)">
            <summary>
            Update and publish the <see cref="T:Icertis.ACF.EntityService.Data.EntityBase"/> object.
            </summary>
            <param name="wrapperObject">Object of the. <see cref="T:Icertis.ACF.EntityService.Data.EntityBase"/></param>
            <param name="loggedInUserId">logged In User Id</param>
            <param name="documentVersionLabel">Document Version Label</param>
            <returns>validation messages</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.SaveAgreement(System.Collections.ArrayList,System.String,System.Boolean)">
            <summary>
            Save the agreement.  If exists do Update, otherwise, Create and Publish 
            NOTE:  This method will eventually call CreateAndPublish or UpdateAgreement and should not be used without good knowledge
            </summary>
            <param name="wrapperObject">Wrapper object with agreement and file payload</param>
            <param name="contractType">contract type name</param>
            <param name="getTemplate">flag to indicate if get template by rules should be called</param>
            <returns>Id of saved agreement</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.SaveAgreementAsync(System.Collections.ArrayList,System.String,System.Boolean)">
            <summary>
            Save the agreement.  If exists do Update, otherwise, Create and Publish 
            NOTE:  This method will eventually call CreateAndPublish or UpdateAgreement and should not be used without good knowledge
            </summary>
            <param name="wrapperObject">Wrapper object with agreement and file payload</param>
            <param name="contractType">contract type name</param>
            <param name="getTemplate">flag to indicate if get template by rules should be called</param>
            <returns>Id of saved agreement</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.Publish(System.Guid,System.String,System.String,System.Int64,System.Boolean,System.String)">
            <summary>
            Publish Agreement.
            Generates DOCX file from template if Type of pager is Own Agreement.
            If Clause Assembly is true and template is not selected, creates a blank document.
            Resumes workflow.
            </summary>
            <param name="agreementId"> Agreement Id </param>
            <param name="contractType"> Contract Type name </param>
            <param name="workflowAction"> workflow Action </param>
            <param name="loggedInUserId"> logged In User Id </param>
            <param name="validateMandatoryFields">wether to validate mandatory fields</param>
            <param name="documentVersionLabel">Document Version Label</param>
            <returns> Mandatory validation messages, if any </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.Publish(System.Guid,System.String)">
            <summary>
            Publish Agreement.
            Generates DOCX file from template if Type of pager is Own Agreement.
            If Clause Assembly is true and template is not selected, creates a blank document.
            Resumes workflow.
            </summary>
            <param name="agreementId"> Agreement Id </param>
            <param name="contractType"> Contract Type name </param>
            <returns> Mandatory validation messages, if any </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.SaveWithDocument(System.Guid,System.String,System.Byte[],System.Int64,System.Nullable{System.Boolean},System.String,System.Boolean,System.Boolean,System.String,System.String,System.Boolean)">
            <summary>
            Save agreement with document.
            </summary>
            <param name="agreementId">The agreement id.</param>
            <param name="fileExtension">The file extension.</param>
            <param name="fileBytes">The file bytes.</param>
            <param name="loggedInUserId">The logged in user id.</param>
            <param name="answer">The answer.</param>
            <param name="entityName">entity name</param>
            <param name="cleanupDocument">Indicates whether to clean up the document.</param>
            <param name="addAuditLogForUpload">Indicates whether to add the upload audit log</param>
            <param name="documentVersionLabel">Document Version Label</param>
            <param name="instanceNotes">Instance Notes</param>
            <param name="wordAddinRequest">If request is from word addin</param>
            <returns>The list of action validators.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetAssociatedAgreementClauseList(System.Guid,System.String,System.Boolean)">
            <summary>
            Get associated agreement clause list.
            </summary>
            <param name="agreementId">
            The agreement id.
            </param>
            <param name="contractType">
            The contract type.
            </param>
            <param name="skipAuthCheck">Skip auth check</param>
            <returns>
            List of clauses.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.ProcessAgreementAssignments">
            <summary>
            Process Assignments
            </summary>
            <returns></returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.ProcessAgreementTerminations">
            <summary>
            Process Terminations
            </summary>
            <returns></returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetFile(System.String)">
            <summary>
            Get file.
            </summary>
            <param name="filePath">
            Path of file.
            </param>
            <returns>
            Array of bytes
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetAgreement(System.Guid,System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets an entity instance by its ID.
            </summary>
            <param name="agreementId">
            entity Instance Id
            </param>
            <param name="contractType">
            Contract Type name
            </param>
            <param name="includeChildCollections">
            A flag indicating whether child collections are to be included or not.
            </param>
            <param name="fetchAuditEntries">
            a flag indicating whether to fetch audit logs or not.
            </param>
            <returns>
            Entity instance if found, null otherwise.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetParent(System.String,System.Guid,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets the parent agreement instance
            </summary>
            <param name="childEntityName">Child entity name</param>
            <param name="childId">Instance if of the child contract</param>
            <param name="parentEntityName">Name of the parent contract type</param> 
            <param name="associationName">Association name</param>
            <param name="includeChildCollections">Indicates whether the child collections should be returned along with the agreement instance</param>
            <param name="fetchAuditEntries">Indicates whether audit entries are to be returned along with the agreement instance</param>
            <returns>Parent agreement instance</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.FindAgreements(System.String,Icertis.ACF.EntityService.Data.SearchParameters,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Finds instances satisfying a search criteria.
            </summary>
            <param name="contractType">Contract Type name</param>
            <param name="searchParameters">Search parameters.</param>
            <param name="includeChildCollection">Include child collections.</param>
            <param name="page">Page number</param>
            <param name="pageSize">Count of the instances to fetch</param>
            <returns>
            List of instances satisfying the search criteria.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.DeleteAgreements(System.Collections.Generic.IDictionary{System.Guid,System.String})">
            <summary>
            Deletes specified Agreements
            </summary>
            <param name="agreementInfo">
            Contains Agreement Instance Id as key and Contract Type name as its value
            </param>
            <returns>
            returns the status of the operation, passed or failed
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetTemplatesByRules(System.Object)">
            <summary>
            Evaluates the template rules for the given entity instance, and returns the templates selected by the rules.
            </summary>
            <param name="agreement">
            The instance of the <see cref="T:Icertis.ACF.EntityService.Data.EntityBase"/> object for which the template rules are to be evaluated.
            </param>
            <returns>
            Enumerable of <see cref="T:Icertis.CLM.Masters.Template"/> objects selected by the template rules. Could be empty if no templates are selected.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetCommitmentTypes">
            <summary>
            Get all commitment types without any search condition.
            </summary>
            <returns>Http Response code.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetCommitmentFrequency">
            <summary>
            Get all commitment Frequency without any search condition.
            </summary>
            <returns>Http Response code.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetCommitmentStatus">
            <summary>
            Get all commitment status without any search condition.
            </summary>
            <returns>Http Response code.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Icertis.CLM.API.Controllers.AgreementController.SaveCommitment(System.String,Icertis.CLM.Masters.Commitment,System.String)" -->
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.SaveActionDetails(System.Collections.ArrayList)">
            <summary>
            saves Action Details
            </summary>
            <param name="wrapperObject">
            ArrayList of objects
            </param>
            <returns>
            Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.SaveCommitmentWithActionDetails(System.Collections.ArrayList)">
            <summary>
            Save Commitment With ActionDetails
            </summary>
            <param name="wrapperObject">ArrayList of objects</param>
            <returns>Response code.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.DeleteCommitment(System.String,System.String,System.String)">
            <summary>
            Deletes commitment having given commitment SysId from the AgreementCommitment collection of agreement with given Agreement Id.
            </summary>
            <param name="agreementId">
            Agreement Id.
            </param>
            <param name="commitmentSysId">
            commitment Id
            </param>
            <param name="contractTypeName">
            contract Type Name
            </param>
            <returns>
            Http Response Message
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetDynamicMetadataNames(System.Object,System.String,System.Boolean)">
            <summary>
            Get Dynamic Metadata Names
            </summary>
            <param name="agreement">entity instance</param>
            <param name="contractType">Contract Type name</param>
            <param name="isMetadataRuleToBeEvaluated">is Metadata rule to be evaluated or not</param>
            <returns>Dynamic Metadata Name List</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.SaveAssociatedDocument(System.Object,System.String,System.String,System.Guid,System.Boolean)">
            <summary>
            Saves the Associated Document
            </summary>
            <param name="requestBody">
            Request body containing child instance and file byte array
            </param>
            <param name="childContractType">
            Name of the child <see cref="T:Icertis.CLM.Masters.ContractType"/>
            </param>
            <param name="parentContractType">
            Name of the parent <see cref="T:Icertis.CLM.Masters.ContractType"/>
            </param>
            <param name="parentAgreementId">
            SysId of the parent contract instance
            </param>
            <param name="createSynchronously">
            Indicates whether associated document is to be created synchronously or asynchronously
            </param>
            <returns>
            SysId of the saved child instance
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.SaveAssociatedDocumentWithoutWorkflow(System.Object,System.String,System.String,System.Guid,System.Boolean)">
            <summary>
            Saves the Associated Document
            </summary>
            <param name="requestBody">
            Request body containing child instance and file byte array
            </param>
            <param name="childContractType">
            Name of the child <see cref="T:Icertis.CLM.Masters.ContractType"/>
            </param>
            <param name="parentContractType">
            Name of the parent <see cref="T:Icertis.CLM.Masters.ContractType"/>
            </param>
            <param name="parentAgreementId">
            SysId of the parent contract instance
            </param>
            <param name="createSynchronously">
            Indicates whether associated document is to be created synchronously or asynchronously
            </param>
            <returns>
            SysId of the saved child instance
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetAssociations(System.Guid,System.String)">
            <summary>
            Gets associations for the selected agreement
            </summary>
            <param name="agreementId">
            agreement instance identifier
            </param>
            <param name="contractType">
            Contract Type name
            </param>
            <returns>
            collection of associations
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetAgreementTeamMemberUserInformation(System.Guid)">
            <summary>
            Gets agreement team members' user information
            </summary>
            <param name="agreementId">Agreement id</param>
            <returns>Team members' user information</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetTeamMemberApprovalActionNotes(System.Guid,System.String)">
            <summary>
            Gets team members' approval action notes
            </summary>
            <param name="agreementId">Agreement instance identifier</param>
            <param name="entityName">Name of the entity</param>
            <returns>Team members' approval action notes</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetAgreementTeamMembersForUser(System.Guid,System.String,System.Int64)">
            <summary>
            Gets agreement team members for the specified user
            </summary>
            <param name="agreementId">
            agreement instance identifier
            </param>
            <param name="entityName">
            Contract Type name
            </param>
            <param name="userInformationId">
            user identifier
            </param>
            <returns>
            returns list of team member objects for the user id passed
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetTeamDetails(System.Guid,System.String)">
            <summary>
            Gets Team associations for the selected agreement
            </summary>
            <param name="agreementId">
            agreement instance identifier
            </param>
            <param name="entityName">
            Contract Type name
            </param>
            <returns>
            collection of associations
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.SetTeamMembersActionInfo(System.Collections.Generic.List{Icertis.CLM.API.Models.Mobile.EntityTeamMember},Icertis.ACF.EntityService.Data.EntityBase,System.Collections.Generic.IEnumerable{Icertis.CLM.Masters.TeamMember})">
            <summary>
            Sets Team Members' approval indication, approval notes and action pending since information.
            </summary>
            <param name="teamMembersLight">Entity Team Members</param>
            <param name="agreement">Agreement Instance</param>
            <param name="teamMembers">Team Members</param>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.SetTeamMembersDisplayIcon(System.Collections.Generic.List{Icertis.CLM.API.Models.Mobile.EntityTeamMember},System.Collections.Generic.IEnumerable{Icertis.CLM.Masters.TeamMember})">
            <summary>
            Sets Team Members' display icon.
            </summary>
            <param name="teamMembersLight">Entity Team Members</param>
            <param name="teamMembers">Team Members</param>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.AddTeamMembers(System.Guid,System.String,System.String)">
            <summary>
            Add user to Team associations for the selected agreement
            </summary>
            <param name="agreementId">
            agreement instance identifier
            </param>
            <param name="entityName">
            Contract Type name
            </param>
            <param name="newmembers">
            team member json
            </param>
            <returns>
            collection of team associations
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.RemoveTeamMember(System.Guid,System.String,System.String)">
            <summary>
            Remove user to Team associations for the selected agreement
            </summary>
            <param name="agreementId">
            agreement instance identifier
            </param>
            <param name="entityName">
            Contract Type name
            </param>
            <param name="member">
            team member json
            </param>
            <returns>
            collection of team associations
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.HasPrivilege(System.String,System.Int32,System.Guid)">
            <summary>
            Check privilege
            </summary>
            <param name="entiyName">string entityName</param>      
            <param name="privilege">The privilege</param>        
            <returns>The boolean value</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetAuditHistory(System.String,System.Guid)">
            <summary>
            Get agreement audit history
            </summary>
            <param name="agreementId"> agreement instance identifier</param>
            <param name="entityName"> Contract Type name </param>
            <returns> collection of audit log</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.ResetAgreementExpiry(System.String,System.String,System.String,System.String,System.Int64)">
            <summary>
            Resets the agreement expiry
            </summary>
            <param name="entityInstanceId">Agreement InstanceId</param>
            <param name="newExpiryDate">Future date as new expiry</param>
            <param name="oldExpiryDate">Old date of expiry for agreement</param>
            <param name="contractType">Contract type name</param>
            <param name="modifiedBy">Modified By</param>
            <returns>success or failure</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetAssociations(System.String,System.Boolean)">
            <summary>
            Gets associations for the selected agreement
            </summary>
            <param name="contractType">Contract Type name</param>
            <param name="skipMaster">Indicates whether to skip the associations with entities marked as "Master" (e.g. Team, Note)</param>
            <returns>
            collection of associations
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetAssociatedInstances(System.String,System.Guid,System.String)">
            <summary>
            Gets the associated documents / agreements based on the association 
            </summary>
            <param name="parentContractType">
            parent contract name
            </param>
            <param name="parentAgreementId">
            parent contract identifier 
            </param>
            <param name="associationName">
            association name
            </param>
            <returns>
            collection of associated instances
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetAssociations(System.Guid,System.String,System.String)">
            <summary>
            Gets the associated documents / agreements based on the association 
            </summary>
            <param name="parentContractType">
            parent contract name
            </param>
            <param name="agreementId">
            parent contract identifier 
            </param>
            <param name="entityName">
            parent entity name
            </param>
            <param name="associatedEntityName">
            associated document entity name
            </param>
            <returns>
            collection of associated instances
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetContractsForAssociation(System.String,System.String,System.Guid,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Gets contracts for association for the specified contract type
            </summary>
            <param name="contractType">Contract Type</param>
            <param name="associationName">association Name</param>
            <param name="mainAgreementId">main Agreement Id</param>
            <param name="mainAgreementContractType">main Agreement Contract Type</param>
            <param name="page">Page number</param>
            <param name="pageSize">Number of instances to return</param>
            <param name="searchTerm">Search term</param>
            <returns>
            collection of contracts for association
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetContractTypesThinModelForParentAgreementAssociations(System.Guid,System.String)">
            <summary>
            Get Contract Types thin model for associations available in the given parent agreement.
            </summary>
            <param name="parentAgreementId">parent agreement's Id</param>
            <param name="parentAgreementEntityName">parent agreement's entity name</param>
            <returns>list of Contract Types</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.ValidateDetailsForAssociatedDocumentCreation(System.Guid,System.String,System.String)">
            <summary>
            Validate details for creation of Associated Document.
            Example: user's privilege for selected parent, association's multiplicity, etc.
            </summary>
            <param name="parentAgreementId">parent agreement's Id</param>
            <param name="parentAgreementEntityName">parent agreement's entity name</param>
            <param name="childEntityName">child's entity name</param>
            <returns>list of validation messages, if any</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.AssociateContracts(System.Collections.Generic.IEnumerable{System.Guid},System.String,System.String,System.Guid,System.String)">
            <summary>
            Associate contracts to specified Agreement
            </summary>
            <param name="contractIds">
            contract Sys Ids
            </param>
            <param name="contractType">
            contract Type
            </param>
            <param name="associationName">
            association Name
            </param>
            <param name="mainAgreementId">
            main Agreement Id
            </param>
            <param name="mainAgreementContractType">
            main Agreement Contract Type
            </param>
            <returns>
            flag indicating success or failure
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.Disassociate(System.Guid,System.String,System.String,System.Guid,System.String)">
            <summary>
            Disassociate instance from specified Agreement
            </summary>
            <param name="associatedId">
            associated instance's Id
            </param>
            <param name="associationContractType">
            association contract Type
            </param>
            <param name="associationName">
            association Name
            </param>
            <param name="mainAgreementId">
            main Agreement Id
            </param>
            <param name="mainAgreementContractType">
            main Agreement Contract Type
            </param>
            <returns>
            flag indicating success or failure
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.InheritAgreement(System.Guid,System.String,System.String,System.Guid,System.String,System.Int64)">
            <summary>
            Inherits the associated agreement data to associating agreement.
            </summary>
            <param name="associatedId">
            associated agreement Id
            </param>
            <param name="associatedEntityName">
            associated entity Name
            </param>
            <param name="associationName">
            Name of association
            </param>
            <param name="associatingId">
            associating agreement id
            </param>
            <param name="associatingEntityName">
            Name of associating entity
            </param>
            <param name="loggedinUserId">
            Logged in user id
            </param>
            <returns>
            result of inheritance
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.DeActivate(System.String,System.Guid)">
            <summary>
            Deactivate Agreement.
            </summary>
            <param name="contractType">
            Contract Type name
            </param>
            <param name="agreementId">
            Entity Instance sys Id
            </param>
            <returns>
            Http Response Message
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.Activate(System.String,System.Guid)">
            <summary>
            Activate Agreement work flow.
            </summary>
            <param name="contractType">
            Contract Type name
            </param>
            <param name="agreementId">
            Entity Instance sys Id
            </param>
            <returns>
            Http Response Message
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.DeleteAgreement(System.String,System.Guid,System.Boolean)">
            <summary>
            Delete Agreement
            </summary>
            <param name="contractType">Contract Type name</param>
            <param name="agreementId">agreement ID</param>
            <param name="enableHardDelete">Enable hard delete</param>
            <returns>Http Response Message</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.DeleteAgreementInstance(System.String,System.Guid,System.Boolean)">
            <summary>
            Delete Agreement Instance
            </summary>
            <param name="typeOfContract">type of contract</param>
            <param name="agreementSysId">agreement ID</param>
            <param name="enableHardDelete">Enable hard delete</param>
            <returns>Http Response Message</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.OnAgreementDelete(System.Guid,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Tasks to do on agreement delete
            </summary>
            <param name="agreementId">Agreement ID</param>
            <param name="contractTypeName">Contract Type Name</param>
            <param name="contractRequestType">Contract Request Type</param>
            <param name="requestInstanceId">Request Instance Id</param>
            <param name="agreementCode">Agreement Code</param>
            <param name="agreementStatus">Agreement Status</param>
            <returns>Http Response Message</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.ResumeContractRequestWorkflowBasedOnState(System.String,System.Guid,System.String,System.Guid)">
            <summary>
            Resume contract request on cancel agreement
            </summary>
            <param name="contractRequestType">Contract Request Type</param>
            <param name="requestInstanceId">Request Instance Id</param>
            <param name="state">instance action</param>
            <param name="instanceId">instance id</param>
            <returns>Http Response Message</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.DownloadFile(System.Guid,System.Int32,System.String,System.String)">
            <summary>
            Download the agreement document.
            </summary>
            <param name="agreementId">
            entity base instance's ID
            </param>
            <param name="docVersion">
            version number of document
            </param>
            <param name="fileType">
            type of file
            </param>
            <param name="contractType">
            Contract Type name
            </param>
            <returns>
            Http Response Message
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.Download(System.Guid,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Gets the file object for the specified version of the agreement (contract) instance. 
            If the document version is not passed, API will return latest version of the agreement document
            </summary>
            <param name="agreementId">The agreement instance identifier.</param>
            <param name="contractType">Type of the contract.</param>
            <param name="fileType">Type of the file.</param>
            <param name="docVersion">The document version.</param>
            <param name="honorFileType">Flag to force file type passed to be used.</param>
            <returns>file object</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.DownloadAll(System.Guid,System.String,System.Guid)">
            <summary>
            Downloads all documents added as associations to the agreement.
            </summary>
            <param name="agreementId">
            entity base instance's ID
            </param>
            <param name="contractType">
            Contract Type name
            </param>
            <param name="userSysId">
            user system identifier
            </param>
            <returns>
            Http Response Message
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.DownloadAll(System.Guid,System.String,System.Guid,System.Collections.Generic.List{Icertis.CLM.Utilities.Models.AssociationInstanceModel})">
            <summary>
            Downloads all documents added as associations to the agreement.
            </summary>
            <param name="agreementId">
            entity base instance's ID
            </param>
            <param name="contractType">
            Contract Type name
            </param>
            <param name="userSysId">
            user system identifier
            </param>
            <returns>
            Http Response Message
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.DownloadAll(System.String)">
            <summary>
            Downloads all selected agreement.
            </summary>
            <param name="selectedEntityList">
            All selected selectedEntityList
            </param>
            <returns>
            Http Response Message
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetDocumentVersions(System.Guid,System.String,System.Boolean)">
            <summary>
            Get the document versions
            </summary>
            <param name="agreementId">
            Entity base instance id
            </param>
            <param name="entityName">
            Entity name
            </param>
            <param name="includeChildColleciton">
            Include child collection boolean
            </param>
            <returns>
            List of document version
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetDocumentVersion(System.Guid,System.Int64,System.String,System.Boolean)">
            <summary>
            Get the document version
            </summary>
            <param name="sysId">
            Entity base instance id
            </param>
            <param name="documentVersion">
            document version number
            </param>
            <param name="entityName">
            Entity name
            </param>
            <param name="includeChildColleciton">
            Include child collection boolean
            </param>
            <returns>
            Document version
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.AddDeviation(System.Guid,System.String,Icertis.CLM.Masters.Deviation,System.Int32,System.Boolean)">
            <summary>
            Add clause deviation to agreement document version.
            </summary>
            <param name="agreementId">
            The agreement id.
            </param>
            <param name="contractTypeName">
            The contract type.
            </param>
            <param name="deviationObject">
            The deviation object.
            </param>
            <param name="documentVersion">
            The document version.
            </param>
            <param name="onlyComment">
            Add only comment or add deviation.
            </param>
            <returns>
            The status of action.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.IsUniqueValue(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Checks if value is unique
            </summary>
            <param name="instance">
            Contract Type instance
            </param>
            <param name="propertyName">
            property Name
            </param>
            <param name="propertyValue">
            property Value 
            </param>
            <param name="dependentName">Dependent Name</param>
            <param name="dependentValue">Dependent value</param>
            <returns>
            returns true if unique
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.Share(Icertis.CLM.Utilities.Notification.ICMEmailMessage,System.Guid,System.String,System.Boolean,System.String)">
            <summary>
            share agreement
            </summary>
            /// 
            <param name="emailMessage">
            email message
            </param>
            <param name="agreementId">
            agreement instance id
            </param>
            <param name="contractType">
            contract type name
            </param>
            <param name="shareAgreement">
            flag share agreement to know whether the call is to attach the document
            </param>
            <param name="fromEmailID">
            Current Logged in user's Email Address
            </param>
            <returns>
            success value
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetBroadcastAttachments(System.Guid,System.String)">
            <summary>
            Gets the broadcast attachments asynchronous.
            </summary>
            <param name="id">The identifier.</param>
            <param name="entityName">Name of the entity.</param>
            <returns>A list of <see cref="T:Icertis.CLM.Utilities.Models.BroadcastAttachmentModel"/> objects.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.ChainedContracts(System.Guid,System.String)">
            <summary>
            gets all the chained contracts 
            </summary>
            <param name="agreementId">
            agreement sys id
            </param>
            <param name="contractType">
            contract type name
            </param>
            <returns>
            collection of chained contracts 
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.ResumeWorkflow(System.Object,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Resume Workflow
            </summary>
            <param name="agreement">
            Object of the. <see cref="T:Icertis.ACF.EntityService.Data.EntityBase"/>
            </param>
            <param name="workflowAction">
            Workflow action
            </param>
            <param name="deviationActions">action taken for deviations</param>
            <param name="skipAuth">Skip authorization for workflow resume operation.</param>
            <param name="resumeSynchronously">Indicates whether the resume workflow should be done as a blocking operation.</param>
            <returns>
            Validation messages, if any
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.ResumeWorkflowWithAction(System.Guid,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Resume Work flow With Action
            </summary>
            <param name="instanceId">instance Id</param>
            <param name="contractTypeName">contract Type Name</param>
            <param name="action">action</param>
            <param name="deviationActions">deviation Actions</param>
            <param name="skipAuth">skip Auth</param>
            <param name="resumeSynchronously">resume Synchronously</param>
            <returns>Validation messages, if any</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.ValidateMandatoryFields(System.Guid,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Validate Mandatory Fields
            </summary>
            <param name="agreementId">agreement ID </param>
            <param name="contractTypeName">name of agreement entity</param>
            <param name="isMetadataToBeValidated"> flag indicating if Metadata(s) is/are to be validated or not </param>
            <param name="isAssociationToBeValidated">flag indicating if Association(s) is/are to be validated or not</param>
            <returns>validation messages, if any</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.CopyExistingAgreement(System.Guid,System.String,System.Int64,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Copy Existing Agreement
            </summary>
            <param name="agreementId">agreement ID</param>
            <param name="entityName">entity name</param>
            <param name="loggedInUserId">logged in user ID</param>
            <param name="attributesValuesToOverride">The attributes values to override.</param>
            <returns>the agreement ID</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.CopyExistingAgreementWithAssociations(System.Collections.ArrayList,System.Guid,System.String,System.Int64,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Copy Existing Agreement With Associations
            </summary>
            <param name="wrapperObject">wrapper object which will have selected associations to copy</param>
            <param name="agreementId">agreement ID</param>
            <param name="entityName">entity name</param>
            <param name="loggedInUserId">logged in user ID</param>
            <param name="attributesValuesToOverride">The attributes values to override.</param>
            <returns>the agreement ID</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.RequestReview(System.Guid,System.String,System.Int64,System.Object)">
            <summary>
            Request review
            </summary>
            <param name="id">Instance id of the agreement for which the review is requested.</param>
            <param name="contractType">Name of the entity of agreement.</param>
            <param name="requestByUserId">User id of the user who has requested the review.</param>
            <param name="requestBody">Request body containing the users list to whom the request is to be sent, and the related note.</param>
            <returns>Http status</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.ThirdPartyUsers(System.Guid,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Returns the third party users for an agreement
            </summary>
            <param name="id">Id of the agreement</param>
            <param name="contractTypeName">Contract type name</param>
            <param name="page">Page number</param>
            <param name="pageSize">Number of users to return</param>
            <param name="searchTerm">Search Term</param>
            <returns>Third party users for an agreement</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.SaveDeviation(System.Guid,System.String,Icertis.CLM.Masters.Deviation,System.Int32)">
            <summary>
            Deviate the agreement for specific clause
            </summary>
            <param name="agreementId">Agreement instance identifier</param>
            <param name="contractTypeName">Contract name</param>
            <param name="deviationObject">Deviation object to create / update</param>
            <param name="documentVersion">Document version. "-1" for latest version</param>
            <returns>Http status</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.RemoveDeviation(System.Guid,System.String,System.Guid,System.Guid,System.Int32)">
            <summary>
            Un-deviate the agreement for specific clause
            </summary>
            <param name="agreementId">Agreement instance identifier</param>
            <param name="contractTypeName">Contract name</param>
            <param name="deviationId">Deviation sys identifier</param>
            <param name="clauseId">Standard clause identifier</param>
            <param name="documentVersion">Document version.  "-1" for latest version</param>
            <returns>success status</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.CreateNotificationsAndCommitment">
            <summary>
            Create Notification for commitments as configured and creates next instance of commitment.
            </summary>
            <returns>Success or failure </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.AgreementExpiryNotification">
            <summary>
            Create Notification for agreements which are expired.
            </summary>
            <returns>Success or failure </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.SendAgreementExpiryOrRenewReminderNotification(System.String,System.String,System.String)">
            <summary>
            Send Agreement Expiry Or Renew Reminder Notification
            </summary>
            <param name="reminderNotificationPeriodUnit">Reminder Notification Period Unit</param>
            <param name="renewReminderNotificationPeriod">Renew Reminder Notification Period</param>
            <param name="expiryReminderNotificationPeriod">Expiry Reminder Notification Period</param>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.AutoRenewAgreements">
            <summary>
            Automatically renew agreements as per the configuration
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetDeviationsForCurrentUser(System.Guid,System.String,System.Int64)">
            <summary>
            Gets the deviations that are pending for approval for the current logged in user
            </summary>
            <param name="agreementId">agreement instance id</param>
            <param name="contractName">contract name</param>
            <param name="userIdentifier">user identifier</param>
            <returns>Collection of clause ids</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetDeviationsForCurrentUserMobile(System.Guid,System.String,System.Int64)">
            <summary>
            Gets the deviations that are pending for approval for the current logged in user
            </summary>
            <param name="agreementId">agreement instance id</param>
            <param name="contractName">contract name</param>
            <param name="userIdentifier">user identifier</param>
            <returns>Collection of clause ids</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetDeviationDetailsMobile(System.Guid,System.String,System.Guid,System.Int64)">
            <summary>
            Gets the deviations  details of a particular deviation along with original text for the current logged in user
            </summary>
            <param name="agreementId">agreement instance id</param>
            <param name="contractName">contract name</param>
            <param name="deviationId">Deviation identifier</param>
            <param name="userIdentifier">user identifier</param>
            <returns>Collection of clause ids</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetAgreementStatus(System.Guid,System.String)">
            <summary>
            Get the status of agreement
            </summary>
            <param name="agreementId">The agreement instance id.</param>
            <param name="contractTypeName">The contract type name.</param>
            <returns>The agreement status.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetAmendmentsToBeSuperseded(System.String)">
            <summary>
            Gets the list of amendments to be superseded
            </summary>
            <param name="datetime">Date time object</param>
            <returns>List of amendments</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.ESignCallback(System.String)">
            <summary>
            E signature call back service. Resumes the workflow if signatures are completed or rejected by the signatory.
            </summary>
            <param name="xml">xml document</param>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.EchoSignAuthorizationCallBack(System.String,System.String)">
            <summary>
            E signature call back service. Resumes the workflow if signatures are completed or rejected by the signatory.
            </summary>
            <param name="xml">xml document</param>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.ProcessEsignAgreement(System.String)">
            <summary>
            Process ESIGN Agreement
            </summary>
            <param name="sysId">Storage row key</param>
            <returns>success result</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.ProcessEsignAgreementWithInformation(System.String)">
            <summary>
            Process ESIGN Agreement and returns response with exception information
            </summary>
            <param name="sysId">Storage row key</param>
            <returns>Esign Process response with exception details if any</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetESignEventInformation(System.String)">
            <summary>
            Get the document information.
            </summary>
            <param name="documentKey">document key</param>
            <returns>Document information</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetESignPendingEnvelopes">
            <summary>
            Get Incomplete records to be processed by sync task
            </summary>
            <returns>Success result</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.HasAnyESignEventOccured(System.String,System.Int64)">
            <summary>
            Returns true if an event is found in Echo sign signatory table
            </summary>
            <param name="envelopeId">document key</param>
            <param name="ticks">date time ticks</param>
            <returns>boolean value</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetESignEventNotSynced(System.String,System.Int64)">
            <summary>
            Returns true if an event is found and the status is successfully synced.
            </summary>
            <param name="envelopeId">document key</param>
            <param name="ticks">date time ticks</param>
            <returns>sys id of event that are not sync</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.AddESignMissingEntryToTable(Icertis.CLM.Utilities.Models.ESignDocumentEvent,System.String)">
            <summary>
             add missing entry [event occured at echosign side and not captured in our table] to echosign table 
            </summary>
            <param name="esignEvent">document object</param>
            <param name="envelopeId">document envelope Id</param>
            <returns>sys id</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetESignedInstance(System.String)">
            <summary>
            Process ESIGN Agreement
            </summary>
            <param name="sysId">Storage row key</param>
            <returns>success result</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.AddNote(System.String,System.Guid,System.String)">
            <summary>
            Add note for mobile
            </summary>
            <param name="entityName">entity Name</param>
            <param name="id">agreement id</param>
            <param name="note">agreement note</param>
            <returns>http response</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.CreateContractRequest(System.Object)">
            <summary>
            Saves the instance of <see cref="T:Icertis.CLM.Masters.ContractRequest"/> type of object
            </summary>
            <param name="contractRequestObject">The contract request instance that is to be saved.</param>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.DelegateTask(System.Guid,System.Int64,System.Int64,System.String)">
            <summary>
            Delegate Task
            </summary>
            <param name="instanceId">agreement instance ID</param>
            <param name="delegatedFromUserId">delegated from user ID</param>
            <param name="delegatedToUserId">delegated to user ID</param>
            <param name="entityName">entity name</param>
            <returns>http response</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.CollaborateWithExternalUsers(System.Guid,System.String,System.Object)">
            <summary>
            Collaborate with External Users
            </summary>
            <param name="instanceId">agreement instance ID</param>
            <param name="entityName">entity name</param>
            <param name="requestBody">Request body containing the users list to whom the request is to be sent</param>
            <returns>http response</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.RecallDelegation(System.Guid,System.Int64,System.String)">
            <summary>
            Recall Delegation
            </summary>
            <param name="instanceId">agreement instance ID</param>
            <param name="delegatedFromUserId">delegated from user ID</param>
            <param name="entityName">entity name</param>
            <returns>http response</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.LockUnlockAgreement(System.String,System.Guid,System.String)">
            <summary>
            Locks or unlocks the agreement
            </summary>
            <param name="entityName">Entity Name</param>
            <param name="id">Entity id</param>
            <param name="action">The action to take: lock or unlock</param>
            <returns>
            collection of associations
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.ReplaceUser(System.Guid,System.String,System.Int64,System.Int64,System.Int32,System.Guid,System.String,System.Guid)">
            <summary>
            Replaces user in agreement 
            </summary>
            <param name="entityInstanceId">Entity Instance Id</param>
            <param name="entityName">Name of the contract type</param>
            <param name="existingUser">User to be replaced</param>
            <param name="newUser">New user</param>
            <param name="step">Step Number</param>
            <param name="roleid">Role Id</param>
            <param name="note">Note or comments</param>
            <param name="reasonCode">Reason Code</param>
            <returns>Flag indicating success or failed</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.IndexPDF(System.String)">
            <summary>
            Index PDF
            </summary>
            <param name="instanceId">agreement instance id</param>
            <returns>true or false</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.IndexDocument(System.Collections.ArrayList,System.String)">
            <summary>
            Create the <see cref="T:Icertis.ACF.EntityService.Data.EntityBase"/> object.
            </summary>
            <param name="wrapperObject"> Object of the. <see cref="T:Icertis.ACF.EntityService.Data.EntityBase"/> </param>
            <param name="contractType">contract type name</param>
            <returns> success or failure. </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.SetConfidentiality(System.String,System.String)">
            <summary>
            Set Agreement's Confidentiality.
            </summary>
            <param name="id">instance Id</param>
            <param name="entityName">entity Name</param>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetBusinessStatusList(System.Guid,System.String,System.String)">
            <summary>
            Get Lists for BusinessStatus from contractType id 
            </summary>
            <param name="entityTypeId">Entity Type Id e.g. Contract Type Id</param>
            <param name="status">Status against which BusinessStatus is required E.g. Draft</param>
            <param name="currentBusinessStatus">Current Business Status ( Need to send while fetching list for editing )</param>
            <returns>List of Select list Item</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.SaveAgreementAndDownload(System.Collections.ArrayList,System.String,System.Boolean)">
            <summary>
            Creates the and download document.
            </summary>
            <param name="wrapperObject">The wrapper object.</param>
            <param name="contractType">Type of the contract.</param>
            <param name="loggedInUserId">The logged in user identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.SaveAgreementAndDownloadAsync(System.Collections.ArrayList,System.String,System.Boolean)">
            <summary>
            Save the agreement.  If exists do Update, otherwise, Create and Publish 
            NOTE:  This method will eventually call CreateAndPublish or UpdateAgreement and should not be used without good knowledge
            </summary>
            <param name="wrapperObject">Wrapper object with agreement and file payload</param>
            <param name="contractType">contract type name</param>
            <param name="getTemplate">flag to indicate if get template by rules should be called</param>
            <returns>Id of saved agreement</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.DisableOrRemoveApprover(System.Collections.Generic.IEnumerable{System.Guid},System.Guid,System.String,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>
            Disable Or Remove Approver
            </summary>
            <param name="teamMembersInstanceIds">Team member's SYSID</param>
            <param name="instanceId">Instance Identifier</param>
            <param name="entityName">Entity Name</param>        
            <param name="resumeWorkflow">Resume Workflow</param>
            <param name="teamMemberRemoved">Is team member removed. If false then the assumption is that member is disabled</param>
            <param name="activity">Activity event handler</param>
            <param name="sendUserNotification">Send Notification to User</param>
            <param name="userRationaleComments">Comment/Reason for Diasble/Remove user from the Team.</param>
            <returns>Approver Disable Result</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.CheckCurrentUserIsAdminOrServiceUser">
            <summary>
            Check Current Logged in User Is Admin Or Service User
            </summary>
            <returns>Returns true if logged in user is admin or service user</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.CheckCurrentUserIsServiceUser">
            <summary>
            Check Current Logged in User Is Admin Or Service User
            </summary>
            <returns>Returns true if logged in user is admin or service user</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetAgreementWithFileFromWrapper(System.Collections.ArrayList,System.String,Icertis.CLM.Instrumentation.Handlers.IcmActivityEventHandler,System.Byte[]@,Icertis.CLM.Utilities.FileType@,System.Collections.Generic.IEnumerable{Icertis.CLM.Utilities.Models.AddAssociationModel}@)">
            <summary>
            Get agreement object and file byte array from wrapper object
            </summary>
            <param name="wrapperObject">wrapper array list</param>
            <param name="contractType">contract type</param>
            <param name="activity">event handler activity</param>
            <param name="payLoad">out byte array</param>
            <param name="fileType">out File type</param>
            <param name="addedAssociations">out added associations</param>        
            <returns>agreement object</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.SkipAutoAgreementCodeGeneration(System.Collections.ArrayList)">
            <summary>
            Use auto code generator for agreement code or not.
            </summary>
            <param name="wrapperObject">wrapper array list</param>
            <returns></returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.SaveAgreementInternal(System.Collections.ArrayList,System.String,Icertis.CLM.Instrumentation.Handlers.IcmActivityEventHandler,System.Boolean)">
            <summary>
            Save the agreement.  If exists do Update, otherwise, Create and Publish 
            NOTE:  This method will eventually call CreateAndPublish or UpdateAgreement and should not be used without good knowledge
            </summary>
            <param name="wrapperObject">Wrapper object with agreement and file payload</param>
            <param name="contractType">contract type name</param>
            <param name="activity">instrumentation activity</param>
            <param name="getTemplate">flag to indicate if get template by rules should be called</param>
            <returns>Id of saved agreement</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.SaveAgreementAndDownloadInternal(System.Collections.ArrayList,System.String,Icertis.CLM.Instrumentation.Handlers.IcmActivityEventHandler,System.Boolean)">
            <summary>
            Save the agreement.  It will Create, Publish and download the latest version of the document. 
            NOTE:  This method will eventually call CreateAndDownload and should not be used without good knowledge
            </summary>
            <param name="wrapperObject">The wrapper object.</param>
            <param name="contractType">Type of the contract.</param>
            <param name="activity">The activity.</param>
            <param name="getTemplate">if set to <c>true</c> [get template].</param>
            <returns></returns>
            <exception cref="T:System.Web.HttpException">
            </exception>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetUserByID(System.Int64)">
            <summary>
            Gets user from User Identifier
            </summary>
            <param name="userID">User's Identifier</param>
            <returns> UserInformation object</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetDeviatedClauses(Icertis.ACF.EntityService.Data.EntityBase)">
            <summary>
            Get deviated clauses
            </summary>
            <param name="agreement">Entity base instance</param>
            <returns>Returns list of deviated clauses</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.AddCommentsForDeviation(System.Guid,System.String,System.Guid,System.Int64,System.String)">
            <summary>
            Add comments to clause deviation.
            </summary>
            <param name="agreementId">
            The agreement id.
            </param>
            <param name="contractTypeName">
            The contract type.
            </param>
            <param name="StandardClauseId">
            The StandardClauseId.
            </param>
            <param name="userIdentifier">
            The user identifier.
            </param>
            <param name="deviationComments">
            The deviationComments.
            </param>
            <returns>
            The status of action.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetTeamMemberPrivileges(Icertis.ACF.EntityService.Data.EntityBase,Icertis.CLM.Masters.TeamMember,System.String,System.Int64,System.Collections.Generic.Dictionary{System.String,System.Boolean},Icertis.CLM.Masters.TeamMember,System.String)">
            <summary>
            Returns privileges for a Team member.
            </summary>
            <param name="agreement">
            The agreement.
            </param>
            <param name="TeamMember">
            The TeamMember.
            </param>
            <param name="associationName">
            The associationName.
            </param>
             <param name="allowedPermissionSets">
            The allowedPermissionSets.
            </param>
            <param name="primaryOwner">
            The primaryOwner.
            </param>
            <param name="parentAgreementStatus">
            The parentAgreementStatus.
            </param>
            <returns>
            The TeamMemberPrivileges
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.RemoveNonAssembledClausesFromAgreement(System.Guid,System.String)">
            <summary>
            Remove Non Assembled Clauses From Agreement
            </summary>        
            <param name="agreementId">agreement identifier</param>
            <param name="entityName">entity name</param>
            <returns>success result</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetCurrentStepOrderOfActionRequest(Icertis.ACF.EntityService.Data.EntityBase,System.String)">
            <summary>
            Get the current action request step order if the association is team member
            </summary>
            <param name="entityInstance">agreement instance</param>
            <param name="associationName">association name</param>
            <returns>step order number</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.PublishActionAllowed(System.Guid,System.String)">
            <summary> publish Action Allowed </summary>
            <param name="agreementId"> agreement instance id </param>
            <param name="contractType">  contract type name </param>
            <param name="version"> dument version </param>
            <returns> success value </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetAllSelectedAttributes(System.Object)">
            <summary>
            Gets all selected attributes.
            </summary>
            <param name="wrapperObject">The wrapper object.</param>
            <returns>Ordered list of all selected attributes</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.DeleteAssociatedDocument(System.Guid,System.String)">
            <summary>
            Deletes the associated document.
            </summary>
            <param name="instanceId">The instance identifier.</param>
            <param name="entityName">Name of the entity.</param>
            <returns>returns the status of the operation, passed or failed</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.CopyAssociatedDocuments(System.Object)">
            <summary>
            Copying existing associated document instance in other/same agreement or associated document
            </summary>
            <param name="wrapperObject">The wrapper object.</param>
            <param name="isDuringInheritance">Indicates whether associated document is to be saved during inheritance flow or not</param>
            <returns>List of Copy Associated Document instance result</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetUserNamesByRole(System.String,System.String,System.String)">
            <summary>
            Return name of Approvers
            </summary>
            <param name="role">Role </param>
            <param name="entityName">Entity Name</param>   
            <param name="agreementId">Agreement id</param>      
            <returns>Returns approvers name</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.SaveNeedMoreInfo(System.Guid,System.String,System.String)">
            <summary>
            Save Need More Info
            </summary>
            <param name="agreementId">Agreement Id</param>
            <param name="entityName">Entity Name</param>
            <param name="noteDescription">Note Description</param>
            <returns>Http Response</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.SaveRemoveMeNote(System.Guid,System.String,System.String)">
            <summary>
            Save Remove Me Note
            </summary>
            <param name="agreementId">Agreement Id</param>
            <param name="entityName">Entity Name</param>
            <param name="noteDescription">Note Description</param>
            <returns>Http Response</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.AssignLegalTeamMember(System.Guid,System.String,System.Int64,System.Object)">
            <summary>
            Request review
            </summary>
            <param name="id">Instance id of the agreement for which the review is requested.</param>
            <param name="contractType">Name of the entity of agreement.</param>
            <param name="requestByUserId">User id of the user who has requested the review.</param>
            <param name="requestBody">Request body containing the users list to whom the request is to be sent, and the related note.</param>
            <returns>Http status</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.ReassignTeamMember(System.Guid,System.String,System.Int64,Icertis.CLM.Utilities.AccessRoleTypes,System.Int64,System.Object)">
            <summary>
            Request review
            </summary>
            <param name="id">Instance id of the agreement for which the review is requested.</param>
            <param name="contractType">Name of the entity of agreement.</param>
            <param name="requestByUserId">User id of the user who has requested the review.</param>
            <param name="fromTeamRole">access role type</param>
            <param name="fromTeamStepOrder">from team step order</param>
            <param name="requestBody">Request body containing the users list to whom the request is to be sent, and the related note.</param>
            <returns>Http status</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.SaveAssociatedDocumentAndSendForApproval(System.Object,System.String,System.String,System.Guid,System.Boolean)">
            <summary>
            Saves the Associated Document and sends for approval
            </summary>
            <param name="requestBody">
            Request body containing child instance and file byte array
            </param>
            <param name="childContractType">
            Name of the child <see cref="T:Icertis.CLM.Masters.ContractType"/>
            </param>
            <param name="parentContractType">
            Name of the parent <see cref="T:Icertis.CLM.Masters.ContractType"/>
            </param>
            <param name="parentAgreementId">
            SysId of the parent contract instance
            </param>
            <param name="createSynchronously">
            Indicates whether associated document is to be created synchronously or asynchronously
            </param>
            <returns>
            List of Validation messages
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.CreateAndRequestLegalAssistance(System.Collections.ArrayList,System.String,System.Int64)">
            <summary>
            Create and sent the agreement <see cref="T:Icertis.ACF.EntityService.Data.EntityBase"/> for Legal Assistance. 
            </summary>
            <param name="wrapperObject">Wrapper object with agreement and file payload</param>
            <param name="contractType">contract type name</param>
            <param name="loggedInUserId">current user initiating the call</param>
            <returns>Mandatory validation messages, if any</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.CreateEmptyChevron">
            <summary>
            Creates the empty chevron.
            </summary>
            <returns>empty chevron</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.IsUserInTeamRole(System.Guid,System.String,System.Int64,System.Guid,System.Nullable{System.Guid})">
            <summary>
            Determines if a user is present in certain role in agreement's team
            </summary>
            <param name="agreementId">id of agreement</param>
            <param name="entityName">contract type of the agreement</param>
            <param name="userId">id of the user</param>
            <param name="roleId">id of role</param>
            <param name="subroleId">id of sub role</param>
            <returns>returns whether user is present in team in certain role or not</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetPageNavigationInstances(System.String)">
            <summary>
            Gets the Page Navigation Instances for the given contract type.
            </summary>
            <param name="contractTypeName">Name of the contract type</param>
            <returns>The Page Navigation Instances for the given contract type.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.BulkRejectLegalAssistance(System.String,System.String,System.String,System.Guid)">
            <summary>
            reject legal assistance for multiple 
            </summary>
            <param name="contractType">contract type</param>
            <param name="agreementIdList">guid list of agreement id's</param>
            <param name="note">note for rejection</param>
            <param name="reasonCode">rejection reason code</param>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.CreateAgreementWrapper(System.Collections.ArrayList,System.String,System.Int64)">
            <summary>
            Create the <see cref="T:Icertis.ACF.EntityService.Data.EntityBase"/> object.
            </summary>
            <param name="wrapperObject"> Object of the. <see cref="T:Icertis.ACF.EntityService.Data.EntityBase"/> </param>
            <param name="contractType"> Contract Type name </param>
            <param name="loggedInUserId"> logged In User Id </param>        
            <returns> instance of the object saved. </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.CreateAndPublishWrapper(System.Collections.ArrayList,System.String,System.Int64)">
            <summary>
            Create and send for approval the <see cref="T:Icertis.ACF.EntityService.Data.EntityBase"/> object.
            </summary>
            <param name="wrapperObject"> Object of the. <see cref="T:Icertis.ACF.EntityService.Data.EntityBase"/> </param>
            <param name="contractType"> Contract Type name </param>
            <param name="loggedInUserId"> logged In User Id </param>        
            <returns> instance of the object saved. </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.CreateAndSendForApprovalWrapper(System.Collections.ArrayList,System.String,System.Int64)">
            <summary>
            Create and send for approval the <see cref="T:Icertis.ACF.EntityService.Data.EntityBase"/> object.
            </summary>
            <param name="wrapperObject"> Object of the. <see cref="T:Icertis.ACF.EntityService.Data.EntityBase"/> </param>
            <param name="contractType"> Contract Type name </param>
            <param name="loggedInUserId"> logged In User Id </param>        
            <returns> instance of the object saved. </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.UpdateAgreementWrapper(System.Object,System.Int64,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Update the <see cref="T:Icertis.ACF.EntityService.Data.EntityBase"/> object.
            </summary>
            <param name="wrapperObject">Object of the. <see cref="T:Icertis.ACF.EntityService.Data.EntityBase"/></param>
            <param name="loggedInUserId">logged In User Id</param>
            <param name="workflowActionName">Workflow action name</param>        
            <param name="isSavingPartial">Indicates whether a partial agreement is being saved.</param>
            <param name="isWorkflowBookmark">Indicates whether an action is workflow bookmark</param>
            <param name="documentVersionLabel">Document Version Label</param>
            <returns>instance ID of the object saved.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.UpdateAndPublishWrapper(System.Object,System.Int64,System.String)">
            <summary>
            Update and publish the <see cref="T:Icertis.ACF.EntityService.Data.EntityBase"/> object.
            </summary>
            <param name="wrapperObject">Object of the. <see cref="T:Icertis.ACF.EntityService.Data.EntityBase"/></param>
            <param name="loggedInUserId">logged In User Id</param>
            <param name="documentVersionLabel">Document Version Label</param>
            <returns>validation messages</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.InitiateBulkAgreementsCreation(System.Guid,System.Int64,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            This method will initiate the Bulk Agreements Creation
            </summary>
            <param name="instanceId">agreement instance Id</param>
            <param name="initiatedByUserId">user id from whom the bulk agreement creation is been intiated</param>
            <param name="entityName">entity name</param>
            <param name="entityTypeId">entity type id</param>
            <param name="typeOfContract">The type of contract fro which the bulk agreement is been initiated.</param>
            <param name="batchIdentifierText">The user defined batch Identifier value.</param>
            <param name="isAmendment">is amendment flag</param>
            <returns>true or false</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.ResumeWorkflowWrapper(System.Object,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Resume Workflow
            </summary>
            <param name="agreement">
            Object of the. <see cref="T:Icertis.ACF.EntityService.Data.EntityBase"/>
            </param>
            <param name="workflowAction">
            Workflow action
            </param>
            <param name="deviationActions">action taken for deviations</param>
            <param name="skipAuth">Skip authorization for workflow resume operation.</param>
            <param name="resumeSynchronously">Indicates whether the resume workflow should be done as a blocking operation.</param>
            <returns>
            Validation messages, if any
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.BulkCreateAgreement(Icertis.CLM.Utilities.Models.BulkCreateModels.BulkCreateThinModel)">
            <summary>
            This method is responsible for handling bulk agreement creation.
            </summary>
            <param name="bulkCreateThinModel">The bulk create thin model instance. <see cref="T:Icertis.CLM.Utilities.Models.BulkCreateModels.BulkCreateThinModel"/></param>
            <returns>Errors of operation <see cref="T:Icertis.CLM.Utilities.Models.BulkCreateModels.ErrorLog"/></returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.BulkCreateAmendment(Icertis.CLM.Utilities.Models.BulkCreateModels.BulkCreateThinModel)">
            <summary>
            This method is responsible for handling bulk amendment.
            </summary>
            <param name="bulkCreateThinModel">The bulk create thin model instance. <see cref="T:Icertis.CLM.Utilities.Models.BulkCreateModels.BulkCreateThinModel"/></param>
            <returns>Errors of operation <see cref="T:Icertis.CLM.Utilities.Models.BulkCreateModels.ErrorLog"/></returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetAgreementAttributesSummaryResponse(System.Guid,System.String)">
            <summary>
            Gets the agreement attributes summary response.
            </summary>
            <param name="id">The identifier.</param>
            <param name="contractType">Type of the contract.</param>
            <returns>Returns the agreement attribute summary.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.GetAgreementClauses(System.Guid,System.String)">
            <summary>
            Gets the agreement clauses.
            </summary>
            <param name="id">The agreement id.</param>
            <param name="contractType">The contract type.</param>
            <returns>Returns the list of clauses for a given agreement.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.AgreementController.TryGetLatestContractTypeInstanceId(System.String,System.Nullable{System.Guid}@)">
            <summary>
            Tries the get latest contract type identifier.
            </summary>
            <param name="contractTypeName">Name of the contract type.</param>
            <param name="id">The identifier.</param>
            <returns> Returns the latest contract type id.</returns>
        </member>
        <member name="T:Icertis.CLM.API.Controllers.BaseController">
            <summary>
            Base Controller Class.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.BaseController.dummyEvent">
            <summary>
            A dummy masters object.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.BaseController.traceSwitch">
            <summary>
            Trace switch
            </summary>        
        </member>
        <member name="F:Icertis.CLM.API.Controllers.BaseController.apiToken">
            <summary>
            Security token.
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Controllers.BaseController.Token">
            <summary>
            Gets the security token by inspecting the message header.
            </summary>
            <value>The security token.</value>
        </member>
        <member name="P:Icertis.CLM.API.Controllers.BaseController.TraceSwitch">
            <summary>
            Gets TraceSwitch instance
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Controllers.BaseController.ServiceContext">
            <summary>
                Gets the security token by inspecting the message header.
            </summary>
            <value>The service context.</value>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.BaseController.GenerateApiContext(Icertis.ACF.Helpers.Core.Security.ApiToken)">
            <summary>
            For a given <see cref="T:Icertis.ACF.Helpers.Core.Security.ApiToken"/>, create an instance of type <see cref="T:Icertis.ACF.Helpers.Core.Configuration.ApiContext"/>
            </summary>
            <param name="token">
            Service token.
            </param>
            <returns>
            Service context.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.BaseController.InvokeExternalWebOperationWithRetry``1(System.Func{System.String,``0},System.String)">
            <summary>
            Invokes the specified web-method delegate and returns the result. Retries 
            the request using exponential back-off.
            </summary>
            <typeparam name="T">The type of object that the delegate returns.</typeparam>
            <param name="retriableOperation">The web-method delegate.</param>
            <param name="startsWith">Initial characters of the user's name</param>
            <returns>The result of the method.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.BaseController.Initialize(System.Web.Http.Controllers.HttpControllerContext)">
            <summary>
            Initializes data that might not be available when the constructor is called.
            <seealso cref="!:http://msdn.microsoft.com/en-us/library/system.web.mvc.controller.initialize%28v=vs.118%29.aspx"/>
            </summary>
            <param name="controllerContext">The controller context.</param>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.BaseController.IsRetriableError(System.Exception)">
            <summary>
            Indicates whether the request that resulted in the specified exception can be resolved by retrying.
            </summary>
            <param name="exception">The exception.</param>
            <returns>
             True, if the exception can by resolved by retrying, and false otherwise.
            </returns>
        </member>
        <member name="T:Icertis.CLM.API.Controllers.ClauseController">
            <summary>
            Class for clause specific functions.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.ClauseController.clauseModel">
            <summary>
            Clause Model.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClauseController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Icertis.CLM.API.Controllers.ClauseController"/> class, and the <see cref="T:Icertis.CLM.API.Common.Models.ClauseModel"/> class.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClauseController.Save(Icertis.CLM.Masters.Clause)">
            <summary>
            Save Clause instance.
            </summary>
            <param name="clause">
            Instance data.
            </param>
            <returns>
            Http response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClauseController.SaveWithWorkflow(Icertis.CLM.Masters.Clause)">
            <summary>
            Save Clause instances.
            </summary>
            <param name="clause">
            The clause instance to save.
            </param>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClauseController.SaveInstanceAndFileWithWorkflow(System.Collections.ArrayList)">
            <summary>
            Save Clause instances.
            </summary>
            <param name="listOfObjects">
            ArrayList of objects
            </param>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClauseController.GetClauseFile(System.Guid,System.Boolean)">
            <summary>
            Get Clause Document File
            </summary>
            <param name="filePath">path of file</param>
            <returns></returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClauseController.IsNameExists(System.String)">
            <summary>
            Check if the name already exists or not.
            </summary>
            <param name="instanceName">
            Instance name to be checked.
            </param>
            <returns>
            True if name already exists, else false.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClauseController.Get(System.Guid,System.Boolean,System.Boolean)">
            <summary>
            Get single Clause instance.
            </summary>
            <param name="clauseId">
            Clause instance id.
            </param>
            <param name="includeChildCollection">
            Include child collection flag.
            </param>
            <param name="fetchAuditEntries">
            a flag indicating whether to fetch audit logs or not.
            </param>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClauseController.GetSpecificVersion(System.String,System.String)">
            <summary>
            Gets specific version of clause
            </summary>
            <param name="entityVersion">
            entity version of clause
            </param>
            <param name="instanceId">
            instance id
            </param>
            <returns>
            returns specific version of clause
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClauseController.GetMany(System.String,System.Boolean)">
            <summary>
            Get clause instances.
            </summary>
            <param name="serializedSearchParameters">
            Serialized Instance.
            </param>
            <param name="includeChildCollection">
            Include Child Collection flag.
            </param>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClauseController.GetClausesByContractTypeId(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            gets clauses by contract type id provided
            </summary>
            <param name="contractTypeIds">
            contract Type Id
            </param>
            <param name="searchTerm">Search term</param>
            <param name="pageSize">Number of objects to return</param>
            <param name="page">Page number to get</param>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClauseController.GetMany(System.String,System.Boolean,System.String)">
            <summary>
            Get clause instances.
            </summary>
            <param name="status">
            Clause status.
            </param>
            <param name="onlyActive">
            Only Active to be fetched or not.
            </param>
            <param name="contractTypeId">
            Contract Type Id.
            </param>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClauseController.GetAssociatingAgreements(System.Guid,System.Int32,System.Int32)">
            <summary>
            Returns list of agreements which are containing given clause
            </summary>
            <param name="clauseId">
            clause id
            </param>
            <param name="page">page number</param>
            <param name="count">count of record per page</param>
            <returns>
            list of agreements
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClauseController.GetAssociatingTemplates(System.String,System.Int32,System.Int32)">
            <summary>
            Get list of template in which current clause is used
            </summary>
            <param name="clauseId">clause id</param>
            <param name="pageNo">page number</param>
            <param name="count">count of records</param>
            <returns>list of template</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClauseController.Delete(System.Guid,System.Boolean)">
            <summary>
            Delete clause.
            </summary>
            <param name="clauseId">
            Clause Id to delete.
            </param>
            <param name="hardDelete">
            Hard delete flag.
            </param>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClauseController.DeleteMany(System.Collections.Generic.IEnumerable{System.Guid},System.Boolean)">
            <summary>
            Delete clause instances.
            </summary>
            <param name="clauseIdList">
            Instance id list for delete.
            </param>
            <param name="hardDelete">
            Hard delete flag.
            </param>
            <returns>
            Http response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClauseController.DeActivate(System.Guid)">
            <summary>
            De-Activate clause.
            </summary>
            <param name="clauseId">
            ID of clause to be de-activated.
            </param>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClauseController.Activate(System.Guid)">
            <summary>
            Activate clause.
            </summary>
            <param name="clauseId">
            ID of clause to be activated.
            </param>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClauseController.DeleteAssociatedInstance(System.Guid,System.String,Icertis.CLM.Masters.Clause)">
            <summary>
            Delete Associated Instance.
            </summary>
            <param name="id">
            Id of associated instance.
            </param>
            <param name="associatedEntityName">
            Associated Entity Name.
            </param>
            <param name="clause">
            Clause instance.
            </param>
            <returns>
            Http Response Message.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClauseController.GetClauseByName(System.String,System.Boolean)">
            <summary>
            Get latest version of clause of given name
            </summary>
            <param name="clauseName">
            name of clause
            </param>
            <param name="includeChildCollection">
            include child collection
            </param>
            <returns>
            clause object
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClauseController.GetAllChildClausesOfClause(System.Guid,System.Boolean)">
            <summary>
            Get all child clauses of a parent clause.
            </summary>
            <param name="clauseInstanceId">The instance id of parent clause</param>
            <param name="includeChildCollection">include children</param>
            <returns>The clause list.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClauseController.GetClausesByClauseCode(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Get single Clause instance by Clause Code.
            </summary>
            <param name="clauseCodes">
            Clause codes.
            </param>        
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClauseController.GetBaseLocalizationClausesByContractTypes(System.Collections.Generic.IEnumerable{System.Guid},System.Nullable{System.Guid},System.Boolean,System.Int32,System.Int32)">
            <summary>
            Gets the base(primary) localization clauses by contract types.
            </summary>
            <param name="contractTypeIds">The contract type ids.</param>
            <param name="linkedPrimaryClauseEntityInstanceId">Linked (terminated) clause instance id if any to include in result</param>
            <param name="includeChildCollection">if set to <c>true</c> [include child collection].</param>
            <param name="pageSize">Size of the page.</param>
            <param name="page">The page.</param>
            <returns>base(primary) localization clauses</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClauseController.GetSecondaryLocalizationClauses(System.Guid,System.Boolean)">
            <summary>
            Gets the secondary localization clauses by parent clause instance id.
            </summary>
            <param name="parentInstanceId">Parent clause instance id.</param>
            <param name="includeChildCollection">if set to <c>true</c> [include child collection].</param>
            <returns>secondary localization clauses</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClauseController.GetMany(System.String,System.Guid,System.Boolean,System.Boolean)">
            <summary>
            Get Clauses for a certain contractype for a user
            </summary>
            <param name="contractTypeIds">Contract type id for which clauses are to be returned</param>
            <param name="userId">User for which clauses are to be returned</param>
            <param name="includeAllVersions">Include all versions of the clause</param>
            <param name="skipAuthorizationCheck">Skip Authorization Check</param>
            <returns>Customization API Constant result.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClauseController.GetClausesWithProjections(Icertis.CLM.API.Models.HttpsRequestModel.ClauseRequestModel)">
            <summary>
            Get Clauses for a certain contractypes for a user
            </summary>
            <param name="clauseRequestModel">Get Many Reuest Body which includes contract Type Ids , projections, userId, includeAllVersions, currentVersion</param>
            <returns>Customization API Constant result.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClauseController.EditActionAllowed(System.Guid,System.Int32)">
            <summary> Method checks if Edit action is allowed on the clause specified by clauseid </summary>
            <param name="clauseid"> Clause instance id </param>
            <param name="version"> clause document version </param>
            <returns> Method return true/false based on if clause is editable </returns>
        </member>
        <member name="T:Icertis.CLM.API.Controllers.ClientConfigController">
            <summary>
            ClientConfig Controller
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.ClientConfigController.searchModel">
            <summary>
            Search model instance
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.ClientConfigController.instanceModel">
            <summary>
            The instance model
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.ClientConfigController.contractTypeModel">
            <summary>
            Contract Type Model.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.ClientConfigController.userModel">
            <summary>
            Contract Type Model.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.ClientConfigController.clientConfigSearch">
            <summary>
            Client Config Search
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.ClientConfigController.tenantCode">
            <summary>
            The tenant code.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClientConfigController.#ctor">
            <summary>
            Client Config Controller class
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClientConfigController.SaveClientConfig(Icertis.CLM.Search.Models.ClientConfig.ClientConfig)">
            <summary>
            Save client config settings
            </summary>
            <param name="clientConfig">client config</param>
            <returns>status of save operation</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClientConfigController.GetClientConfig(System.String,System.Int32)">
            <summary>
            Get client config settings
            </summary>
            <param name="clientType">client type</param>
            <param name="version">version of config</param>
            <returns>JSON object containing the config</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClientConfigController.GetMaxClientConfigVersion(System.String)">
            <summary>
            Get client config settings
            </summary>
            <param name="clientType">client type</param>
            <returns>JSON object containing the max version</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClientConfigController.GetAllSavedSearchesForUser(System.String)">
            <summary>
            Get all saved searches for user
            </summary>
            <param name="userId">user identifier</param>
            <returns>JSON object containing all saved search queries</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClientConfigController.GetFacetAttributesForSavedSearch(System.String)">
            <summary>
            Get facet attribute for given saved search
            </summary>
            <param name="saveSearchId">save search id</param>
            <returns>JSON object containing facet attributes</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClientConfigController.GetSavedSearchesWithFacetAttributes(System.String)">
            <summary>
            Get saved searches for user, with all the facet attributes
            </summary>
            <param name="userId">user identifier</param>
            <returns>JSON object containing saved searches with facet attributes</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClientConfigController.GetAllContractTypeAttributes(System.String)">
            <summary>
            Get all contract type attributes
            </summary>
            <param name="userId">user identifier</param>
            <returns>JSON object containing all contract type attributes</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClientConfigController.GetAllContractTypes(System.String)">
            <summary>
            Get all published contract types
            </summary>
            <param name="userId">user identifier</param>
            <returns>JSON object containing list of contract types</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ClientConfigController.GetAttributesForContractType(System.String)">
            <summary>
            Get attributes for a contract type
            </summary>
            <param name="sysId">sys id for contract type identifier</param>
            <returns>JSON object containing attributes for contract types</returns>
        </member>
        <member name="T:Icertis.CLM.API.Controllers.CollaborationController">
            <summary>
            Collaboration Controller
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.CollaborationController.collaborationtModel">
            <summary>
            Collaboration Model
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.CollaborationController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Icertis.CLM.API.Controllers.CollaborationController"/> class, and the <see cref="T:Icertis.CLM.API.Common.Models.Collaboration.CollaborationModel"/> class.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.CollaborationController.GetMessageNotificationRecipients(System.Guid)">
            <summary>
            Get list of recipients to be Notification is to be send when new message or reply to existing topic is done.
            </summary>
            <param name="messageId">ICMMessageEntity SysId</param>
            <returns>Recipients to whom notification is to be send</returns>
        </member>
        <member name="T:Icertis.CLM.API.Controllers.ConfigurationController">
            <summary>
            This will be used for ICM Bot related functionalities.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ConfigurationController.GetConfigurationValues(System.String[])">
            <summary>
            Returns the dictionary with config values.
            </summary>
            <param name="configKeys">list of config keys to get the values.</param>
            <returns>Returns the values of the config keys.</returns>
        </member>
        <member name="T:Icertis.CLM.API.Controllers.ContractRequestController">
            <summary>
            Contract Request Controller
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractRequestController.Get(System.Guid,System.String)">
            <summary>
            Gets the contract request.
            </summary>
            <param name="id">The request identifier.</param>
            <param name="type">The request entity name.</param>
            <returns><see cref="T:Icertis.ACF.EntityService.Data.EntityBase"/> object of the contract request.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractRequestController.EvaluateQnARules(System.Object)">
            <summary>
            Evaluates the Question and Answer rules.
            </summary>
            <param name="contractRequestObject">The contract request.</param>
            <returns>A list of contract types names selected as a result of running rules on the contract request.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractRequestController.SavePartialRequest(System.Object)">
            <summary>
            Saves the partial request.
            </summary>
            <param name="contractRequestObject">The contract request object.</param>
            <returns>An <see cref="T:System.Net.Http.HttpResponseMessage"/> object representing the freshly saved object.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractRequestController.Update(System.Object)">
            <summary>
            Updates the specified contract request.
            </summary>
            <param name="contractRequestObject">The contract request.</param>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractRequestController.CopyExistingContractRequest(System.Guid,System.String,System.Int64)">
            <summary>
            Copy existing contract request.
            </summary>
            <param name="contractRequestId">The contract request identifier.</param>
            <param name="entityName">The entity name.</param>
            <param name="loggedInUserId">The logged-in user Id.</param>
            <returns>
            The contract request Id.
            </returns>
        </member>
        <member name="T:Icertis.CLM.API.Controllers.ContractTypeController">
            <summary>
            Class for contract type specific functions.
            </summary>
            <summary>
            Contract type partial class for discover ai related changes.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.ContractTypeController.contractTypeModel">
            <summary>
            Contract Type Model.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.ContractTypeController.userModel">
            <summary>
            The user model
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Icertis.CLM.API.Controllers.ContractTypeController"/> class.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.GetContractTypesByBaseIdsFromSearch(System.Object,System.Boolean,System.Boolean)">
            <summary>
            Gets Contract Types From Elastic Search
            </summary>
            <param name="searchData">The search criteria</param>
            <param name="getLatestOnly">Indicates whether we want only latest contract types</param>
            <param name="getPublishedOnly">Indicates whether we want only published contract types</param>
            <returns>List Of ContractTypes</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.GetContractTypesByNamesFromSearch(System.Object,System.Boolean,System.Boolean)">
            <summary>
            Gets Contract Types From Elastic Search
            </summary>
            <param name="searchData">The search criteria</param>
            <param name="getLatestOnly">Indicates whether we want only latest contract types</param>
            <param name="getPublishedOnly">Indicates whether we want only published contract types</param>
            <returns>List Of ContractTypes</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.GetLatestContractTypeByBaseIdFromSearch(System.Guid,System.Boolean)">
            <summary>
            Gets Contract Types From Elastic Search
            </summary>
            <param name="baseId">Base id of the contract type</param>
            <param name="getPublishedOnly">Indicates whether we want only published contract types</param>
            <returns>A <see cref="T:Icertis.CLM.Masters.ContractType"/> object</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.GetLatestContractTypeByNameFromSearch(System.String,System.Boolean)">
            <summary>
            Gets Contract Types From Elastic Search
            </summary>
            <param name="contractTypeName">Name of the contract type</param>
            <param name="getPublishedOnly">Indicates whether we want only published contract types</param>
            <returns>A <see cref="T:Icertis.CLM.Masters.ContractType"/> object</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.GetInstancesBySearchCondition(System.Object,System.Boolean)">
            <summary>
            Get contract type instances.
            </summary>
            <param name="requestBody">The parameters.</param>
            <param name="includeChildCollection">Include Child Collection</param>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.GetInstance(System.Guid,System.Boolean,System.Boolean)">
            <summary>
            Get contract type instance.
            </summary>
            <param name="contractTypeId">
            Contract type id.
            </param>
            <param name="includeChildCollection">
            Include childe collection or not.
            </param>
            <param name="fetchAuditEntries">
            fetch Audit Entries or not
            </param>
            <returns>
            Http response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.GetAttributes(System.Guid)">
            <summary>
            Get attributes of contract type instance.
            </summary>
            <param name="contractTypeSysId">
            The contract type instance id.
            </param>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.GetExtensionMetadata(System.String,System.Guid,System.Guid)">
            <summary>
            Get <see cref="T:Icertis.ACF.EntityService.Data.EntityMetadataCollection"/> of extension attributes of contract type instance.
            </summary>
            <param name="contractTypeName"> Name of the contract type.</param>
            <param name="extensionEntityId">Extension entity id.</param>
            <param name="extensionInstanceId">Extension instance id.</param>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.GetICMAttributes(System.Guid)">
            <summary>
            Get attributes of contract type instance.
            </summary>
            <param name="contractTypeId">
            The contract type instance id.
            </param>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.GetICMAttributes(System.String,System.Guid,System.Guid)">
            <summary>
            Get collection of <see cref="T:Icertis.CLM.Masters.ICMAttribute"/> of contract type instance.
            </summary>
            <param name="nameOfEntity">Name Of Entity</param>
            <param name="extensionEntityId">Extension entity id</param>
            <param name="extensionInstanceId">Extension instance id</param>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.GetAssociatedContractTypes(System.Guid)">
            <summary>
            Get associated contract type instances.
            </summary>
            <param name="contractTypeEntityId">
            The contract type instance id.
            </param>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.GetContractTypesBySysId(System.String)">
            <summary>
            Gets contract types by sys ids.
            </summary>
            <param name="sysIds">Contract type sys ids</param>
            <returns>List of contractTypes.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.ResumeWorkflow(System.String,System.String)">
            <summary>
            Resumes contract type workflow
            </summary>
            <param name="serializedCTInstance">Contract Type Serialized Instance</param>
            <param name="workflowAction">Workflow Action</param>
            <returns>HTTP Response Message</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.SaveWithWorkflow(System.Object,System.String)">
            <summary>
            Save Clause instances.
            </summary>
            <param name="requestBody">dynamic object</param>
            <param name="transitionName">
            The transition name.
            </param>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.DeleteMany(System.Collections.Generic.IEnumerable{System.Guid},System.Boolean)">
            <summary>
            Delete clause instances.
            </summary>
            <param name="contractTypeIdList">
            Instance id list for delete.
            </param>
            <param name="hardDelete">
            Hard delete flag.
            </param>
            <returns>
            Http response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.DeActivate(System.Guid)">
            <summary>
            De-Activate contract type.
            </summary>
            <param name="contractTypeId">
            ID of contract type to be de-activated.
            </param>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.DeleteAssociatedInstance(System.Guid,System.String,Icertis.CLM.Masters.ContractType)">
            <summary>
            Delete Associated Instance.
            </summary>
            <param name="id">
            Id of associated instance.
            </param>
            <param name="associatedEntityName">
            Associated Entity Name.
            </param>
            <param name="contractType">
            Contract type instance.
            </param>
            <returns>
            Http Response Message.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.Activate(System.Guid)">
            <summary>
            Activate contractType.
            </summary>
            <param name="contractTypeId">
            ID of contract type to be activated.
            </param>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.GetMany">
            <summary>
            Get all contract type without any search condition.
            </summary>
            <returns>Http Response code.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.GetAssociationType">
            <summary>
            Get all association type without any search condition.
            </summary>
            <returns>Http Response code.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.CreateEntity(Icertis.CLM.Masters.ContractType)">
            <summary>
            Create Entity.
            </summary>
            <param name="contractTypeObj">
            Contract Type Object.
            </param>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.UpdateContractType(System.Object,System.Int64)">
            <summary>
            Update Contract Type.
            </summary>
            <param name="requestBody">dynamic object</param>
            <param name="loggedInUser">
            Logged In User.
            </param>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.GetSpecificVersion(System.String,System.String)">
            <summary>
            Gets specific version of contract type
            </summary>
            <param name="entityVersion">
            entity version of contract type
            </param>
            <param name="instanceId">
            instance id
            </param>
            <returns>
            returns specific version of contract type
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.InitiatePublishContractTypes">
            <summary>
            Initiates publish contract type process
            </summary>
            <returns>Boolean if we have contract types to publish</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.PublishContractTypes">
            <summary>
            Publishes contract types
            </summary>
            <returns>Latest assembly</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.AddNotificationForContractTypeAttributeRemoval(System.Guid,System.Collections.Generic.IEnumerable{Icertis.CLM.Masters.ContractTypeAttribute})">
            <summary>
            Sends Email notification when contract type attributes are removed.
            </summary>
            <param name="contractTypeId">Contract Type Id</param>
            <param name="updatedContractTypeAttributes">Updated ContractType Attributes </param>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.GetLatestPublishedContractTypeByBaseId(System.Guid)">
            <summary>
            Fetches the latest, published contract type
            </summary>
            <param name="baseId">Base Id of the contract type</param>
            <returns>The latest, published <see cref="T:Icertis.CLM.Masters.ContractType"/> object.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.CheckIfContractTypeNameAlreadyExist(System.String,System.Guid)">
            <summary>
            Check if contract type name already exist.
            </summary>
            <param name="contractTypeName">Contract type name</param>
            <param name="sysId">Contract type sysId</param>
            <returns>True if contract type name already exist.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.GetLatestPublishedContractTypesThinModel(System.Object,System.String)">
            <summary>
            Get Latest Published Contract Types Thin Model
            </summary>
            <param name="requestBody">Post data parameters</param>
            <param name="cultureName">culture name</param>
            <returns>List of Contract Types</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.SaveAttributeExtension(System.Object,System.String)">
            <summary>
            Save Clause instances.
            </summary>
            <param name="requestBody">dynamic object</param>
            <param name="transitionName">
            The transition name.
            </param>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.PublishTemplateVariables(System.Guid)">
            <summary>
            Publish template variables for template instance
            </summary>
            <param name="templateId">template instance id</param>
            <returns>Http Response code.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.GetContractTypeExtensionAttributes(System.Guid,System.Guid)">
            <summary>
            Returns list of <see cref="T:Icertis.CLM.Masters.ContractTypeAttributeExtension"/>
            </summary>
            <param name="contractTypeEntityInstanceId">Contract type entity instance id.</param>
            <param name="templateSysId">Extension Entity Id</param>
            <returns>List of <see cref="T:Icertis.CLM.Masters.ContractTypeAttributeExtension"/> of the specified contract type and extension instance id.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.GetBulkContractTypeExtensionAttributes(System.Object)">
            <summary>
            Returns list of <see cref="T:Icertis.CLM.Masters.ContractTypeAttributeExtension"/>
            </summary>
            <param name="searchData">dynamic data</param>        
            <returns>List of <see cref="T:Icertis.CLM.Masters.ContractTypeAttributeExtension"/> of the specified contract type and extension instance id.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.GetExtensionEntity(System.String,System.String,System.String)">
            <summary>
            Gets the latest published contract type by base identifier.
            </summary>
            <param name="contractTypeName">Name of the contract type.</param>
            <param name="extensionEntityId">The extension entity identifier.</param>
            <param name="extensionInstanceId">The extension instance identifier.</param>
            <returns>entity with extension metadata</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.FindContractTypesByProjections(System.String,System.String,System.Boolean,System.String,System.String,System.Boolean,System.Boolean,System.TimeZoneInfo,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Get list of contractTypes with limited information - will return data for only those properties specified in projection.
            </summary>
            <param name="searchParameters">search Parameters</param>
            <param name="projections">list of properties need to fetch</param>
            <returns>list of contractTypes</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ContractTypeController.GetLatestPublishedCategoryAgreementContractTypes(System.String)">
            <summary>
            Gets the latest published category and contract types.
            </summary>
            <param name="name">agreement name.</param>
            <returns>Returns the latest contract types.</returns>
            <remarks>
                Action method GetLatestPublishedContractTypesThinModel accepts dynamic requestBody and cannot be passed null.
                This API is required for requests which does not take input of search parameters
            </remarks>
        </member>
        <member name="T:Icertis.CLM.API.Controllers.CurrencyController">
            <summary>
            API Currency Controller
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.CurrencyController.entityNameCurrency">
            <summary>
            Entity Name - Currency
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.CurrencyController.instance">
            <summary>
            Get or sets instance model object.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.CurrencyController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Icertis.CLM.API.Controllers.CurrencyController"/> class.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.CurrencyController.GetCurrencies">
            <summary>
            Get Currency
            </summary>
            <returns>
            http Response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.CurrencyController.GetCurrency(System.Guid,System.Boolean)">
            <summary>
            Get single currency instance
            </summary>
            <param name="currencyid">
            currency id
            </param>
            <param name="includeChildCollection">
            include child collection flag
            </param>
            <returns>
            http Response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.CurrencyController.GetCurrency(System.String,System.Boolean)">
            <summary>
            Get single Currency instance
            </summary>
            <param name="currencyName">
            Currency Name
            </param>
            <param name="includeChildCollection">
            Include child collection flag.
            </param>
            <returns>
            http Response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.CurrencyController.SaveCurrency(Icertis.CLM.Masters.Currency)">
            <summary>
            Save Currency instance
            </summary>
            <param name="currencyInstance">
            instance data
            </param>
            <returns>
            http response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.CurrencyController.DeleteCurrency(System.String,System.Guid,System.Boolean)">
            <summary>
            Delete Single Currency instance
            </summary>
            <param name="entityName">
            Entity Name
            </param>
            <param name="currencyId">
            Currency Id
            </param>
            <param name="hardDelete">
            Hard Delete
            </param>
            <returns>
            http response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.CurrencyController.DeleteCurrencies(System.String,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean)">
            <summary>
            Delete Multiple Currencies
            </summary>
            <param name="entityName">
            Entity Name
            </param>
            <param name="currencyIdList">
            Currency Id List
            </param>
            <param name="hardDelete">
            Hard Delete
            </param>
            <returns>
            http response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.CurrencyController.IsNameExists(System.String,System.String)">
            <summary>
            Check if the name already exists or not.
            </summary>
            <param name="entityName">
            Entity name of the instance to be checked.
            </param>
            <param name="instanceName">
            Instance name to be checked.
            </param>
            <returns>
            True if name already exists, else false.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.CurrencyController.IsCodeExists(System.String,System.String)">
            <summary>
            Check if the code already exists or not.
            </summary>
            <param name="entityName">
            Entity name of the instance to be checked.
            </param>
            <param name="instanceName">
            Instance Code to be checked.
            </param>
            <returns>
            True if code already exists, else false.
            </returns>
        </member>
        <member name="T:Icertis.CLM.API.Controllers.DiscoverAIController">
            <summary>
            Discover AI controller
            </summary>
            <seealso cref="T:Icertis.CLM.API.Controllers.BaseController" />
        </member>
        <member name="F:Icertis.CLM.API.Controllers.DiscoverAIController.mapper">
            <summary>
            The mapper
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.DiscoverAIController.discoverAIFacade">
            <summary>
            The discover ai model
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DiscoverAIController.#ctor(AutoMapper.IMapper,Icertis.DiscoverAI.Service.IAgreementService,Icertis.DiscoverAI.Service.IBulkUploadService,Icertis.DiscoverAI.Service.ISimilarityIndexerService)">
            <summary>
            Initializes a new instance of the <see cref="T:Icertis.CLM.API.Controllers.DiscoverAIController" /> class.
            </summary>
            <param name="mapper">The mapper.</param>
            <param name="agreementService">The agreement service.</param>
            <param name="bulkUploadService">The bulk upload service.</param>
            <param name="similarityIndexerService">The similarity indexer service.</param>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DiscoverAIController.CreateAgreement(Icertis.DiscoverAI.Facade.Models.DiscoverAI.IcmAgreementCreateRequest)">
            <summary>
            Creates the agreement.
            </summary>
            <param name="icmAgreementCreateRequest">The agreement request.</param>
            <returns>Returns the created agreement.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DiscoverAIController.CreateAgreement(Icertis.DiscoverAI.Models.Request.Create.AgreementCreateRequest,System.Boolean)">
            <summary>
            Creates the agreement.
            </summary>
            <param name="agreementCreateRequest">The agreement request.</param>
            <param name="isDiggerAgreement">Is Digger Agreement.</param>
            <returns>Returns the created agreement.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DiscoverAIController.GetTenantAgreementAsync(System.Guid)">
            <summary>
            Gets the tenant agreement asynchronously.
            </summary>
            <param name="agreementId">The agreement identifier.</param>
            <returns>Returns the agreement for a tenant.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DiscoverAIController.GetTenantAgreementsAsync">
            <summary>
            Gets the tenant agreements asynchronously.
            </summary>
            <returns>Returns the agreement detail.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DiscoverAIController.PatchAgreement(System.Guid,Icertis.DiscoverAI.Facade.Models.DiscoverAI.IcmAgreementPatchRequest)">
            <summary>
            Patches the agreement.
            </summary>
            <param name="agreementId">The agreement identifier.</param>
            <param name="icmAgreementPatchRequest">The icm agreement patch request.</param>
            <returns>Updates the agreement.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DiscoverAIController.DownloadAgreementAsync(System.Guid,System.Boolean)">
            <summary>
            Downloads the agreement asynchronously.
            </summary>
            <param name="agreementId">The agreement identifier.</param>
            <param name="isIcmAgreeementId">The ICM agreement identifier.</param>
            <returns>Returns the downloaded agreement response</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DiscoverAIController.FindAgreementSimilarSummaryResponseAsync(Icertis.DiscoverAI.Models.Request.Search.TenantAgreementSimilarSearchRequest)">
            <summary>
            Finds the agreement similar summary response asynchronous.
            </summary>
            <param name="searchRequest">The search request.</param>
            <returns>Returns the similar agreement.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DiscoverAIController.GetClauses(System.Guid)">
            <summary>
            Gets the clauses.
            </summary>
            <param name="agreementId">The agreement identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DiscoverAIController.GetClauseOptions(System.Guid,System.Guid)">
            <summary>
            Gets the clause options.
            </summary>
            <param name="agreementId">The agreement identifier.</param>
            <param name="clauseId">The clause identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DiscoverAIController.CreateClauseOptions(System.Guid,System.Guid,Icertis.DiscoverAI.Models.Request.Create.BulkAgreementClauseOptionCreateRequest)">
            <summary>
            Creates the clause options.
            </summary>
            <param name="agreementId">The agreement identifier.</param>
            <param name="clauseId">The clause identifier.</param>
            <param name="bulkClauseOptionRequest">The bulk clause option request.</param>
            <returns>Returns the create clause options response.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DiscoverAIController.CreateClauses(System.Guid,Icertis.DiscoverAI.Models.Request.Create.BulkAgreementClauseCreateRequest)">
            <summary>
            Creates the clauses.
            </summary>
            <param name="agreementId">The agreement identifier.</param>
            <param name="bulkClauseRequest">The bulk clause request.</param>
            <returns></returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DiscoverAIController.FindAgreementClausesSimilarSummaryResponseAsync(Icertis.DiscoverAI.Models.Request.Search.TenantAgreementClauseSimilarSearchRequest)">
            <summary>
            Finds the agreement clauses similar summary response asynchronous.
            </summary>
            <param name="searchRequest">The search request.</param>
            <returns>Returns the similar agreement clauses.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DiscoverAIController.GetMetadatas(System.Guid)">
            <summary>
            Gets the metadatas.
            </summary>
            <param name="agreementId">The agreement identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DiscoverAIController.GetMetadata(System.Guid,System.Guid)">
            <summary>
            Gets the metadata.
            </summary>
            <param name="agreementId">The agreement identifier.</param>
            <param name="metadataId">The metadata identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DiscoverAIController.GetMetadataOptions(System.Guid,System.Guid)">
            <summary>
            Gets the metadata options.
            </summary>
            <param name="agreementId">The agreement identifier.</param>
            <param name="metadataId">The metadata identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DiscoverAIController.GetMetadataOption(System.Guid,System.Guid,System.Guid)">
            <summary>
            Gets the metadata options.
            </summary>
            <param name="agreementId">The agreement identifier.</param>
            <param name="metadataId">The metadata identifier.</param>
            <param name="metadataOptionId">The metadata option identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DiscoverAIController.CreateMetadataOptions(System.Guid,Icertis.DiscoverAI.Models.Request.Create.BulkAgreementMetadataOptionCreateRequest)">
            <summary>
            Creates the metadata options.
            </summary>
            <param name="agreementId">The agreement identifier.</param>
            <param name="bulkRequest">The bulk request.</param>
            <returns></returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DiscoverAIController.GetObligationsAsync(System.Guid)">
            <summary>
            Gets the clauses.
            </summary>
            <param name="agreementId">The agreement identifier.</param>
            <returns>Returns the list of obligation for an agreement.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DiscoverAIController.CreateObligationsAsync(System.Guid,Icertis.DiscoverAI.Models.Request.Create.BulkAgreementObligationCreateRequest)">
            <summary>
            Creates the obligations.
            </summary>
            <param name="agreementId">The agreement identifier.</param>
            <param name="bulkObligationRequest">The bulk clause request.</param>
            <returns>Returnd the success message if the obligations are created.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DiscoverAIController.CreateBulkUploadRequest(Icertis.DiscoverAI.Models.Request.Create.BulkUploadCreateRequest)">
            <summary>
            Creates the bulk upload request.
            </summary>
            <param name="bulkUploadCreateRequest">The agreement request.</param>
            <returns>Returns the created agreement.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DiscoverAIController.GetBulkUploadDetailResponseAsync(System.Guid)">
            <summary>
            Gets the tenant bulk upload request asynchronously.
            </summary>
            <param name="bulkUploadRequestId">The bulk upload request identifier.</param>
            <returns>Returns the agreement for a tenant.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DiscoverAIController.GetBulkUploadSummaryResponseAsync">
            <summary>
            Gets the tenant agreements asynchronously.
            </summary>
            <returns>Returns the agreement detail.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DiscoverAIController.PatchBulkUpload(System.Guid,Icertis.DiscoverAI.Models.Request.Patch.BulkUploadPatchRequest)">
            <summary>
            Patches the agreement.
            </summary>
            <param name="bulkUploadRequestId">The bulk upload request identifier.</param>
            <param name="bulkUploadPatchRequest">The bulk upload patch request.</param>
            <returns>Updates the agreement.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DiscoverAIController.CreateTablesAsync(System.Guid,Icertis.DiscoverAI.Models.Request.Create.BulkAgreementTableCreateRequest)">
            <summary>
            Creates the obligations.
            </summary>
            <param name="agreementId">The agreement identifier.</param>
            <param name="bulkTableRequest">The bulk clause request.</param>
            <returns>Returnd the success message if the obligations are created.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DiscoverAIController.CreateSimilarityIndedxer(Icertis.DiscoverAI.Models.Request.Create.SimilarityIndexerCreateRequest)">
            <summary>
            Creates the similarity indexer.
            </summary>
            <param name="similarityIndexerCreateRequest">The similarity indexer create request.</param>
            <returns>Returns the created agreement.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DiscoverAIController.GetTenantSimilarityIndexerAsync(System.Guid)">
            <summary>
            Gets the tenant similarity indexer detail asynchronously.
            </summary>
            <param name="similarityIndexerId">The similarity index identifier.</param>
            <returns>Returns the similarity indexer entry.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DiscoverAIController.GetTenantSimilarityIndexersAsync">
            <summary>
            Gets the tenant similarity indexers asynchronously.
            </summary>
            <returns>Returns the similarity indexer entries.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DiscoverAIController.PatchSimilarityIndexer(System.Guid,Icertis.DiscoverAI.Facade.Models.DiscoverAI.IcmSimilarityIndexerPatchRequest)">
            <summary>
            Patches the similarity indexer.
            </summary>
            <param name="similarityIndexerId">The similarity indexer identifier.</param>
            <param name="icmSimilarityIndexerPatchRequest">The icm similarity indexer patch request.</param>
            <returns>Updates the agreement.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DiscoverAIController.CreateInvalidParameterMessage(System.Net.Http.HttpRequestMessage)">
            <summary>
            Creates the invalid parameter message.
            </summary>
            <param name="request">The request.</param>
            <returns>Returns the HttpResultMessage.</returns>
        </member>
        <member name="T:Icertis.CLM.API.Controllers.DistributionGroupController">
            <summary>
            Class for clause specific functions
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.DistributionGroupController.entityNameDG">
            <summary>
            Entity Name - User
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.DistributionGroupController.instance">
            <summary>
            Get or sets instance model object.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.DistributionGroupController.distributionGroupModel">
            <summary>
            Get or sets instance model object.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.DistributionGroupController.searchModel">
            <summary>
            Get or sets Search Model object.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.DistributionGroupController.userModel">
            <summary>
            Get or sets user Model object.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DistributionGroupController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Icertis.CLM.API.Controllers.DistributionGroupController"/> class.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DistributionGroupController.GetDistributionGroups(System.Boolean)">
            <summary>
            Get Distribution Groups
            </summary>
            <param name="includeChildCollection">
            include child collection flag
            </param>
            <returns>
            http Response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DistributionGroupController.GetDistributionGroup(System.Guid,System.Boolean)">
            <summary>
            Get single Distribution Group instance
            </summary>
            <param name="distributionGroupid">
            distribution Group id
            </param>
            <param name="includeChildCollection">
            include child collection flag
            </param>
            <returns>
            http Response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DistributionGroupController.GetUserCountFromDistributionGroups(System.String,System.String)">
            <summary>
            Get count of users from all specified user groups
            </summary>
            <param name="distributionGroupIds">
            distribution Group ids
            </param>
            <param name="UserIds">
            User ids
            </param>
            <returns>
            http Response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DistributionGroupController.GetDistributionGroup(System.String,System.Boolean)">
            <summary>
            Get single Distribution Group instance
            </summary>
            <param name="distributionGroupName">
            User information instance email id.
            </param>
            <param name="includeChildCollection">
            Include child collection flag.
            </param>
            <returns>
            http Response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DistributionGroupController.GetDistributionGroupUsers(System.String)">
            <summary>
            Get Distribution Group Users 
            </summary>
            <param name="distributionGroupName">
            Distribution Group Name.
            </param>
            <returns>
            http Response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DistributionGroupController.SaveDistributionGroup(Icertis.CLM.Masters.DistributionGroup)">
            <summary>
            Save DistributionGroup instance
            </summary>
            <param name="distributionGroupInstance">
            instance data
            </param>
            <returns>
            http response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DistributionGroupController.SaveDistributionGroupForReplaceUser(System.Collections.ArrayList)">
            <summary>
            Save Distribution Group Instance after User Replacement
            </summary>
            <param name="wrapperObject">object containing distribution group instance and replace user information</param>
            <returns>http response code</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DistributionGroupController.Deprecate(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Deprecates Users Groups for which ids is passed
            </summary>
            <param name="instanceIds">Ids for User Groups to be Deprecated</param>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DistributionGroupController.DeleteDistributionGroup(System.String,System.Guid,System.Boolean)">
            <summary>
            Delete Single DistributionGroup instance
            </summary>
            <param name="entityName">
            Entity Name
            </param>
            <param name="distributionGroupId">
            Distribution Group Id
            </param>
            <param name="hardDelete">
            Hard Delete
            </param>
            <returns>
            http response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DistributionGroupController.DeleteDistributionGroups(System.String,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean)">
            <summary>
            Delete Multiple DistributionGroup instance
            </summary>
            <param name="entityName">
            Entity Name
            </param>
            <param name="distributionGroupIdList">
            Distribution Group Id List
            </param>
            <param name="hardDelete">
            Hard Delete
            </param>
            <returns>
            http response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DistributionGroupController.IsNameExists(System.String,System.String)">
            <summary>
            Check if the name already exists or not.
            </summary>
            <param name="entityName">
            Entity name of the instance to be checked.
            </param>
            <param name="instanceName">
            Instance name to be checked.
            </param>
            <returns>
            True if name already exists, else false.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DistributionGroupController.RemoveUserFromDistributionGroups(System.String,System.String)">
            <summary>
            Remove the user from given distribution groups
            </summary>
            <param name="userSysId">Sys id of the user.</param>
            <param name="distributionGroups">Comma separated sys id of distribution groups</param>
            <returns>True if removed.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DistributionGroupController.AddUsersToDistributionGroup(System.Object)">
            <summary>
            Adds the users to distribution group.
            </summary>
            <param name="wrapperData">The wrapper data.</param>
            <returns>List users added to DG</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DistributionGroupController.AddUserToDistributionGroup(System.Int64,System.Guid)">
            <summary>
            Adds the users to distribution group.
            </summary>
            <param name="userId">User identifier</param>
            <param name="groupId">Group identifier</param>
            <returns>List users added to DG</returns>
        </member>
        <member name="T:Icertis.CLM.API.Controllers.DocumentStoreController">
            <summary>
            Document Store Controller
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.DocumentStoreController.documentModel">
            <summary>
            Agreement Model.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DocumentStoreController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Icertis.CLM.API.Controllers.DocumentStoreController"/> class, and the <see cref="T:Icertis.CLM.API.Common.Models.DocumentStoreModel"/> class.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DocumentStoreController.UploadFile(System.String,System.String,System.Byte[],System.String)">
            <summary>
            This method will upload the document.
            </summary>
            <param name="folderName">Folder Name</param>
            <param name="fileName">FileName will be the folder name where document will be uploaded</param>
            <param name="fileDataToBeSaved">File bytes</param>
            <param name="fileType">File type</param>
            <returns>Server File location</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DocumentStoreController.DownloadFile(System.String)">
            <summary>
            Get file.
            </summary>
            <param name="filePath">File Path.</param>
            <returns>Returns bytes.</returns>\
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DocumentStoreController.DocumentConversionServiceCallBack">
            <summary>
            Call back from document conversion service.
            TODO : Currently the call back from document conversion service does not happen, since the document convertor needs to authenticate itself using the service user or certificate thumbprint, which is pending.        
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.DocumentStoreController.ThrowIfVulnerableApiDisabled(System.String)">
            <summary>Throws exception if vulnerable API is disabled.</summary>
            <param name="methodName">Name of the method.</param>
        </member>
        <member name="T:Icertis.CLM.API.Controllers.EntityController">
            <summary>
            The Entity controller.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.EntityController.RefreshLocalizationCache">
            <summary>
            Refresh Localization Cache.
            </summary>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.EntityController.GetEntity(System.String)">
            <summary>
            Get single entity by name.
            </summary>
            <param name="name">
            Entity name.
            </param>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.EntityController.GetEntitiesByNames(System.String)">
            <summary>
            Get single entity by name.
            </summary>
            <param name="names">Comma separated list of entity names.</param>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.EntityController.GetEntity(System.Guid)">
            <summary>
            Get single entity by ID.
            </summary>
            <param name="entityID">
            Entity Id.
            </param>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.EntityController.PutEntity(Icertis.ACF.EntityService.Data.Entity)">
            <summary>
            Save entity instance.
            </summary>
            <param name="entity">
            Entity name.
            </param>
            <returns>
            Http response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.EntityController.FetchAllEntities">
            <summary>
            Retrieve all Entities.
            </summary>
            <returns>All Entities list.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.EntityController.GenerateTransactionalEntitiesPackage">
            <summary>
            Generate Package after new contract type created.
            </summary>
            <returns>The generated DLL</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.EntityController.GetLatestTransactionalPackagesVersion">
            <summary>
            Gets latest transactional packages version namespace from the entity repository
            </summary>
            <returns>a binaries version namespace</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.EntityController.GetLatestTransactionalPackages">
            <summary>
            Gets latest transactional packages from the entity repository
            </summary>
            <returns>a list of binaries which contain the compiled binaries.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.EntityController.GetPackage(System.String)">
            <summary>
            Gets the package from the database that contains the DLL with the given namespace.
            </summary>
            <param name="packageNamespace">The package namespace</param>
            <returns>The package that contains the DLL with the given namespace.</returns>
        </member>
        <member name="T:Icertis.CLM.API.Controllers.ErrorController">
            <summary>
            Error Controller
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ErrorController.Status500">
            <summary>
            Error Page
            </summary>
            <returns>error message</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ExternalEventController.PostEvent(Icertis.ACF.TaskManager.Core.TaskEventArgs)">
            <summary>
            Post external event on service bus
            </summary>
            <returns>HTTPStatus OK, if the success.</returns>
        </member>
        <member name="T:Icertis.CLM.API.Controllers.InstanceController">
            <summary>
            The Instance controller.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.GetResource(System.String,System.Guid,Icertis.CLM.API.Models.EntityResourceDescriptorArgs,System.String,System.String,System.Int32)">
            <summary>
            Get resources
            </summary>
            <param name="entityName">name of the entity</param>
            <param name="id">entity identifier</param>
            <param name="args">Entity Resource Descriptor Arguments</param>
            <param name="child">Child association to fetch</param>
            <returns>entity instances</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.StartWorkFlow(System.String)">
            <summary>
            Start the WorkFlow.
            </summary>
            <param name="serializedInstance">
            Serialized Instance.
            </param>
            <returns>
            Http Response Message.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.StartWorkFlowWithParent(System.String,System.Guid,System.String)">
            <summary>
            Start the WorkFlow.
            </summary>
            <param name="parentEntityName">parent entity name</param>
            <param name="parentInstanceId">parent instance id</param>
            <param name="serializedInstance">
            Serialized Base Instance.
            </param>
            <returns>
            Http Response Message.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.Search(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Executes the query against the elastic search and returns the result.
            </summary>
            <param name="query">Query to be executed against elastic search</param>
            <returns>Results of elastic search query execution.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.ResumeWorkFlow(System.String,System.String,System.Boolean)">
            <summary>
            Resume the WorkFlow.
            </summary>
            <param name="serializedInstance">
            Serialized Instance.
            </param>
            <param name="actionName">
            Action Name.
            </param>
            <param name="skipAuth">Skip authorization for workflow resume operation.</param>
            <returns>
            Http Response Message.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.ResumeWorkFlow(System.String,System.Guid,System.String,System.String,System.Int64)">
            <summary>
            Resume the WorkFlow.
            </summary>
            <param name="entityName">
            Name of the entity
            </param>
            <param name="id">
            Instance ID
            </param>
            <param name="note">
            note to be added
            </param>
            <param name="actionName">
            Action Name.
            </param>
            <param name="loggedinUserid"> 
            logged in user identifier
            </param>
            <returns>
            Http Response Message.
            </returns>       
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.ResumeWorkFlowMobile(System.String,System.Guid,System.String,System.String,System.Int64,System.String,System.String)">
            <summary>
            Resume the WorkFlow.
            </summary>
            <param name="entityName">
            Name of the entity
            </param>
            <param name="id">
            Instance ID
            </param>
            <param name="note">
            note to be added
            </param>
            <param name="actionName">
            Action Name.
            </param>
            <param name="loggedinUserid"> 
            logged in user identifier
            </param>
            <returns>
            Http Response Message.
            </returns>       
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.ResumeWorkFlowForAddIn(System.String,System.Guid,System.String,System.String,System.Int64,System.String)">
            <summary> Resume the WorkFlow. </summary>
            <param name="entityName"> Name of the entity </param>
            <param name="id"> Instance ID </param>
            <param name="note"> note to be added </param>
            <param name="actionName"> Action Name. </param>
            <param name="loggedinUserid"> logged in user identifier </param>
            <returns> Http Response Message. </returns>       
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.GetMobileConfiguration">
            <summary>
            Get configuration for Mobile
            </summary>
            <returns>
            Http Response Message.
            </returns>       
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.GetAvailableActions(System.String)">
            <summary>
            Get Available Actions.
            </summary>
            <param name="instanceString">
            Instance string.
            </param>
            <returns>
            Http Response Message.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.GetAvailableActions(System.Guid)">
            <summary>
            Get Available Actions.
            </summary>
            <param name="workflowId">The id that identifies the workflow whose bookmarks are required.</param>
            <returns>
            Http Response Message.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.GetAvailableActions(System.String,System.Guid)">
            <summary>
            Get Available Actions.
            </summary>
            <param name="entityName">
            Name of the entity
            </param>
            <param name="id">
            Instance ID
            </param>
            <returns>
            Http Response Message.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.GetWorkflowActionByActionName(System.String,System.Guid,System.String)">
            <summary>
            Get WorkFlow Action By Name.
            </summary>
            <param name="entityName">
            Entity Name.
            </param>
            <param name="instanceId">
            instance Id
            </param>
            <param name="actionName">
            Action Name.
            </param>
            <returns>
            Http Response Message.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.IsUserAuthorizedForAction(System.Guid,System.String,System.String)">
            <summary>
            Determines whether [is user authorized for action] [the specified instance identifier].
            </summary>
            <param name="instanceId">The instance identifier.</param>
            <param name="entityName">Name of the entity.</param>
            <param name="actionName">Name of the action.</param>
            <returns>True if user has action privilege</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.GetAvailableVisibleActions(System.Guid,System.String)">
            <summary>
            Gets the available visible actions.
            </summary>
            <param name="instanceId">The instance identifier.</param>
            <param name="entityName">Name of the entity.</param>
            <returns>collection of visible actions</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.GetAvailableVisibleActionsForMobile(System.Guid,System.String,System.String,System.String,System.Int32)">
            <summary>
            Gets the available visible actions.
            </summary>
            <param name="instanceId">The instance identifier.</param>
            <param name="entityName">Name of the entity.</param>
            <param name="entityType">type of entity: Agreement or ContractRequest</param>
            <param name="clientType">The client type.</param>
            <param name="version">The version of client config.</param>
            <returns>collection of visible actions</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.FindAssociationReferences(System.String,System.Guid,Icertis.ACF.EntityService.Data.AssociationType,System.Boolean)">
            <summary>
            find association references for given entity and id
            </summary>
            <param name="entityName">entity name</param>
            <param name="instanceId">instance id</param>
            <param name="associationType">association type to fetch</param>
            <param name="skipAuthorization">skip authorization</param>
            <returns>http response</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.GetInstance(System.String,System.Guid,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Get single entity instance.
            </summary>
            <param name="entityName">
            Entity name.
            </param>
            <param name="entityInstanceId">
            Entity instance id.
            </param>
            <param name="includeChildCollection">
            Include child collection.
            </param>
            <param name="cacheThisInstance">
            A flag indicating whether to cache this instance or not.
            </param>
            <param name="fetchAuditEntries">
            a flag indicating whether to fetch audit logs or not.
            </param>
            <param name="skipAuthorizationCheck">A flag to indicate whether to skip authorization check while fetching the instance.</param>
            <param name="fetchMaskedAttributes">a flag indicating whether masked attributes need to be fetched</param>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.GetInstanceWithAssociations(System.String,System.Guid,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Get single entity instance.
            </summary>
            <param name="entityName">
            Entity name.
            </param>
            <param name="entityInstanceId">
            Entity instance id.
            </param>
            <param name="associations"> Comma separated list of associations </param>
            <param name="cacheThisInstance">
            A flag indicating whether to cache this instance or not.
            </param>
            <param name="fetchAuditEntries">
            a flag indicating whether to fetch audit logs or not.
            </param>
            <param name="skipAuthorizationCheck">A flag to indicate whether to skip authorization check while fetching the instance.</param>
            <param name="fetchMaskedAttributes">a flag indicating whether masked attributes need to be fetched</param>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.GetInstanceForCreate(System.String)">
            <summary>
            Get single entity instance to be used during create process
            </summary>
            <param name="entityName">
            Entity name.
            </param>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.GetInstances(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Get entity instances based on search parameters. 
            </summary>
            <param name="name">Entity Name</param>
            <param name="serializedInstance">Search parameters</param>
            <param name="includeChildCollection">Include child instances</param>
            <param name="fetchAuditEntries">Fetch audit entries</param>
            <param name="fetchMaskedAttributes">a flag indicating whether masked attributes need to be fetched</param>
            <returns>Http Response</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.GetInstances(System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Get entity instances based on search parameters. 
            </summary>
            <param name="name">Entity Name</param>
            <param name="serializedInstance">Search parameters</param>
            <param name="associations">Association Name</param>
            <param name="fetchAuditEntries">Fetch audit entries</param>
            <param name="fetchMaskedAttributes">a flag indicating whether masked attributes need to be fetched</param>
            <returns>HTTP Response</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.GetInstancesForSearch(System.String,System.String)">
            <summary>
            Get entity instances based on search parameters. 
            </summary>
            <param name="name">Entity Name</param>
            <param name="serializedInstance">Search parameters</param>
            <returns>HTTP Response</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.GetAssociationInstances(System.String,System.Guid,System.String,System.String)">
            <summary>
            Get associated instances.
            </summary>
            <param name="parentName">
            The parent name.
            </param>
            <param name="parentInstanceId">
            The parent entity instance id.
            </param>
            <param name="associatedEntityName">
            The associated entity name.
            </param>
            <param name="associationName">
            The association name.
            </param>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.SaveInstanceWithAuditHistory(System.Collections.ArrayList,System.Boolean)">
            <summary>
            Save entity instance with audit history.
            </summary>
            <param name="wrapperObject">
            Serialized instance data and instance of AuditHistory.
            </param>
            <param name="checkEntityInstanceIsLocked">checkEntityInstanceIsLocked from task for replace user</param>
            <returns>
            Http response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.SaveInstance(System.String)">
            <summary>
            Save entity instance.
            </summary>
            <param name="serializedInstance">
            Serialized instance data.
            </param>
            <returns>
            Http response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.SaveInstances(System.String)">
            <summary>
            Save the IEnumerable of the <see cref="T:Icertis.ACF.EntityService.Data.EntityBase"/> instances.
            </summary>
            <param name="serializedInstances">IEnumerable of the object of the <see cref="T:Icertis.ACF.EntityService.Data.EntityBase"/> type.</param>
            <returns>HTTP response message</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.SaveInstancesWithAuditHistory(System.Collections.ArrayList)">
            <summary>
            Save the IEnumerable of the <see cref="T:Icertis.ACF.EntityService.Data.EntityBase"/> instances with audit history.
            </summary>
            <param name="wrapperObject">Collection of object that contains IEnumerable of the object of the <see cref="T:Icertis.ACF.EntityService.Data.EntityBase"/> type and instance of AuditHistory.</param>
            <returns>HTTP response message</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.DeleteInstances(System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Delete entity instances.
            </summary>
            <param name="entityName">
            Entity name.
            </param>
            <param name="hardDelete">
            Hard delete.
            </param>
            <param name="sysId">
            Instance id for delete.
            </param>
            <returns>
            Http response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.DownloadFileBytes(System.String)">
            <summary>
            Download File Bytes.     
            </summary>
            <param name="filename">
            Name of file.
            </param>
            <returns>
            File Bytes.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.UploadFile(System.String,System.Boolean,System.Byte[])">
            <summary>
            Upload File Bytes to word and PDF format.        
            </summary>
            <param name="fileName">
            String filename.
            </param>
            <param name="uploadAsPDFAlso">
            Upload as PDF.
            </param>
            <param name="fileByteArray">
            Byte[] fileByteArray.
            </param>
            /// 
            <returns>
            Http Response Message.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.AllAttributes">
            <summary>
            Gets all the attributes.
            </summary>
            <returns>Returns Attributes.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.GetAttribute(System.Guid)">
            <summary>
            Gets the specific attribute.
            </summary>
            <param name="attributeId">
            Attribute Id.
            </param>
            <returns>
            Returns Attribute.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.GetAttributesByName(System.String)">
            <summary>
            Gets attribute by entity name.
            </summary>
            <param name="entityName">
            Entity Name.
            </param>
            <returns>
            Returns Attributes.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.GetAutoCompleteValues(System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Get property values for an entity.
            </summary>
            <param name="entityName">entity Name</param>
            <param name="propertyName">property Name</param>
            <param name="value">value of property</param>
            <param name="flagIsEqual">flag IsEqual</param>
            <param name="sparams">KVPCollection parameters</param>
            <returns>list of property values for an entity</returns>       
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.GetSpecificVersion(System.String,System.String,System.String)">
            <summary>
            Gets specific version of instance
            </summary>
            <param name="entityName">name of entity</param>
            <param name="entityVersion">
            entity version of instance
            </param>
            <param name="instanceId">
            instance id
            </param>
            <returns>
            returns specific version of instance
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.GetAssociatingInstances(System.String,System.String,System.Guid,System.String,System.Boolean)">
            <summary>
            Get list of associating instance using associated id.
            </summary>
            <param name="associatingEntityName">Associating Entity (Parent) name.</param>
            <param name="associatedEntityName">Associated entity name</param>
            <param name="associatedId">Associated Id.</param>
            <param name="associationName">Association name</param>
            <param name="includeChildCollection">Include child collection.</param>
            <returns>List of associating instance.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.ExecuteCustomization(System.String)">
            <summary>
            Get the Customization API Constant result.
            </summary>
            <param name="resourceConstant">Customization API Constant.</param>
            <returns>Customization API Constant result.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.ExecuteCustomization(Icertis.ACF.EntityService.Data.CustomizationData)">
            <summary>
            Get the Customization API Constant result.
            </summary>
            <param name="customizationData">Customization Data.</param>    
            <returns>Customization API Constant result.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.FindProjections(System.Collections.ArrayList)">
            <summary>
            Finds instances satisfying a search criteria.
            </summary>
            <param name="wrapperObject">Array List of following objects entityName, cultureName, projections, sparams, includeChildCollection, fetchAuditEntries, sortOptions, identifiers, excludeTheseIdentifiers, timezoneInfo, page, count</param>
            <returns>List of instances satisfying the search criteria.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.FindProjectionsKeyValuePair(System.Collections.ArrayList)">
            <summary>
            Finds instances satisfying a search criteria.
            </summary>
            <param name="wrapperObject">Array List of following objects entityName, cultureName, projections, sparams, includeChildCollection, fetchAuditEntries, sortOptions, identifiers, excludeTheseIdentifiers, timezoneInfo, page, count</param>
            <returns>List of instances satisfying the search criteria.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.IsInstanceLocked(System.Guid)">
            <summary>
            Unlock Instance
            </summary>
            <param name="instanceId">instance Id</param>
            <returns>instance Lock status</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.UpdateInstancesExt(System.String,System.Boolean,System.Collections.ArrayList)">
            <summary>
            update instances with selected properties
            </summary>
            <param name="entityName">Entity name</param>
            <param name="includeTheseIds">Flag to determine if ID's are to included</param>
            <param name="wrapperObj">Wrapper object containing additional parameters, propertyValuesToUpdate and list of ids</param>
            <returns>Update instance response</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.SaveEntityInstanceAssociations(System.Collections.ArrayList)">
            <summary>
            Save the IEnumerable of the <see cref="T:Icertis.ACF.EntityService.Data.EntityBase"/> instances.
            </summary>
            <param name="wrapperObject">Array List of following objects entityInstanceName, entityInstanceId, associationName, associatedInstances, parentInstanceVersion, deleteNonAssociatedInstance</param>
            <returns>HTTP response message</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.RemoveEntityInstanceAssociation(System.Collections.ArrayList)">
            <summary>
            Remove the IEnumerable of the <see cref="T:Icertis.ACF.EntityService.Data.EntityBase"/> instances.
            </summary>
            <param name="wrapperObject">Array List of following objects entityInstanceName, entityInstanceId, associationName, associatedInstanceIds, parentInstanceVersion, deleteAssociatedInstance</param>
            <returns>HTTP response message</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.GetLanguagesForClauseAndTemplate">
            <summary>
            Gets supported language list for clauses and templates
            </summary>
            <returns>Supported languages list</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.GetLanguageCultureDetails(System.String)">
            <summary>
            Gets supported date formats list for clauses and templates
            </summary>
            <param name="cultureCode">Language Culture Code</param>
            <returns>Supported Custom Language Culture Details </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.InstanceExists(System.String,System.Guid)">
            <summary>
            Check if instance exists
            </summary>
            <param name="entityName">Entity Name</param>
            <param name="instanceId">Instance Id</param>
            <returns>True if the instance exists, false otherwise</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.FindInstancesByIds(System.String,System.String,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean,System.Boolean)">
            <summary>
            Find instances as per given identifiers
            </summary>
            <param name="entityName">Entity name</param>
            <param name="cultureName">Culture name</param>
            <param name="identifiers">List of identifiers</param>
            <param name="includeChildCollection">include child collection</param>
            <param name="skipAuth">skip authorization</param>
            <returns>List of instances or null in case of no identifier or entity name given</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.FindInstances(System.Object)">
            <summary>
            Find collection of Instances
            </summary>
            <param name="entityName"></param>
            <param name="cultureName"></param>
            <param name="associations"></param>
            <param name="requestBody"></param>
            <param name="sparams"></param>
            <returns></returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.SaveEntityInstanceWithWorkflow(System.String,System.String)">
            <summary>
            Save instance and Start or Resume Work flow.
            </summary>
            <param name="transitionName">
            Transition name.
            </param>
            <param name="serializedInstance">
            Instance to save.
            </param>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.DeleteInstance(System.String,System.Guid)">
            <summary>
            Delete instance.
            </summary>
            <param name="entityName">
            Entity name.
            </param>
            <param name="sysId">
            ID of the instance.
            </param>
            <returns>
            HTTP Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.InstanceController.HasPrivilege(System.String,Icertis.CLM.API.Helpers.Permission,System.Guid,Icertis.CLM.API.Common.Models.InstanceModel)">
            <summary>
            Check privilege
            </summary>
            <param name="entityName">string entityName</param>      
            <param name="privilege">The privilege</param> 
            <param name="userSysId">User Id</param>
            <param name="modelObject">Instance Model object</param>
            <returns>The boolean value</returns>
        </member>
        <member name="T:Icertis.CLM.API.Controllers.MasterdataController">
            <summary>
            API Controller for Master data handling
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.MasterdataController.masterdataModel">
            <summary>
            Master data Model.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.MasterdataController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Icertis.CLM.API.Controllers.MasterdataController"/> class, and the <see cref="T:Icertis.CLM.API.Common.Models.AgreementModel"/> class.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.MasterdataController.ContractTypes">
            <summary>
            Gets all the contract types of type Master data
            </summary>
            <returns>
            Enumerable of <see cref="T:Icertis.CLM.Masters.ContractType"/>, otherwise an 
            empty enumerable if no contract types are found.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.MasterdataController.MigrateDeprecated">
            <summary>
            Migrate deprecated workflow instances
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.MasterdataController.Create(System.Object,System.Int64)">
            <summary>
            Creates a new instance of master data
            </summary>
            <param name="masterdataInstance">Instance of Master Data type of entity</param>
            <param name="loggedInUserId">The identifier of the logged in user.</param>
            <returns>The SysId of the new master data instance</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.MasterdataController.CreateWithoutWorkflow(System.Object,System.Int64)">
            <summary>
            Creates a new instance of master data without workflow
            </summary>
            <param name="masterdataInstance">Instance of Master Data type of entity</param>
            <param name="loggedInUserId">The identifier of the logged in user.</param>
            <returns>The SysId of the new master data instance</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.MasterdataController.GetDynamicMetadataNames(System.Object,System.String,System.Boolean)">
            <summary>
            Get Dynamic Metadata Names
            </summary>
            <param name="masterdataInstance">Master data instance</param>
            <param name="contractType">Contract Type name</param>
            <param name="evaluateMetadataRules">Indicates whether the rules should be evaluated, or the result of the previous evaluation is to be returned.</param>
            <returns>Dynamic Metadata Name List</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.MasterdataController.Update(System.Object)">
            <summary>
            Creates a new instance of master data
            </summary>
            <param name="masterdataInstance">Instance of Master Data type of entity</param>
            <returns>The SysId of the new master data instance</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.MasterdataController.Delete(System.String,System.Guid)">
            <summary>
            Deletes an instance of master data
            </summary>
            <param name="contractTypeName">Name of the ContractType whose instance is to be deleted</param>
            <param name="id">Id of the master data instance that is to be deleted</param>
            <returns>HttpsStatusCode.OK if deleted successfully</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.MasterdataController.ActivateEntity(System.String,System.Guid)">
            <summary>
            Activate an instance of master data
            </summary>
            <param name="contractTypeName">Name of the ContractType</param>
            <param name="id">Id of the master data instance</param>
            <returns>HttpsStatusCode.OK if deleted successfully</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.MasterdataController.DeactivateEntity(System.String,System.Guid)">
            <summary>
            Deactivate an instance of master data
            </summary>
            <param name="contractTypeName">Name of the ContractType</param>
            <param name="id">Id of the master data instance</param>
            <returns>HttpsStatusCode.OK if deleted successfully</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.MasterdataController.Activate(System.String,System.Guid)">
            <summary>
            Activate an instance of master data
            </summary>
            <param name="contractTypeName">Name of the ContractType</param>
            <param name="id">Id of the master data instance</param>
            <returns>HttpsStatusCode.OK if deleted successfully</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.MasterdataController.Deactivate(System.String,System.Guid)">
            <summary>
            Deactivate an instance of master data
            </summary>
            <param name="contractTypeName">Name of the ContractType</param>
            <param name="id">Id of the master data instance</param>
            <returns>HttpsStatusCode.OK if deleted successfully</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.MasterdataController.Get(System.String)">
            <summary>
            Gets all the master data instances of the specified type
            </summary>
            <param name="contractTypeName">Name of the <see cref="T:Icertis.CLM.Masters.ContractType"/></param>
            <returns>Enumerable of master data instances.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.MasterdataController.Get(System.Guid,System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets the the master data instance
            </summary>
            <param name="id">SysId od the instance.</param>
            <param name="contractType">name of the master data contract type</param>
            <param name="includeChildCollections">Indicates whether child collections are to be included in the entity instance.</param>
            <param name="fetchAuditEntries">Indicates whether audit entries are to be fetched.</param>
            <returns>An instance of master data.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.MasterdataController.ResumeWorkflow(System.Object,System.String)">
            <summary>
            Resumes the workflow.
            </summary>
            <param name="masterdata">The masterdata.</param>
            <param name="workflowAction">The workflow action.</param>
            <returns>Validation messages if any, otherwise empty collection</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.MasterdataController.CreateAndSendForApproval(System.Object,System.Int64)">
            <summary>
            Creates and Sends For Approval a new instance of master data
            </summary>
            <param name="masterdataInstance">Instance of Master Data type of entity</param>
            <param name="loggedInUserId">The identifier of the logged in user.</param>
            <returns>The SysId of the new master data instance</returns>
        </member>
        <member name="T:Icertis.CLM.API.Controllers.MetadataController">
            <summary>
            Metadata controller.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.MetadataController.contractTypeModel">
            <summary>
            Contract Type Model.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.MetadataController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Icertis.CLM.API.Controllers.MetadataController" /> class.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.MetadataController.CreateAttribute(System.String,System.String,System.Boolean)">
            <summary>
            Put attribute.
            </summary>
            <param name="serializedAttribute">Serialized attribute.</param>
            <param name="namePrefix">Name prefix.</param>
            <param name="fromContractType">From Contract Type or not</param>
            <returns>HTTP response message.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.MetadataController.CheckAttributeIfExists(System.String,System.String)">
            <summary>
            Check attribute If already exists in ICMAttribute table.
            </summary>
            <param name="serializedAttribute">
            Serialized attribute.
            </param>
            <param name="namePrefix">
            Name prefix.
            </param>
            <returns>
            HTTP response message.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.MetadataController.UpdateAttribute(System.String)">
            <summary>
            Update Attribute.
            </summary>
            <param name="serializedAttribute">
            Attribute object.
            </param>
            <returns>
            Response Message.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.MetadataController.GetAttributes(System.String,System.String,System.Boolean)">
            <summary>
            Get attributes.
            </summary>
            <param name="namePrefix">
            Name prefix.
            </param>
            <param name="typeOfContract">
            Type of contract (Agreement, Associated Document, Master data).
            </param>
            <param name="includeLocalAttributes">
            Includes local attributes if set to true.
            </param>
            <returns>
            HTTP response message.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.MetadataController.GetAllAttributes(System.String)">
            <summary>
            Get all attributes.
            </summary>
            <param name="namePrefix">
            Name prefix.
            </param>
            <returns>
            HTTP response message.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.MetadataController.DeleteAttribute(System.Guid,System.Boolean)">
            <summary>
            Delete Attribute, which is not associated with any Entity.
            </summary>
            <param name="attributeId">
            The Attribute id.
            </param>
            <param name="hardDel">
            Is hard delete.
            </param>
            <returns>
            HTTP Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.MetadataController.GetContractTypesByAttributeId(System.Guid)">
            <summary>
            Get contract types by attribute id.
            </summary>
            <param name="attributeId">The Attribute id.</param>
            <returns>HTTP Response code.</returns>
        </member>
        <member name="T:Icertis.CLM.API.Controllers.NotificationController">
            <summary>
            Class Notification Email specific functions
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.NotificationController.entityNameNotificationTemplate">
            <summary>
            Entity Name - NotificationTemplate
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.NotificationController.notificationModel">
            <summary>
            Get or sets  NotificationConfig Model object.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.NotificationController.instance">
            <summary>
            Get or sets instance model object.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.NotificationController.agreementModel">
            <summary>
            Get or sets instance model object.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.NotificationController.contractTypeModel">
            <summary>
            Contract Type Model.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.NotificationController.userModel">
            <summary>
            Contract Type Model.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.NotificationController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Icertis.CLM.API.Controllers.NotificationController"/> class.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.NotificationController.SaveNotificationUser(Icertis.CLM.Masters.NotificationUser)">
            <summary>
            Saves notification instance.
            </summary>
            <param name="notificationUser">Notification instance</param>
            <returns>response message</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.NotificationController.SaveInstanceStateAudit(Icertis.CLM.Masters.InstanceStateAudit)">
            <summary>
            Saves notification InstanceStateAudit.
            </summary>
            <param name="instanceStateAudit">InstanceStateAudit instance</param>
            <returns>response message</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.NotificationController.GetNotificationUnreadCount(System.Int64)">
            <summary>
            Get the dashboard of the user.
            </summary>
            <param name="userIdentifier">User id.</param>
            <returns>list of dashboard.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.NotificationController.SaveNotificationCategory(Icertis.CLM.Masters.NotificationCategory)">
            <summary>
            Save Notification Category instance.
            </summary>
            <param name="notificationCategory">
            Instance data.
            </param>
            <returns>
            Http response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.NotificationController.GetManyNotificationCategories">
            <summary>
            Get many notification categories
            </summary>
            <returns>Http Response code.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.NotificationController.DeleteNoticationCategory(System.String,System.Guid,System.Boolean)">
            <summary>
            Delete Notification Category
            </summary>
            <param name="notificationCategory">notification Category to delete</param>
            <param name="notificationCategoryId"> category Id</param>
            <param name="hardDelete"> hard delete</param>
            <returns>Http Response code.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.NotificationController.DeleteManyNoticationCategory(System.String,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean)">
            <summary>
            Delete many notification category
            </summary>
            <param name="notificationCategory"> category to be deleted</param>
            <param name="notificationCategoryIdList">notification category id list</param>
            <param name="hardDelete">hard delete</param>
            <returns> http response</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.NotificationController.GetNotifications(System.Guid,System.Int64,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            This method gets Notifications
            </summary>                       
            <param name="notificationCategoryId">The Notification Category Id</param>
            <param name="currentUserId">Logged in user ID</param>
            <param name="cultureName">The cultureName Notification Category </param>
            <param name="startDate">Start Date</param>
            <param name="endDate">End Date</param>
            <param name="includeChildCollections">include Child Collection flag</param>
            <param name="fetchAuditEntries">A flag indicating whether to fetch audit entries logs or not.</param>
            <returns>List of Notification Category</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.NotificationController.GetMyNotifications(System.Int64,System.String,System.String)">
            <summary>
            This method gets Notifications  for the user
            </summary>                       
            <param name="currentUserId">Logged in user ID</param>
            <param name="startDate">Start Date</param>
            <param name="endDate">End Date</param>
            <returns>List of Notifications</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.NotificationController.GetNotificationsForInstance(System.Guid,System.Int64,System.String,System.Boolean,System.Boolean)">
            <summary>
            This method gets Notifications for a specific entity instance 
            </summary>                       
            <param name="entityInstanceId">Entity instance Id</param>
            <param name="currentUserId">User ID</param>
            <param name="cultureName">The cultureName Notification Category </param>
            <param name="includeChildCollections">include Child Collection flag</param>
            <param name="fetchAuditEntries">A flag indicating whether to fetch audit entries logs or not.</param>
            <returns>List of Notification Category</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.NotificationController.GetMyCommitments(System.Int64)">
            <summary>
            This method gets commitments for a calling user 
            </summary>                       
            <returns>List of Commitments for current user</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.NotificationController.GetMyTasks(System.Int64,System.Boolean,System.Boolean)">
            <summary>
            Get Task for user based on search parameters. 
            </summary>
            <param name="name">Entity Name</param>
            <param name="serializedInstance">Search parameters</param>
            <param name="includeChildCollection">Include child instances</param>
            <param name="fetchAuditEntries">Fetch audit entries</param>
            <returns>Http Response</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.NotificationController.SaveActionDetails(System.Collections.ArrayList)">
            <summary>
            Save ActionDetails
            </summary>
            <param name="wrapperObject">ArrayList of objects</param>
            <returns>Response code.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.NotificationController.NotificationMarkRead(System.Guid,System.Int64)">
            <summary>
            Mark notification as read
            </summary>
            <param name="notificationId">notification Id</param>
            <param name="loggedInUser">Logged in user id</param>
            <returns> value if instance was updated or not</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.NotificationController.DeleteNotification(System.Collections.Generic.List{System.Guid})">
            <summary>
            Delete notification
            </summary>
            <param name="notificationIds">notification Ids</param>
            <returns> boolean value if notification was deleted or not</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.NotificationController.SaveNotificationTemplateInstance(Icertis.CLM.Masters.NotificationTemplate)">
            <summary>
            Save NotificationTemplate instance
            </summary>
            <param name="notificationtemplate">
            instance data
            </param>
            <returns>
            http response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.NotificationController.GetNotificationTemplate(System.Guid,System.Boolean)">
            <summary>
            Get single NotificationTemplate instance
            </summary>
            <param name="notificationTemplateID">
            NotificationTemplate instance id
            </param>
            <param name="includeChildCollection">
            include child collection flag
            </param>
            <returns>
            http Response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.NotificationController.GetNotificationTemplatesWithRules(System.Guid,System.Int64,System.Boolean)">
            <summary>
            Get notification templates with rules
            </summary>
            <param name="entityId">entity id</param>
            <param name="eventId">event id</param>
            <param name="fetchNonLocalizedInstances">Flag to indicate if instances to be fetched are to be localized or not</param>
            <returns>Notification templates with rules</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.NotificationController.DeleteManyNotificationTemplates(System.Collections.Generic.IEnumerable{System.Guid},System.Boolean)">
            <summary>
            Delete NotificationTemplate instances
            </summary>
            <param name="notificationtemplateIdList">
            instance id list for delete
            </param>
            <param name="hardDelete">
            hard delete flag
            </param>
            <returns>
            http response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.NotificationController.SaveNotification(Icertis.CLM.Masters.Notification)">
            <summary>
            Saves notification instance.
            </summary>
            <param name="notification">Notification instance</param>
            <returns>response message</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.NotificationController.GetNotificationCategory(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Get notification category
            </summary>
            <param name="categoryId"> category id</param>
            <param name="cultureName"> culture name</param>
            <param name="includeChildCollections"> include child collection or not</param>
            <param name="fetchAuditEntries"> fetch audit entries or not</param>
            <param name="forceGetLatest">force get latest or not</param>
            <returns>http code response</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.NotificationController.GetManyNotificationCategories(System.String,System.Boolean,System.Boolean)">
            <summary>
            Get many notification categories
            </summary>
            <param name="cultureName"> culture name</param>
            <param name="includeChildCollections"> Include child collection or not</param>
            <param name="fetchAuditEntries"> fetch audit entries or not</param>
            <returns>Http Response code.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.NotificationController.GetPendingCommitmentsByUser(System.Int64,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Get the Pending Commitments by user.
            </summary>
            <param name="userIdentifier">User id.</param>
            <param name="includeChildCollection">A flag indicating whether to include child collection or not.</param>
            <param name="fetchAuditEntries">A flag indicating whether to include Audit entries or not.</param>
            <param name="loadPeer">A flag indicating whether to load inner child collection for peer instances.</param>
            <returns>Returns list of pending commitments.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.NotificationController.EnableDisableNotifications(System.Object)">
            <summary>
            Enables the disable notifications.
            </summary>
            <param name="wrapperObject">The wrapper object.</param>
            <returns>true in case of success</returns>
        </member>
        <member name="T:Icertis.CLM.API.Controllers.OrgGroupController">
            <summary>
            Class for clause specific functions
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.OrgGroupController.entityNameOG">
            <summary>
            Entity Name - User
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.OrgGroupController.instance">
            <summary>
            Get or sets instance model object.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.OrgGroupController.userModel">
            <summary>
            Get or sets User Model object.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.OrgGroupController.searchModel">
            <summary>
            Get or sets Search Model object.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.OrgGroupController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Icertis.CLM.API.Controllers.OrgGroupController"/> class.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.OrgGroupController.GetOrgGroups">
            <summary>
            Get Org Groups
            </summary>
            <returns>
            http Response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.OrgGroupController.GetOrgGroup(System.Guid,System.Boolean)">
            <summary>
            Get single Org Group instance
            </summary>
            <param name="groupId">
            Org Group id
            </param>
            <param name="includeChildCollection">
            include child collection flag
            </param>
            <returns>
            http Response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.OrgGroupController.GetOrgGroup(System.String,System.Boolean)">
            <summary>
            Get single Org Group instance
            </summary>
            <param name="groupName">
            Org group name
            </param>
            <param name="includeChildCollection">
            Include child collection flag.
            </param>
            <returns>
            http Response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.OrgGroupController.GetOrgGroupOrgUnits(System.String)">
            <summary>
            Get org group Organization units 
            </summary>
            <param name="groupName">
            Org Group Name.
            </param>
            <returns>
            http Response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.OrgGroupController.SaveOrgGroup(Icertis.CLM.Masters.OrgGroup)">
            <summary>
            Save Org instance
            </summary>
            <param name="orgGroup">
            instance data
            </param>
            <returns>
            http response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.OrgGroupController.DeleteOrgGroup(System.String,System.Guid,System.Boolean)">
            <summary>
            Delete Single OrgGroup instance
            </summary>
            <param name="entityName">
            Entity Name
            </param>
            <param name="groupId">
            Org Group Id
            </param>
            <param name="hardDelete">
            Hard Delete
            </param>
            <returns>
            http response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.OrgGroupController.DeleteOrgGroups(System.String,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean)">
            <summary>
            Delete Multiple OrgGroups instance
            </summary>
            <param name="entityName">
            Entity Name
            </param>
            <param name="groupIdList">
            Org Group Id List
            </param>
            <param name="hardDelete">
            Hard Delete
            </param>
            <returns>
            http response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.OrgGroupController.IsNameExists(System.String,System.String)">
            <summary>
            Check if the name already exists or not.
            </summary>
            <param name="entityName">
            Entity name of the instance to be checked.
            </param>
            <param name="instanceName">
            Instance name to be checked.
            </param>
            <returns>
            True if name already exists, else false.
            </returns>
        </member>
        <member name="T:Icertis.CLM.API.Controllers.QuickContractController">
            <summary>
            
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.QuickContractController.instanceModel">
            <summary>
            
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.QuickContractController.agreementModel">
            <summary>
            Agreement Model.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.QuickContractController.userModel">
            <summary>
            User Model.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.QuickContractController.contractTypeModel">
            <summary>		
            ContractType model		
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.QuickContractController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Icertis.CLM.API.Controllers.AgreementController"/> class, and the <see cref="T:Icertis.CLM.API.Common.Models.AgreementModel"/> class.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.QuickContractController.CreateContract(System.Object)">
            <summary>
            Create Contract Based on Json
            </summary>
            <returns>HTTPStatus OK, if the success.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.QuickContractController.ProcessAgreement(System.String)">
            <summary>
            Process to Create Agreement
            </summary>
            <param name="inputJson">input Json string</param>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.QuickContractController.ProcessContractRequest(System.String)">
            <summary>
            Process Contract Request Creation
            </summary>
            <param name="inputJson">input Json string</param>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.QuickContractController.GetLatestTransactionalPackages">
            <summary>
            Gets latest transactional packages from the ICM API
            </summary>
            <returns>a list of binaries which contain the compiled binaries.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.QuickContractController.CreateInstance(System.String)">
            <summary>
            Create Instance
            </summary>
            <param name="entityName">entity Name </param>
            <returns></returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.QuickContractController.SetAgreementData(Icertis.ACF.EntityService.Data.EntityBase,System.String,System.Int64)">
            <summary>
            Set Agreement Data
            </summary>
            <param name="instance">EntityBase instance</param>
            <param name="typeOfPaper"> string type Of Paper</param>
            <param name="loggedInUser">long logged User</param>
            <returns></returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.QuickContractController.SetTempateInContract(Icertis.ACF.EntityService.Data.EntityBase)">
            <summary>
            Identify and Set Tempate In Contract
            </summary>
            <param name="instance"></param>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.QuickContractController.SetEntityInstanceDefaultOrgPath(Icertis.ACF.EntityService.Data.EntityBase)">
            <summary>
            Set Entity Instance Default Org Path
            </summary>
            <param name="entityBaseInstance">EntityBase entityBaseInstance</param>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.QuickContractController.GetDefaultOranizationUnit(System.String)">
            <summary>
            Get the default organization unit
            </summary>
            <param name="organizationPathId"> Organization path id</param>
            <returns>Default Organization Unit</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.QuickContractController.GetInstances(System.String,Icertis.ACF.EntityService.Data.SearchParameters)">
            <summary>
            GetInstances based on Parameters
            </summary>
            <param name="entityName">string entityName</param>
            <param name="searchParameters">SearchParameters Object</param>
            <returns></returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.QuickContractController.GetUser(System.String)">
            <summary>
            Get User identifier
            </summary>
            <param name="userEmailId">string userEmailId</param>
            <returns>UserInformation Object</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.QuickContractController.SetEntityInstanceAttributeValues(Icertis.ACF.EntityService.Data.EntityBase,Icertis.CLM.Masters.ContractType,Newtonsoft.Json.Linq.JObject,System.Collections.Generic.IEnumerable{Icertis.ACF.EntityService.Data.EntityBase})">
            <summary>
            Set Entity Instance attribute values with client app attribute values
            </summary>
            <param name="entityInstance">Entity Instance</param>
            <param name="contractType">Contract type</param>
            <param name="inputJson">Input Json</param>
            <param name="baseInstances">mapping fields</param>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.QuickContractController.SetClientAppValues(Icertis.ACF.EntityService.Data.EntityBase,System.String,Newtonsoft.Json.Linq.JObject)">
            <summary>
            Build EntityBase object based on client app values.
            </summary>
            <param name="entityInstance">The entity instance.</param>
            <param name="contractTypeName">Contract type name.</param>
            <param name="json"></param>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.QuickContractController.UpdateJsonForFileAttribute(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Update Json For File Attribute
            </summary>
            <param name="requestJson">inputJson string</param>
            <returns>Updated requestJson in JObject</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.QuickContractController.GetMappingInstancesForClientApp(Newtonsoft.Json.Linq.JObject,System.String)">
            <summary>
            Returns Instances for client app values.
            </summary>
            <param name="inputJson">json string</param>
            <param name="contractTypeName">contract type name</param>        
            <returns>Mapping Instances for matching search criteria</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.QuickContractController.LoadEntity(System.String)">
            <summary>
            Loads entity and returns the loaded entity
            </summary>
            <param name="entityName">The name of the entity</param>
            <returns>Loaded entity</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.QuickContractController.SetLookupData(Icertis.ACF.EntityService.Data.EntityBase,Newtonsoft.Json.Linq.JToken,System.String[],Icertis.CLM.Masters.ContractTypeAttribute)">
            <summary>
            Set custom lookup fields
            </summary>
            <param name="entityInstance">Entity Instance</param>
            <param name="mappedClientAttributeValue">Client Attribute Value</param>    
            <param name="attributeElements">Attribute elements</param>       
            <param name="attribute">Contract type attribute</param>           
        </member>
        <member name="M:Icertis.CLM.API.Controllers.QuickContractController.SetClientAppValuesForAssociations(Icertis.ACF.EntityService.Data.EntityBase,Icertis.CLM.Masters.UserInformation,Newtonsoft.Json.Linq.JObject,System.Collections.Generic.IEnumerable{Icertis.ACF.EntityService.Data.EntityBase},System.String)">
            <summary>
            Set client app values for associations
            </summary>
            <param name="entityInstance">Entity Instance</param>          
            <param name="user">User information</param>       
            <param name="inputJson">Input json</param>    
            <param name="associationInstances">Association instances</param>
            <param name="actionSelected">Action Selected</param>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.QuickContractController.AddRelatedEntities(Icertis.ACF.EntityService.Data.EntityBase,System.String,Newtonsoft.Json.Linq.JObject,System.String)">
            <summary>
            Gets the association name for entity.
            </summary>
            <param name="entityInstance">Instance of the entity.</param>
            <param name="contractTypeName">Name of the association.</param>
            <param name="inputJson">input json string</param>
            <param name="actionSelected">Action Selected string</param>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.QuickContractController.GetLatestPublishedContractTypes(Icertis.CLM.API.Helpers.Permission,System.Boolean,System.Boolean)">
            <summary>
            Gets approved, latest, published contract types by default. 
            If additional search parameters are provided, then result is filtered accordingly
            </summary>
            <param name="permission"> Permission level requested</param>
            <param name="includeChildCollection">Include Child Collection</param>
            <param name="excludeSystemContractType">Exclude system based Contract Type i.e ICMTemplate and ICMClause</param>
            <returns>List of contract types</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.QuickContractController.GetLatestPublishedContractTypes(Icertis.CLM.API.Helpers.Permission,System.Nullable{System.Guid},System.Boolean,System.Boolean)">
            <summary>
            Gets approved, latest, published contract types by default. 
            If additional search parameters are provided, then result is filtered accordingly
            </summary>
            <param name="permission"> Permission level requested</param>
            <param name="entityInstanceId">The entity Instance Id</param>
            <param name="includeChildCollection">Include Child Collection</param>
            <param name="excludeSystemContractType">Exclude system based Contract Type i.e ICMTemplate and ICMClause</param>
            <returns>List of contract types</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.QuickContractController.GetLatestPublishedContractTypesWithoutLocalization(Icertis.CLM.API.Helpers.Permission,System.Boolean,System.Boolean)">
            <summary>
            Gets approved, latest, published contract types by default. 
            If additional search parameters are provided, then result is filtered accordingly
            </summary>
            <param name="permission"> Permission level requested</param>
            <param name="includeChildCollection">Include Child Collection</param>
            <param name="excludeSystemContractType">Exclude system based Contract Type i.e ICMTemplate and ICMClause</param>
            <returns>List of contract types</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.QuickContractController.FilterContractTypesOnPermissions(System.Collections.Generic.IEnumerable{Icertis.CLM.Masters.ContractType},Icertis.CLM.API.Helpers.Permission)">
            <summary>
            Filters contract type based on users permissions (from SGs)
            </summary>
            <param name="contractTypeList">List of unfiltered contract type</param>
            <param name="permission">Permission to check access</param>
            <returns>List of contract types user has access to.</returns>
        </member>
        <member name="P:Icertis.CLM.API.Controllers.QuickContractController.SupportedLanguages">
            <summary>
            Gets supported language list.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.QuickContractController.GetUserInformationByEmailORFullName(System.String)">
            <summary>
            Returns user information object based on email id or full name
            </summary>
            <param name="userFullNameOrEmailID">user full name or email id</param>
            <returns>UserInformation object</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.QuickContractController.GetUserSettings(System.String)">
            <summary>
            Gets users settings
            </summary>
            <param name="userSysId">User Id</param>
            <returns>Current logged in user</returns>
        </member>
        <member name="P:Icertis.CLM.API.Controllers.QuickContractController.DefaultUserSettings">
            <summary>
            Gets Default User Settings.
            </summary>       
        </member>
        <member name="M:Icertis.CLM.API.Controllers.QuickContractController.GetFilePayLoad(System.String)">
            <summary>
            Get File Pay Load as Bytes
            </summary>
            <param name="FileNameWithPath">Full Path with Default tag</param>
            <returns></returns>
        </member>
        <member name="T:Icertis.CLM.API.Controllers.ReasonMasterController">
            <summary>
            API ReasonMaster Controller
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.ReasonMasterController.entityNameReasonMaster">
            <summary>
            Entity Name - ReasonMaster
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.ReasonMasterController.instance">
            <summary>
            Get or sets instance model object.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ReasonMasterController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Icertis.CLM.API.Controllers.ReasonMasterController"/> class.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ReasonMasterController.GetReasons">
            <summary>
            Get Reason
            </summary>
            <returns>
            http Response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ReasonMasterController.GetReason(System.Guid,System.Boolean)">
            <summary>
            Get single Reason instance
            </summary>
            <param name="reasonId">
            Reason id
            </param>
            <param name="includeChildCollection">
            include child collection flag
            </param>
            <returns>
            http Response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ReasonMasterController.GetReason(System.String,System.Boolean)">
            <summary>
            Get single Reason instance
            </summary>
            <param name="reasonCode">
            Reason Code
            </param>
            <param name="includeChildCollection">
            Include child collection flag.
            </param>
            <returns>
            http Response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ReasonMasterController.SaveReason(Icertis.CLM.Masters.ReasonMaster)">
            <summary>
            Save Reason instance
            </summary>
            <param name="reasonInstance">
            instance data
            </param>
            <returns>
            http response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ReasonMasterController.DeleteReason(System.String,System.Guid,System.Boolean)">
            <summary>
            Delete Single Reason instance
            </summary>
            <param name="entityName">
            Entity Name
            </param>
            <param name="reasonId">
            Reason Id
            </param>
            <param name="hardDelete">
            Hard Delete
            </param>
            <returns>
            http response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ReasonMasterController.DeleteReasons(System.String,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean)">
            <summary>
            Delete Multiple Currencies
            </summary>
            <param name="entityName">
            Entity Name
            </param>
            <param name="reasonIdList">
            Reason Id List
            </param>
            <param name="hardDelete">
            Hard Delete
            </param>
            <returns>
            http response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ReasonMasterController.IsCodeExists(System.String,System.String)">
            <summary>
            Check if the name already exists or not.
            </summary>
            <param name="entityName">
            Entity name of the instance to be checked.
            </param>
            <param name="instanceName">
            Instance name to be checked.
            </param>
            <returns>
            True if name already exists, else false.
            </returns>
        </member>
        <member name="T:Icertis.CLM.API.Controllers.RoleController">
            <summary>
            Role controller
            </summary>
            <summary>
            Role controller
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.RoleController.roleModel">
            <summary>
            Template Model.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.RoleController.agreementModel">
            <summary>
            Agreement Model.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.RoleController.entityModel">
            <summary>
            Entity Model.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.RoleController.instanceModel">
            <summary>
            Instance Model.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.RoleController.clauseModel">
            <summary>
            Clause Model.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.RoleController.userModel">
            <summary>
            User Model.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.RoleController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Icertis.CLM.API.Controllers.RoleController"/> class.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.RoleController.GetRole(System.Guid)">
            <summary>
            Get role by id
            </summary>
            <param name="roleId"></param>
            <returns>role instance</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.RoleController.Save(Icertis.CLM.Masters.Role)">
            <summary>
            Saves the specified role.
            </summary>
            <param name="role">The role.</param>
            <returns>Role identifier</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.RoleController.GetRoleActions(System.Guid)">
            <summary>
            Gets the role actions.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <returns>Role actions</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.RoleController.GetRoles(System.String,System.String)">
            <summary>
            Gets the roles.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <returns>Role actions</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.RoleController.HasPrivilege(System.String,System.Int32,System.Guid)">
            <summary>
            Check privilege
            </summary>
            <param name="entiyName">string entityName</param>      
            <param name="privilege">The privilege</param>        
            <returns>The boolean value</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.RoleController.GetDeviatedClauses(Icertis.ACF.EntityService.Data.EntityBase)">
            <summary>
            Get deviated clauses
            </summary>
            <param name="agreement">Entity base instance</param>
            <returns>Returns list of deviated clauses</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.RoleController.SaveRoleAction(Icertis.CLM.Utilities.RoleAction)">
            <summary>
            Saves the role action.
            </summary>
            <param name="roleAction">The role action.</param>
            <returns>Success or Failure</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.RoleController.CopyRoleActions(System.Guid,System.Guid)">
            <summary>
            Copies role actions from source for destination.
            </summary>
            <param name="sourceActionContextId">Source context id to copy from.</param>
            <param name="destinationActionContextId">Destination context id to copy to.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.RoleController.DeleteRoleActionMappings(System.Guid,System.Boolean)">
            <summary>
            delete role actions mapping
            </summary>
            <param name="deleteactionContextId">Delete context id to copy from.</param>
            <param name="deletePermanently">Flag to indicate whether hard delete or not.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.RoleController.GetFilteredRoles">
            <summary>
            Gets the filtered roles.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <param name="entityInstanceId">The entity instance identifier.</param>
            <returns>list of filtered roles</returns>
        </member>
        <member name="T:Icertis.CLM.API.Controllers.RulesController">
            <summary>
            The Rules Controller. Will have methods specific to ICERTIS Rules engine.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.RulesController.engine">
            <summary>
            Gets the object of the <see cref="T:Icertis.ACF.EntityService.Rules.Data.IRulesEngine"/>.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.RulesController.repository">
            <summary>
             Gets the object of the <see cref="T:Icertis.ACF.EntityService.Rules.Data.IRulesRepository"/>.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.RulesController.RuleNameExists(System.String,System.Nullable{System.Guid})">
            <summary>
            Check rule name exists
            </summary>
            <param name="ruleName">Rule Name</param>
            <param name="existingRuleId">Existing Rule Id, if given then this rule will be ignored while validating for duplicate name</param>
            <returns>Rule name exists or not</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.RulesController.FetchEvaluatedRules(System.String,System.String,System.String,System.Int64)">
            <summary>
            Send Rules for Evaluation
            </summary>
            <param name="entityNRules">entity and rules serialized</param>
            <param name="entityName">entity name</param>
            <param name="ruleType">rule type</param>
            <param name="identifier">The identifier.</param>
            <returns>
            Result string
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.RulesController.GetRules(System.String,System.Boolean)">
            <summary>
            GET api/rules for the specified entityId
            </summary>
            <param name="entityId">EntityId for the entity</param>
            <param name="fetchInActiveRuleSet">fetch InActive Rule Set</param>
            <returns>List of rule sets applicable for the specified entity type</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.RulesController.GetRulesetById(System.Int32,System.Boolean)">
            <summary>
            GET api/rule for the specified Unique Identifier
            </summary>
            <param name="sysid">Unique Identifier</param>
            <param name="fetchInActiveRuleSet">fetch InActive Rule Set</param>
            <returns>List of rule set applicable for the Unique Identifier</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.RulesController.SaveRuleSetDefinition(Icertis.ACF.EntityService.Rules.Data.RuleSetDefinition)">
            <summary>
            Saves a rule set definition 
            </summary>
            <param name="definition">The rule set definition to be saved</param>
            <returns>HTTPStatus OK, if the save succeeds./</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.RulesController.EvaluateRules">
            <summary>
            Evaluate rules.
            </summary>
            <returns>HTTPStatus OK, if the save succeeds.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.RulesController.EvaluateRulesByWrapper(System.String,Icertis.ACF.EntityService.Rules.Data.RulesTarget)">
            <summary>
            Evaluates Rules by wrapper.
            </summary>
            <param name="xamlRuleSet">Rule set xml.</param>
            <param name="targetObject">Target Object.</param>
            <returns>HTTPStatus OK, if the save succeeds.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.RulesController.EvaluateEventRules(System.Object)">
            <summary>
            Evaluate Event rules from UI
            This functions is used for add association event
            </summary>
            <param name="eventRuleData">serialized Event rule Data</param>
            <returns>returns entity base</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.RulesController.GetRulesUI(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Evaluates Rules by wrapper.
            </summary>
            <param name="wrapper">wrapper class name</param>
            <param name="entityName">entity Name</param>
            <param name="ruleType">Rule Type</param>
            <param name="entityInstanceId">Entity Instance Identifier</param>
            <param name="typeOfContract">type of contract</param>
            <returns>HTTPStatus OK, if the save succeeds.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.RulesController.CopyRule(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            copy rule
            </summary>
            <param name="sourceEntityName">source entity name</param>
            <param name="destinationEntityName">destination entity name</param>
            <param name="sourceSysId">source sys id</param>
            <param name="destinationSysId">destination sys id</param>
            <param name="ruleName">rule name</param>
            <param name="ruleType">destination rule type</param>
            <returns>final status of copy rule</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.RulesController.Save(System.String,System.Int64,System.Boolean)">
            <summary>
            Save Rule set object.
            </summary>
            <param name="rules">Rules string</param>
            <param name="identifier">The identifier.</param>
            <param name="unlockOnUpdate">Unlock rule set on update</param>
            <returns>
            Http response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.RulesController.GetAllApprovalRules">
            <summary>
            Gets all approval rules
            </summary>
            <returns>
            Http response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.RulesController.GetRuleByEntityAndRuleType(System.String,System.String,System.Nullable{System.Guid},System.Boolean)">
            <summary>
            Gets rules by type of the rule and entity.
            </summary>
            <param name="ruleType">Type of the rule.</param>
            <param name="entityName">Name of the entity.</param>
            <param name="entityId">The entity identifier.</param>
            <param name="fetchInActiveRuleSet">if set to <c>true</c> [fetch in active rule set].</param>
            <returns>
            Http response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.RulesController.GetRuleForEntityId(System.Guid,System.Boolean)">
            <summary>
            Gets the rule for entity identifier.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <param name="fetchInActiveRuleSet">if set to <c>true</c> [fetch in active rule set].</param>
            <returns>
            Http response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.RulesController.GetDeletedRulesForEntity(System.Guid,System.Nullable{System.Guid})">
            <summary>
            Gets the list of deleted rules for the entity
            </summary>
            <param name="entityId">Entity Identifier</param>
            <param name="ruleId">Rule instance Id</param>
            <returns>Http response message</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.RulesController.GetRuleBySysId(System.Guid)">
            <summary>
            Gets the rule for system identifier.
            </summary>
            <param name="sysId">The system identifier.</param>
            <returns>Http response code.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.RulesController.Delete(System.String)">
            <summary>
            Deletes the specified system ids.
            </summary>
            <param name="sysIds">The system ids.</param>
            <returns>Http response code.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.RulesController.GetRuleResult(System.String,System.String)">
            <summary>
            Gets the rule result.
            </summary>
            <param name="instanceId">The instance identifier.</param>
            <param name="ruleType">Type of the rule.</param>
            <returns>Http response code.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.RulesController.EvaluateRulesByRuleType(System.Object,System.String)">
            <summary>
            Evaluates rules by rule type.
            </summary>
            <param name="instanceAndRuleType">The dynamic object containing instance and rule sub types.</param>
            <param name="ruleType">Type of the rule.</param>
            <returns>entity base object</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.RulesController.PopulateFldJSONForEntity(System.String,System.String,System.String)">
            <summary>
            Populates the field json for entity.
            </summary>
            <param name="entityName">Name of the entity.</param>
            <param name="entityInstanceId">The entity instance identifier.</param>
            <param name="typeOfContract">The type of contract.</param>
            <returns>Field Collection of Requested Entity</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.RulesController.GeneratePreview(System.String,System.String)">
            <summary>
            Get file.
            </summary>
            <param name="templateName">
            Name of template
            </param>
            <param name="agreementJson">Agreement JSON</param>
            <returns>
            Array of bytes
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.RulesController.Initialize(System.Web.Http.Controllers.HttpControllerContext)">
            <summary>
            Initialize method.
            </summary>
            <param name="controllerContext">Controller context.</param>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.RulesController.DeserializeEntityBase(System.String,System.String)">
            <summary>
            Deserialize entity base json string
            </summary>
            <param name="entityJson">entity json string</param>
            <param name="typeName">type name</param>
            <returns>entity base</returns>
        </member>
        <member name="T:Icertis.CLM.API.Controllers.SearchController">
            <summary>
            Search Controller
            </summary>
            <summary>
            Search Controller
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.SearchController.searchModel">
            <summary>
            Search model instance
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.SearchController.userModel">
            <summary>
            The user model
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.SearchController.instanceModel">
            <summary>
            The instance model
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.SearchController.tenantCode">
            <summary>
            The tenant code.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.SearchController.placeholder">
            <summary>
            The constant for parameter placeholder
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.SearchController.separater">
            <summary>
            The constant for parameter separater
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.SearchController.instanceRepository">
            <summary>
            Gets the object of the instanceRepository
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.SearchController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Icertis.CLM.API.Controllers.SearchController"/> class
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.SearchController.Search(Icertis.CLM.Search.Models.SearchQuery,System.Boolean)">
            <summary>
            Search data based on the specified parameters
            </summary>
            <param name="searchQuery">SearchQuery object</param>
            <param name="islookupQuery">Flag indicating if this is a lookup query</param>
            <returns>JSON containing the search results</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.SearchController.Save(Icertis.CLM.Search.Models.SearchQuery)">
            <summary>
            Save a search
            </summary>
            <param name="savedSearch">SaveSearch Object</param>
            <returns>JSON containing the save operation status</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.SearchController.GetSavedSearches(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean})">
            <summary>
            Get the list of saved searches defined by the user
            </summary>
            <param name="userId">User Id</param>
            <param name="searchType">Search Type</param>
            <param name="entityName">Entity Name</param>
            <param name="title">Optional. Title of the saved search. If not specified, then all the saved searches are returned</param>
            <param name="skip">Rows to skip</param>
            <param name="size">Total rows to retrieve</param>
            <param name="getSmartLinks">Set to fetch only smart links</param>
            <param name="smartLinkFor">Smart link for entity.</param> 
            <param name="isDashboardMetric">dashboard metric for entity.</param>
            <returns>JSON containing the saved searches</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.SearchController.ExecuteSavedSearch(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Executes a saved search based on user request
            </summary>
            <param name="title">The  title of the saved search</param>
            <param name="clientType">The client type.</param>
            <param name="searchId">The  id of the search</param>
            <param name="param">A comma separated list of parameters to replace is saved search</param>
            <param name="showFacets">Show or hide Facets</param>
            <param name="freeText">Free text search</param>
            <param name="page">page number</param>
            <param name="pageSize">page size for search</param>
            <param name="skip">skip records</param>
            <param name="version">version of client config</param>
            <returns>JSON response containing the saved search result</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.SearchController.GetEntityDetails(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            To retrieve entity details
            </summary>
            <param name="attributes">attributes</param>
            <param name="entityName">entity name</param>
            <param name="entityID">entity Id</param>
            <param name="clientType">The client type.</param>
            <param name="associations"> One of the following values 'ICMSFAgreementTypeAmendmentCollection',
            'AgreementActionRequest','AgreementTeamMember','AgreementTask','AgreementNote','AgreementDocumentVersion','AgreementCommitment','AgreementNotification'</param>
            <param name="version">The version of client config.</param>
            <returns>JSON response containing entity details</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.SearchController.SendConditionalAttributeInResponse(Icertis.ACF.EntityService.Data.EntityBase,System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.Dictionary{System.String,System.Object}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.Dictionary{System.String,System.Object}}})">
            <summary>
            Compute if conditional attribute need to be send in API response or not based on the entity values. 
            </summary>
            <param name="instance">ICM agreement entity instance</param>
            <param name="entityAttribute">Check for attribute to be send in response</param>
            <param name="allEntityAttributes">All the existing attribute list for contract type</param>
            <returns>Boolean. True if attribute need to included in API response.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.SearchController.DeleteSearch(System.String)">
            <summary>
            Deletes a saved search
            </summary>
            <param name="id">Id of the saved search</param>
            <returns>JSON containing the response of the delete operation</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.SearchController.DeleteByUser(System.String)">
            <summary>
            Delete the save search for the user
            </summary>
            <param name="name">Optional. Name of the saved search to delete. If not specified, all the saved search for a current user are deleted</param>
            <returns>JSON containing the delete operation status</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.SearchController.GetFavorites(System.String,System.String)">
            <summary>
            Get user and entity specific favorite
            </summary>
            <param name="user">User name for which the Favorites have to be retrieved</param>
            <param name="entityName">The entity name for which the Favorites have to be retrieved</param>
            <returns>JSON object returning the status</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.SearchController.SaveFavorite(Icertis.CLM.Search.Models.FavoriteSearch)">
            <summary>
            Get favorite
            </summary>
            <param name="favoriteSearch">The entity name for which the favorite have to be retrieved</param>
            <returns>JSON object returning the status</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.SearchController.GetICMAttributes">
            <summary>
            Gets ICM attributes
            </summary>
            <returns>Attribute XML as string</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.SearchController.ReplaceParams(System.String,System.String)">
            <summary>
            Replace the first occurrence of the pattern in the  string
            </summary>
            <param name="query">The json query  in which to replace the pattern</param>
            <param name="param">The list of parameters to be replaced.</param>
            <returns>the comma separated string  that contains the values to be replaced </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.SearchController.GetDisplayNames(System.String,System.String,System.String)">
            <summary>
            Returns a list of column names  and fields for an entity
            </summary>
            <param name="fields">The list of fields to get the columns for</param>
            <param name="entityName">The entityNames to get the columns from</param>
            <param name="entityID">The entityId to get the columns from</param>
            <returns>Dictionary of fields and display names </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.SearchController.GetUsersDistributionGroupIds(System.Int64)">
            <summary>
            Gets user's distribution group Ids
            </summary>
            <param name="userIdentifier">User's Identifier</param>
            <returns> XML as string</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.SearchController.GetUserByID(System.Int64)">
            <summary>
            Gets user from User Identifier
            </summary>
            <param name="userID">User's Identifier</param>
            <returns> UserInformation object</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.SearchController.GetUsersByIDs(System.Collections.Generic.IList{System.String})">
            <summary>
            Gets users from the User Identifiers
            </summary>
            <param name="userIDs">List of User Identifier's</param>
            <returns>List of UserInformation objects</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.SearchController.AddFacetsToQuery(Icertis.CLM.Search.Models.SearchQuery,System.String,System.Int32)">
            <summary>
            Add facets to query
            </summary>
            <param name="sp">search query</param>
            <param name="clientType">The client type.</param>
            <param name="version">The version of client config.</param>
            <returns>search query with updated facet attributes</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.SearchController.SortFacetsByCount(Newtonsoft.Json.Linq.JObject@)">
            <summary>
            Adds facets to the search query
            </summary>
            <param name="sp">Search Query</param>
            <returns>Search Query with facets</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.SearchController.UserInSecurityGroup(System.String,System.Collections.Generic.IEnumerable{Icertis.CLM.Masters.SecurityGroup},System.String)">
            <summary>
            Users the in security group.
            </summary>
            <param name="securityGroups">The security groups.</param>
            <param name="securityGroupsForUser">The security groups for user.</param>
            <param name="typeOfUser">Type of user</param>
            <returns>true or false</returns>    
        </member>
        <member name="M:Icertis.CLM.API.Controllers.SearchController.EqualsNonMatchingParentTypeEntityName(System.String)">
            <summary>
            Predicate method to match unrelated entities by name e.g. Agreement and Template
            </summary>
            <param name="entityName">name of entity</param>
            <returns>True if entity name matches otherwise false</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.SearchController.GetPartialOrgHierarchy(System.String,System.String)">
            <summary>
            Returns partial org hierarchy for a set of organization units.  
            </summary>
            <param name="orgUnits">Organization units</param>
            <param name="accessType">Specifies hierarchy or reverse hierarchy</param>
            <returns>Array containing access</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.SearchController.ClearEscapeChars(System.String)">
            <summary>
            Removes escape characters from input string
            </summary>
            <param name="str">String to be cleaned</param>
            <returns>Cleaned string</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.SearchController.ClearString(System.String)">
            <summary>
            Removes special characters from input string
            </summary>
            <param name="str">String to be cleaned</param>
            <returns>Cleaned string</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.SearchController.GetParent(System.String,System.Guid,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets the parent agreement instance
            </summary>
            <param name="childEntityName">Child entity name</param>
            <param name="childId">Instance if of the child contract</param>
            <param name="parentEntityName">Name of the parent contract type</param>
            <param name="associationName">Association name</param>
            <param name="includeChildCollections">Indicates whether the child collections should be returned along with the agreement instance</param>
            <param name="fetchAuditEntries">Indicates whether audit entries are to be returned along with the agreement instance</param>
            <returns>Parent agreement instance</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.SearchController.GetInstanceChevron(System.String)">
            <summary>
            Gets the instance chevron.
            </summary>
            <param name="instanceId">The instance identifier.</param>
            <returns>Gets instance chevron from search</returns>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.SearchSyncController.searchsyncmodel">
            <summary>		
            The search sync model		
            </summary>		
        </member>
        <member name="T:Icertis.CLM.API.Controllers.SecurityGroupController">
            <summary>
            Class for security group specific functions.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.SecurityGroupController.securityGroupModel">
            <summary>
            Contract Type Model.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.SecurityGroupController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Icertis.CLM.API.Controllers.SecurityGroupController"/> class.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.SecurityGroupController.GetInstancesBySearchCondition">
            <summary>
            Get security group instances.
            </summary>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.SecurityGroupController.IsSecurityGroupExist(System.Guid,System.String)">
            <summary>
            Check if security group name already exist.
            </summary>
            <param name="sysId">Sys Id</param>
            <param name="securityGroupName">security group name</param>
            <returns>True if security group name already exist.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.SecurityGroupController.Save(Icertis.CLM.Masters.SecurityGroup)">
            <summary>
            Saves given Security Group.
            </summary>      
            <param name="securityGroup">security group to create</param>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.SecurityGroupController.Deprecate(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Deprecates given Security Groups.
            </summary>      
            <param name="instanceIds">ID of security groups to be deprecated</param>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.SecurityGroupController.RemoveUserFromSecurityGroups(System.String,System.String)">
            <summary>
            Remove the user from given security groups
            </summary>
            <param name="userSysId">Sys id of the user.</param>
            <param name="securityGroups">Comma separated sys id of security groups</param>
            <returns>True if removed.</returns>
        </member>
        <member name="T:Icertis.CLM.API.Controllers.ServiceBusController">
            <summary>
            api controller to communicate with service bus
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ServiceBusController.GetMessages(System.String,System.String,System.Boolean,System.UInt32)">
            <summary>
            Get messages from service bus
            </summary>
            <param name="topic">topic name</param>
            <param name="subscription">subscription name</param>
            <param name="peekOnly">peek only</param>
            <param name="count">number of message to read</param>
            <returns></returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ServiceBusController.PushMessage(Icertis.ACF.TaskManager.Core.TaskEventArgs,System.String)">
            <summary>
            Push message to service bus
            </summary>
            <param name="taskEventArgs">task event object</param>
            <param name="topic">Topic Name</param>
            <returns> Return process result </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.ServiceBusController.PushMessages(System.Collections.Generic.IEnumerable{Icertis.ACF.TaskManager.Core.TaskEventArgs},System.String)">
            <summary>
            Push message to service bus
            </summary>
            <param name="taskEventArgsList">task event object</param>
            <param name="topic">Topic Name</param>
            <returns> Return process result </returns>
        </member>
        <member name="T:Icertis.CLM.API.Controllers.SettingsController">
            <summary>
            Settings Controller
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.SettingsController.GetAllResources(System.String)">
            <summary>
            Returns dictionary of resources for culture passed.
            </summary>
            <param name="culture">culture string</param>
            <returns>Dictionary of resources.</returns>
        </member>
        <member name="T:Icertis.CLM.API.Controllers.TemplateController">
            <summary>
            Class for template specific functions.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.TemplateController.templateModel">
            <summary>
            Template Model.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.TemplateController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Icertis.CLM.API.Controllers.TemplateController"/> class, and the <see cref="T:Icertis.CLM.API.Common.Models.TemplateModel"/> class.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.TemplateController.Save(Icertis.CLM.Masters.Template)">
            <summary>
            Save Template instance.
            </summary>
            <param name="template">
            Instance data.
            </param>
            <returns>
            Http response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.TemplateController.SaveWithWorkflow(System.Collections.ArrayList)">
            <summary>
            Save Template instances.
            </summary>
            <param name="listOfObjects">
            ArrayList of objects
            </param>
            <returns>
            Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.TemplateController.SaveWithWorkflow(System.Collections.ArrayList,System.Boolean)">
            <summary>
            Save Template instances.
            </summary>
            <param name="listOfObjects">
            ArrayList of objects
            </param>
            <param name="asyncPDFGeneration">Is PDF to be generated asynchronous</param>
            <returns>
            Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.TemplateController.IsNameExists(System.String)">
            <summary>
            Check if the name already exists or not.
            </summary>
            <param name="instanceName">
            Instance name to be checked.
            </param>
            <returns>
            True if name already exists, else false.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.TemplateController.Get(System.Guid,System.Boolean,System.Boolean)">
            <summary>
            Get single Template instance.
            </summary>
            <param name="templateId">
            Template instance id.
            </param>
            <param name="includeChildCollection">
            Include child collection flag.
            </param>
            <param name="fetchAuditEntries">
            a flag indicating whether to fetch audit logs or not.
            </param>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.TemplateController.GetMany">
            <summary>
            Get all templates without any search condition.
            </summary>
            <returns>Http Response code.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.TemplateController.GetMany(System.String,System.Boolean)">
            <summary>
            Get template instances.
            </summary>
            <param name="serializedSearchParameters">
            Serialized Instance.
            </param>
            <param name="includeChildCollection">
            Include Child Collection flag.
            </param>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.TemplateController.GetMany(System.String,System.Boolean,System.String)">
            <summary>
            Get template instances.
            </summary>
            <param name="status">
            Template status.
            </param>
            <param name="latest">
            Is Latest flag.
            </param>
            <param name="contractTypeId">
            Contract Type Id.
            </param>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.TemplateController.Delete(System.Guid,System.Boolean)">
            <summary>
            Delete template.
            </summary>
            <param name="templateId">
            Template Id to delete.
            </param>
            <param name="hardDelete">
            Hard delete flag.
            </param>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.TemplateController.DeleteMany(System.Collections.Generic.IEnumerable{System.Guid},System.Boolean)">
            <summary>
            Delete template instances.
            </summary>
            <param name="templateIdList">
            Instance id list for delete.
            </param>
            <param name="hardDelete">
            Hard delete flag.
            </param>
            <returns>
            Http response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.TemplateController.DeActivate(System.Guid)">
            <summary>
            De-Activate template.
            </summary>
            <param name="templateId">
            Template ID.
            </param>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.TemplateController.Activate(System.Guid)">
            <summary>
            Activate template.
            </summary>
            <param name="templateId">
            Template ID.
            </param>
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.TemplateController.DeleteAssociatedInstance(System.Guid,System.String,Icertis.CLM.Masters.Template)">
            <summary>
            download template file
            </summary>
            <returns>
            http Response code
            </returns>
            <summary>
            Delete Associated Instance.
            </summary>
            <param name="id">
            Id of associated instance.
            </param>
            <param name="associatedEntityName">
            Associated Entity Name.
            </param>
            <param name="template">
            Template instance.
            </param>
            <returns>
            Http Response Message.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.TemplateController.GetFile(System.String)">
            <summary>
            Get file.
            </summary>
            <param name="filePath">
            Path of file.
            </param>
            <returns>
            Array of bytes
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.TemplateController.SendTemplateExpiryNotification">
            <summary>
            Send the expiry notification for template if the template is approved and expiry date is reached.
            </summary>
            <returns>success or failure</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.TemplateController.GetBaseLocalizationTemplatesByContractType(System.Guid,System.Nullable{System.Guid},System.Boolean,System.Int32,System.Int32)">
            <summary>
            Gets the base(primary) localization templates by contract types.
            </summary>
            <param name="contractTypeId">The contract type id.</param>
            <param name="linkedPrimaryTemplateEntityInstanceId">Linked (terminated) Template instance id if any to include in result</param>
            <param name="includeChildCollection">if set to <c>true</c> [include child collection].</param>
            <param name="pageSize">Size of the page.</param>
            <param name="page">The page.</param>
            <returns>base(primary) localization templates</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.TemplateController.GetSecondaryLocalizationTemplates(System.Guid,System.Boolean)">
            <summary>
            Gets the secondary localization templates by parent template instance id.
            </summary>
            <param name="parentInstanceId">Parent template instance id.</param>
            <param name="includeChildCollection">if set to <c>true</c> [include child collection].</param>
            <returns>secondary localization templates</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.TemplateController.EditActionAllowed(System.Guid,System.Guid,System.Int32)">
            <summary> Edit Action Allowed </summary>
            <param name="agreementId"> template instance id </param>
            <param name="contractType">  contract type name </param>
            <param name="version"> dument version </param>
            <returns> success value </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.TemplateController.GetHighlightedPDFFile(System.String)">
            <summary>
            Gets the Highlighted PDF File.
            </summary>
            <param name="filePath">Path of file.</param>
            <returns>Highlighted metadata file bytes</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.TemplateController.GetExtendedTemplate(System.Guid,System.Boolean)">
            <summary>
            Get single Template extended entity instance.
            </summary>
            <param name="templateId">
            Template instance id.
            </param>
            <param name="includeChildCollection">
            Include child collection flag.
            </param>        
            <returns>
            Http Response code.
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.TemplateController.ValidateTemplateFile(System.Byte[],System.Boolean)">
            <summary>
            Validates template file bytes
            </summary>
            <param name="filebytes">File bytes</param>
            <param name="getValidFormations">Get valid content control block formations</param>
            <returns>
            Dictionary of valid/invalid/Warning tags where key is type of <see cref="T:Icertis.ACF.Helpers.OpenXML.ContentControlBlockFormation"/>.
            In addition, it will have key "Success" with value list of string with single element "True"/"False" based on validation.
            </returns>
        </member>
        <member name="T:Icertis.CLM.API.Controllers.UserController">
            <summary>
            Class for clause specific functions
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.UserController.entityNameUser">
            <summary>
            Entity Name - User
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.UserController.entityNameGroup">
            <summary>
            Entity Name - Group
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.UserController.entityNameUserInformationOrgAccessAssociation">
            <summary>
            Entity Name - Group
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.UserController.instance">
            <summary>
            Get or sets instance model object.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.UserController.userModel">
            <summary>
            Get or sets User Model object.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.UserController.searchModel">
            <summary>
            Get or sets Search Model object.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Controllers.UserController.tokenForApplication">
            <summary>
            Token for application
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Icertis.CLM.API.Controllers.UserController"/> class.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetUser(System.Guid,System.Boolean)">
            <summary>
            Get single User Information instance
            </summary>
            <param name="userInformationGuid">
            user information instance id
            </param>
            <param name="includeChildCollection">
            include child collection flag
            </param>
            <returns>
            http Response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetUser(System.Int64,System.Boolean)">
            <summary>
            Get single User Information instance
            </summary>
            <param name="userInformationId">
            user information instance id
            </param>
            <param name="includeChildCollection">
            include child collection flag
            </param>
            <returns>
            http Response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetUser(System.String,System.Boolean,System.Boolean)">
            <summary>
            Get single User Information instance
            </summary>
            <param name="userEmailId">
            User information instance email id.
            </param>
            <param name="includeChildCollection">
            Include child collection flag.
            </param>
            <param name="includeStatusProvisionedFilter">
            Include Provisioned Status filter flag.
            </param>
            <returns>
            http Response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetExtendedUser(System.Guid,System.Boolean,System.Boolean)">
            <summary>
            Get single extended user entity instance
            </summary>
            <param name="userSysId">
            user information instance sys id
            </param>
            <param name="includeChildCollection">
            include child collection flag
            </param>
            <param name="fetchAuditEntries">
            Fetch audit entries
            </param>
            <returns>
            http Response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetUserAccess(System.String,System.Boolean)">
            <summary>
            Get single GetUserAccess instance
            </summary>
            <param name="userEmailId">
            User information instance email id.
            </param>       
            <returns>
            http Response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetUserByExternalUPN(System.String,System.Boolean)">
            <summary>
            Get single User Information instance
            </summary>
            <param name="userUPN">
            User external UPN.
            </param>
            <returns>
            http Response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetUserByCertificateThumbprint(System.String)">
            <summary>
            Get single User Information instance
            </summary>
            <param name="certificateThumbprint">
            User external UPN.
            </param>
            <returns>
            http Response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.SaveUser(Icertis.CLM.Masters.UserInformation)">
            <summary>Saves the user.</summary>
            <param name="userInformationInstance">The user information instance.</param>
            <returns>The user information instance Sysid</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.SaveAndGetUser(Icertis.CLM.Masters.UserInformation)">
            <summary>Saves the and get user.</summary>
            <param name="userInformationInstance">The user information instance.</param>
            <returns>The user information instance</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.SaveUser(Icertis.CLM.Masters.UserInformation,System.Boolean)">
            <summary>Save UserInformation instance</summary>
            <param name="userInformationInstance">instance data</param>
            <param name="getUserObject">if set to <c>true</c> [get user object].</param>
            <returns>http response code</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.SaveUserSettings(Icertis.CLM.Masters.UserInformation)">
            <summary>
            Save Users settings
            </summary>
            <param name="userInformationInstance">
            User information object
            </param>
            <returns>
            http response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.Find(Icertis.ACF.EntityService.Data.SearchParameters,System.Boolean)">
            <summary>
            Find users
            </summary>
            <param name="searchParameters">search Parameters</param>
            <param name="includeChildCollection">include Child Collection flag</param>
            <returns>list of users</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.AddToTeam(System.Collections.ArrayList,Icertis.CLM.Utilities.AccessRoleTypes,System.String,System.Int64,System.Nullable{System.Int64},System.Boolean,System.Nullable{System.Guid},System.Nullable{System.Int64},System.Boolean,System.Nullable{System.Int64})">
            <summary>
            Add user to team
            </summary>
            <param name="wrapperObject">object array containing user Information and instance for which user is to be added to team</param>
            <param name="accessRoleType">access Role Type</param>
            <param name="instanceContractType">Contract Type of instance for which the user is to be added to team</param>
            <param name="stepOrder">step Order</param>
            <param name="minimumActionsRequired">minimum Actions Required</param>
            <param name="isDefinedByRule">is Defined By Rule flag</param>
            <param name="associatedInstanceId">associated Instance Id</param>
            <param name="delegatorsUserId">delegator's User Id</param>
            <param name="isInstanceToBeSaved">is Instance To Be Saved flag; also pass modified by user id</param>
            <param name="instanceModifiedByUserId">modified By User Id when instance is to be saved</param>
            <returns>modified instance</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.AddTeamMembers(System.Object,System.String,System.Nullable{System.Guid},System.Nullable{System.Int64},System.Boolean,System.Boolean,System.String)">
            <summary>
            Add team members to instance
            </summary>
            <param name="wrapperObject">wrapper object</param>
            <param name="entityName">Name of Entity</param>
            <param name="associatedInstanceId">associated Instance Id</param>
            <param name="delegatorsUserId">delegator's User Id</param>
            <param name="isInstanceToBeSaved">is Instance To Be Saved flag; also pass modified by user id</param>
            <param name="sendUserNotification">Send Notification to User</param>
            <param name="userRationaleComments">Comment/Reason for adding a user to the Team.</param>
            <returns>modified instance</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.RemoveFromTeam(System.Collections.ArrayList,Icertis.CLM.Utilities.AccessRoleTypes,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Boolean,System.Nullable{System.Int64},System.Nullable{System.Guid},System.Boolean,System.String,System.Nullable{System.Guid},System.Boolean)">
            <summary>
            Remove user from team
            </summary>
            <param name="wrapperObject">object array containing user Information and instance for which user is to be added to team</param>
            <param name="accessRoleType">access Role Type</param>
            <param name="instanceContractType">Contract Type of instance for which the user is to be added to team</param>
            <param name="stepOrder">step Order</param>
            <param name="delegatorsUserId">delegator's User Id</param>
            <param name="isInstanceToBeSaved">is Instance To Be Saved flag; also pass modified by user id</param>
            <param name="instanceModifiedByUserId">modified By User Id when instance is to be saved</param>
            <param name="associatedInstanceId">Associated instance identifier</param>
            <param name="sendUserNotification">Send Notification to User</param>
            <param name="userRationaleComments">Comment/Reason for adding a user to the Team.</param>
            <param name="ruleGroup">Rule Group of the team member</param>
            <param name="addNoteUserRationale">Decides if need to add note</param>
            <returns>modified instance</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetLicenseFile(System.String)">
            <summary>
            Get file.
            </summary>
            <param name="filePath">
            Path of file.
            </param>
            <returns>
            Array of bytes
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetGroup(System.Guid,System.Boolean)">
            <summary>
            Get single group instance
            </summary>
            <param name="groupId">
            group instance id
            </param>
            <param name="includeChildCollection">
            include child collection flag
            </param>
            <returns>
            http Response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.DeleteManyGroups(System.Collections.Generic.IEnumerable{System.Guid},System.Boolean)">
            <summary>
            Delete group instances
            </summary>
            <param name="groupIdList">
            instance id list for delete
            </param>
            <param name="hardDelete">
            hard delete flag
            </param>
            <returns>
            http response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.DeleteManyUsers(System.Collections.Generic.IEnumerable{System.Guid},System.Boolean)">
            <summary>
            Delete group instances
            </summary>
            <param name="groupIdList">
            instance id list for delete
            </param>
            <param name="hardDelete">
            hard delete flag
            </param>
            <returns>
            http response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.SaveGroupInstance(Icertis.CLM.Masters.SecurityGroup)">
            <summary>
            Save Group instance
            </summary>
            <param name="securitygroup">
            instance data
            </param>
            <returns>
            http response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetDelegationSubrolesForApprover(System.Int64)">
            <summary>
            Get subroles for approver
            </summary>
            <param name="userId">user id</param>
            <returns>role and name dictionary</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetAllRolesOfUser(System.Int64)">
            <summary>
            Gets all roles assigned to a user
            </summary>
            <param name="userInformationId">user identifier</param>
            <returns>roles assigned to user</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetUserByIdentifier(System.Int64)">
            <summary>
            Get user from UserIdentifier
            </summary>
            <param name="userIdentifier"> userIdentifier to get user from cache/database</param>
            <returns>Returns UserInformation Object</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.FindUsersForAutoDelegation(System.String,System.Int32,System.Boolean,System.Int32,System.Int32,System.Boolean,System.String,System.String)">
            <summary>
            Find users for Auto Delegation
            </summary>
            <param name="searchTerm">Search term to filter out the users</param>
            <param name="totalRecords">The total number of records matching the filter</param>
            <param name="includeChildCollection">A flag indicating whether to include child collections</param>
            <param name="page">Page number</param>
            <param name="count">records count</param>
            <param name="instanceId">instance identifier</param>
            <param name="role">role for auto delegation</param>
            <returns>list of users</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetDistinctRoles(System.String)">
            <summary>
            Gets distinct roles for the instance identifier passed.
            </summary>
            <param name="instanceId">The instance identifier.</param>
            <returns>Distinct roles</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.AddAutoDelegation(Icertis.CLM.Masters.AutoDelegation)">
            <summary>
            Add Auto Delegation information
            </summary>
            <param name="autoDelegationInfo">auto Delegation Info</param>
            <returns>validation messages, if any</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.UpdateAutoDelegation(Icertis.CLM.Masters.AutoDelegation)">
            <summary>
            Update Auto Delegation information
            </summary>
            <param name="autoDelegationInfo">auto Delegation Info</param>
            <returns>validation messages, if any</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.DelegateMany(System.DateTime,System.Boolean)">
            <summary>
            Find AutoDelegations having start date equal to the given date and Delegate tasks to required users
            </summary>
            <param name="delegationStartDate">delegation Start Date</param>
            <param name="arePreviousDatesDelegationsToBeDelegated">are Previous Dates Delegations To Be Delegated</param>
            <returns>success flag</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.DeleteDelegation(System.Guid)">
            <summary>
            Delete Delegated tasks
            </summary>
            <param name="delegationId">delegation Id</param>
            <returns>success flag</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.DeleteDelegations(System.DateTime,System.Boolean)">
            <summary>
            Delete AutoDelegations having end date equal to the given date
            </summary>
            <param name="delegationEndDate">delegation End Date</param>
            <param name="arePreviousDatesDelegationsToBeDeleted">are Previous Dates Delegations To Be Deleted</param>
            <returns>success flag</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetDelegationTaskList">
            <summary>
            Get the list of delegation task
            </summary>
            <returns>list of delegation taks</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetAutoDelegation(System.Guid,System.Boolean)">
            <summary>
            Get Auto Delegation
            </summary>
            <param name="autoDelegationId">auto Delegation Id</param>
            <param name="includeChildCollection">include Child Collection flag</param>
            <returns>Auto Delegation Information</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.FindAutoDelegations(System.Int64,System.Boolean)">
            <summary>
            Find Auto Delegations
            </summary>
            <param name="userId">User Id</param>
            <param name="includeChildCollection">include Child Collection flag</param>
            <returns>list of Auto Delegations</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetWAADUsers(System.String)">
            <summary>
                Gets list of users for active directory
            </summary>
            <param name="startsWith">Initial characters of user's name to limit search results</param>
            <returns>Http response message</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetPrivileges(System.Guid)">
            <summary>
            Get the privileges of the user.
            </summary>
            <param name="userSysId">User sys id.</param>
            <returns>list of Security Group.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetPrivilege(System.String)">
            <summary>
                  /// Gives user privilege for given entity
            </summary>
            <param name="entityName">entityname</param>       
            <returns>privilege (0:none, 1:view, 2:manage)</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetPrivileges">
            <summary>
            Gives user privileges
            </summary>      
            <returns>List of entity and privilege (0:none, 1:view, 2:manage)</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetSecurityGroupsByUser(System.Int64)">
            <summary>
            Gets security groups that user belongs to
            </summary>
            <param name="userInformationId">user identifier</param>
            <returns>List of security groups</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetDistributionGroupsByUser(System.Int64)">
            <summary>
            Gets distribution groups that user belongs to
            </summary>
            <param name="userInformationId">user identifier</param>
            <returns>List of distribution groups</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetPrivilegesWithGroupUsers(System.Guid)">
            <summary>
            Get the privileges of the user with group users
            </summary>
            <param name="userSysId">User sys id.</param>
            <returns>list of Security Group.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetDashboardKPIS(System.Int64)">
            <summary>
            Get the dashboard of the user.
            </summary>
            <param name="userIdentifier">User id.</param>
            <returns>list of dashboard.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.ResetKpi(System.Int64)">
            <summary>
            Get the dashboard of the user from SSRS as well as Search
            </summary>
            <param name="userIdentifier">User id.</param>
            <param name="includeSSRS">true /false</param>
            <returns>list of dashboard KPIs</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetAllDashboardKPIS(System.Int64,System.Boolean,System.String)">
            <summary>
            Get the dashboard of the user from SSRS as well as Search
            </summary>
            <param name="userIdentifier">User id.</param>
            <param name="includeSSRS">true /false</param>
            <returns>list of dashboard KPIs</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetUsersAccess(System.Int64)">
            <summary>
            Get the shared and non shared access of the user.
            </summary>
            <param name="userIdentifier">User id. If value of user identifier is zero then this methods will return access of all users</param>
            <returns>XML of User access.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetOrganizationUnits(System.String,System.Boolean)">
            <summary>
            Gets Organization Units.
            </summary>
            <param name="serializedInstance">Search Parameters</param>
            <param name="includeChildCollection">include associated entities in result.</param>
            <returns>IEnumerable of Organization units.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.SaveOrganizationUnitAssociation(System.Guid,System.Guid,System.Int64,System.String)">
            <summary>
            Saves users and organization unit association
            </summary>
            <param name="userId">Id of user</param>
            <param name="orgUnitId">Id of organization</param>
            <param name="userIdentitfier">identifier of the user</param>
            <param name="action">Action to indicate association type</param>
            <returns>Returns HttpResponse</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.SaveOrganizationUnits(System.String)">
            <summary>
            Saves Organization Units
            </summary>
            <param name="serializedInstances">Organization Units to be saved</param>
            <returns>IEnumerable of guids of saved Organization units.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.ResolveUserGroups(System.Collections.Generic.List{Icertis.CLM.Masters.TeamMember})">
            <summary>
            Resolves the user groups.
            </summary>
            <param name="team">The team.</param>
            <returns>The resolved Team.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetUsersInGroup(System.Guid)">
            <summary>
            Get users in a distribution group
            </summary>
            <param name="groupId">Sys id of the group for which the users are to be fetched</param>
            <returns>A list of <see cref="T:Icertis.CLM.Masters.UserInformation"/> objects.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetUsersInGroup(System.Int64)">
            <summary>
            Get users in a distribution group
            </summary>
            <param name="userInfoIdentifier">Identifier of the <see cref="T:Icertis.CLM.Masters.UserInformation"/> object representing the group for which the users are to be fetched</param>
            <returns>A list of <see cref="T:Icertis.CLM.Masters.UserInformation"/> objects.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetUsers(System.String,System.String)">
            <summary>
            Get list of all users with limited information - will return data for only those properties specified in projection.
            </summary>
            <param name="searchParameters">search Parameters</param>
            <param name="projections">list of properties need to fetch</param>
            <returns>list of users</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.ValidateUserApiToken(System.String)">
            <summary>
            Validates user API token and return user information
            </summary>
            <param name="token">API token</param>
            <returns>return user information</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.InsertLoginSessionEntry(System.String,System.String,System.String)">
            <summary>
            Logs an Login session state audit entry
            </summary>
            <param name="userName">The user friendly login of the current user.</param>
            <param name="loggedInIpAddress">The IP Address of the user</param>
            <param name="loginAsFrom">The login of the admin user who uses Login As functionality.</param>
            <returns>return user information</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.InsertSignOutSessionEntry(System.String,System.String)">
            <summary>
            Logs an Sign out session state audit entry
            </summary>
            <param name="userName">The user friendly login of the current user.</param>
            <param name="loggedInIpAddress">The IP Address of the user</param>
            <returns>return user information</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.SendUserCreatedNotification(Icertis.CLM.Masters.UserInformation,System.String,System.String)">
            <summary>
            Send User Created Notification
            </summary>
            <param name="userInformationInstance">User Information Instance</param>
            <param name="temporaryPassword">temporary password</param>
            <param name="formsAuthChangePwdURL">Forms authentication password url</param>
            <returns>Http Response Message</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.ValidateUserApiTokenForMobile(System.String)">
            <summary>
            Validate User Api Token Mobile
            </summary>
            <param name="token">API token</param>
            <returns>Http Response Message</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetPhoneApplicationSettings(System.String,System.Guid)">
            <summary>
            Get Phone Application Settings
            </summary>
            <param name="entityName">Entity Name</param>
            <param name="userSysId">User Sys Id</param>
            <returns>Http Response Message</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.SendUserInformationAttributesUpdatedNotification(Icertis.CLM.Masters.UserInformation)">
            <summary>
            Sends the user information attributes updated notification
            </summary>
            <param name="userInformationInstance">The user information instance.</param>
            <returns>HTTP response message</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.ReplaceUser(System.Collections.Generic.IEnumerable{Icertis.CLM.Utilities.Models.UserReplaceModel})">
            <summary>
            Replace user in entity teams 
            </summary>
            <param name="userReplaceActions">User replace action collection</param>
            <returns>flag indicating success or failed</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.RefreshUsersAccess">
            <summary>
            Refresh Users Access.
            </summary>
            <returns>returns Value</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.RefreshUsersRolesAccess(System.Nullable{System.Guid})">
            <summary>
            Refresh Users Roles Access
            </summary>
            <returns>Returns response value</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.DeleteUsersRolesAccess(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Delete Users Roles Access
            </summary>
            <param name="ids">ids to delete</param>
            <returns>
            http response code
            </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.RefreshAuthorizationMappings">
            <summary>
            Refresh Authorization Mappings
            </summary>
            <returns>Returns response value</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.RefreshAuthorizationAccesTypes">
            <summary>
            Refresh Authorization Access Types
            </summary>
            <returns>Returns response value</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.SendUserExpiryNotification">
            <summary>
            Send Notification for users which are about to expired.
            </summary>
            <returns>Success or failure </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.ResumeWorkFlow(Icertis.CLM.Masters.UserInformation,System.String)">
            <summary>
            Resume user workflow
            </summary>
            <param name="userObject">
            user Object.
            </param>
            <param name="workflowAction">
            Workflow Action Name.
            </param>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.EnableTeamMember(System.String,System.String,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean,System.String)">
            <summary>
            Set user as enabled
            </summary>
            <param name="instanceId">Instance Id</param>
            <param name="entityName">Entity name</param>
            <param name="teamMemberInstanceId">Team member sysId</param>
            <param name="sendUserNotification">Send Notification to User</param>
            <param name="userRationaleComments">Comment/Reason for enabling a user to the Team.</param>
            <returns>true if successfully enabled</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.DisableTeamMember(System.String,System.String,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Set user as disabled
            </summary>
            <param name="instanceId">Instance Id</param>
            <param name="entityName">Entity name</param>
            <param name="teamMemberInstanceId">Team member sysId</param>
            <returns>true if successfully disabled</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.SaveExternalUser(Icertis.CLM.Utilities.Models.UserInformationModel)">
            <summary>
            Saves the external user.
            </summary>
            <param name="userInformationModel">The user information model.</param>
            <returns>Returns the user identifier</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.AddRemoveGroups(Icertis.CLM.Utilities.Models.UserAddRemoveGroupModel)">
            <summary>
            Add or remove user from Security group and distribution group.
            </summary>
            <param name="model">Details of security and user groups.</param>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetWaadUsersWithoutRetires(System.String)">
            <summary>
                Makes an single attempt to get users from active directory.
            </summary>
            <param name="startsWith">Initial characters of user's name to limit search results</param>
            <returns>List of users from WAAD</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.AcquireTokenAsyncForApplication">
            <summary> 
            Async task to acquire token for Application. 
            </summary> 
            <returns>Async Token for application.</returns> 
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetTokenForApplication">
            <summary>
            Get token for application
            </summary>
            <returns>Returns task</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetAADUsers(Microsoft.Azure.ActiveDirectory.GraphClient.IActiveDirectoryClient,System.String)">
            <summary>
            Gets users.
            </summary>
            <param name="client">Active directory client</param>
            <param name="searchString">search string</param>
            <returns>List of users</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetLightModel(System.Collections.Generic.IEnumerable{Icertis.CLM.Masters.UserInformation})">
            <summary>
               Maps  full UserInformatiion Model to mobile model
            </summary>
            <param name="users">List of UserInformation objects</param>
            <returns>List of users from WAAD</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetUserInformationIfAuthorized(System.Int64,Icertis.CLM.Masters.UserInformation@)">
            <summary>
            Checks if current user has access to specified user's info
            </summary>
            <param name="userInformationId">user information identifier</param>
            <param name="user">UserInformation object</param>
            <returns>returns no content if user not found, forbidden if current user doesn't have access and Ok if data found and user has access</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.Users(System.String,System.Boolean)">
            <summary>
            Gets a list of users
            </summary>
            <param name="searchTerm">Search term to filter our the users</param>
            <param name="excludeExternalUsers">whether to exclude external users</param>
            <returns>A list of Models.Mobile.UserInfo</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.Find(Icertis.ACF.EntityService.Data.SearchParameters,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Find users
            </summary>
            <param name="searchParameters">The SQL WHERE select user</param>
            <param name="includeChildCollection">include Child Collection flag</param>
            <param name="page">Page number</param>
            <param name="count">Count of the instances to fetch</param>
            <returns>list of Models.Mobile.UserInfo </returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.EnableTeamMemberForMobile(System.String,System.String,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean)">
            <summary>
            Set user as enabled
            </summary>
            <param name="instanceId">Instance Id</param>
            <param name="entityName">Entity name</param>
            <param name="teamMemberInstanceId">Team member sysId</param>
            <param name="sendUserNotification">Send Notification to User</param>
            <returns>true if successfully enabled</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.DisableTeamMemberForMobile(System.String,System.String,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Set user as disabled
            </summary>
            <param name="instanceId">Instance Id</param>
            <param name="entityName">Entity name</param>
            <param name="teamMemberInstanceId">Team member sysId</param>
            <returns>true if successfully disabled</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetIdPCertificateForPinning">
            <summary>
            Gets the Identity Provider certificate for pinning.
            </summary>
            <returns>The response message with certificate data.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.ManageUserGroups(System.Collections.ArrayList)">
            <summary>
            Manage User Groups.
            </summary>
            <param name="WrapperObject">Instance Id</param>
            <returns>true if successfull.</returns>
        </member>
        <member name="M:Icertis.CLM.API.Controllers.UserController.GetUsersKeyValuePair(System.Collections.ArrayList)">
            <summary>
            Finds users satisfying a search criteria.
            </summary>
            <param name="wrapperObject">Array List of following objects cultureName, projections, sparams, includeChildCollection, fetchAuditEntries, sortOptions, identifiers, excludeTheseIdentifiers, timezoneInfo, page, count</param>
            <returns>List of instances satisfying the search criteria.</returns>
        </member>
        <member name="T:Icertis.CLM.API.MvcApplication">
            <summary>
            Application Level Settings.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.MvcApplication.ClassLogMessagePrefix">
            <summary>
            Log Message Prefix for the given class / file.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.MvcApplication.methodLogMessagePrefix">
            <summary>
            Message to be prefixed for logging.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.MvcApplication.logConfigurationHelper">
            <summary>
            The observable listener used for logging
            Log helper definition
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.MvcApplication.ApiRoleContextLabel">
            <summary>
            This is to tag the role instance label with tenant hostname
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.MvcApplication.InitializeElasticSearch">
            <summary>
            Setup Elastic Search
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.MvcApplication.InitializeDiagnostics">
            <summary>
            Initialize the diagnostics
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.MvcApplication.Application_Start">
            <summary>
            Register Route on Application Start.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.MvcApplication.Application_End">
            <summary>
            Register Route on Application End.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.MvcApplication.WarmApplicationUp">
            <summary>
            Warm up the application to improve the performance.
            </summary>
            <returns>returns control to the caller method.</returns>
        </member>
        <member name="M:Icertis.CLM.API.MvcApplication.UpdateCacheInSortedOrder(System.String,System.String)">
            <summary>
            Update the cache with latest dll in sorted order.
            </summary>
            <param name="methodLogMessagePrefix">message prefix for logging.</param>
            <param name="messageToBeLogged">message to be logged.</param>
            <returns>returns string for message.</returns>
        </member>
        <member name="M:Icertis.CLM.API.MvcApplication.RefreshDataCacheSettings">
            <summary>
                Refreshes the data cache config in web.config based on the configuration values
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.MvcApplication.CurrentDomain_ModulesAssemblyResolve(System.Object,System.ResolveEventArgs)">
            <summary>
            Handles the AssemblyResolve event of the CurrentDomain control and resolves the modules assemblies
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">The <see cref="T:System.ResolveEventArgs"/> instance containing the event data.</param>
            <returns>The resolved modules assembly</returns>
        </member>
        <member name="M:Icertis.CLM.API.MvcApplication.WriteDataCacheSettingsToConfig(System.String,System.String,System.String,System.String)">
            <summary>
                Writes the data cache config
            </summary>
            <param name="cacheType">The type of cache being used.</param>
            <param name="path">The path where the XML is stored.</param>
            <param name="dataCacheEndpoint">Path of config file to write to</param>
            <param name="authorizationInfo">Array of data cache hosts</param>
        </member>
        <member name="M:Icertis.CLM.API.MvcApplication.CacheLatestPublishedContractTypes">
            <summary>
            Caches the latest, published contract types
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.MvcApplication.StartPollingForLatestPackage(Icertis.ACF.Helpers.Core.Configuration.Models.Tenant)">
            <summary>
            Start a thread which polls to check for latest package.
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.MvcApplication.RoleEnvironmentChanged(System.Object,Microsoft.WindowsAzure.ServiceRuntime.RoleEnvironmentChangedEventArgs)">
            <summary>
            Role Environment Changed
            </summary>
            <param name="sender">
            object sender
            </param>
            <param name="e">
            Role Environment Changed Event
            </param>
        </member>
        <member name="M:Icertis.CLM.API.MvcApplication.SetupForCacheDiagnosticElasticSearch">
            <summary>
            Initial setup for Application.
            </summary>
            <returns>returns control to the caller method.</returns>
        </member>
        <member name="M:Icertis.CLM.API.MvcApplication.InitializeAutoFacContainer(System.Web.Http.HttpConfiguration)">
            <summary>
            Initializes the autofac container.
            </summary>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="M:Icertis.CLM.API.MvcApplication.TaskScheduler_UnobservedTaskException(System.Object,System.Threading.Tasks.UnobservedTaskExceptionEventArgs)">
            <summary>
            Event handler to handle unobserved exceptions in the Tasks
            </summary>
            <param name="sender">Sender of event</param>
            <param name="e">Argument containing the exception details</param>
        </member>
        <member name="T:Icertis.CLM.API.Helpers.DashboardHelper">
            <summary>
            Class for Dashboard helper functions
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Helpers.DashboardHelper.#ctor">
            <summary>
            default constructor
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Helpers.DashboardHelper.GetDashboardKPIS(Icertis.CLM.API.Common.Models.UserModel,System.Int64,System.Boolean,System.Boolean,System.String)">
            <summary>
            Initialize Dashboard Tiles
            </summary>
            <returns>List of Dashboard Tiles.</returns>        
        </member>
        <member name="M:Icertis.CLM.API.Helpers.DashboardHelper.Search(Icertis.CLM.Search.Models.SearchQuery,System.Int64,System.Boolean)">
            <summary>
            Search data in elastic search based on the search parameters
            </summary>
            <param name="searchQuery">Search Parameters object</param>
            <param name="islookupQuery">Flag indicating if the query is of lookup type</param>
            <returns>JObject containing the search results</returns>
        </member>
        <member name="M:Icertis.CLM.API.Helpers.DashboardHelper.GetResultantListWithSearchKPI(Icertis.CLM.Masters.UserInformation,System.Collections.Generic.List{Icertis.CLM.Utilities.DashboardKPIS},System.Boolean,System.Boolean,System.String)">
            <summary>
            Gets the final KPI list which includes search tile KPI's
            </summary>
            <param name="userIdentifier">User information</param>
            <param name="lstDashboardKPI">List of dashboard KPI for SSRS reports</param>
            <param name="allowDashboardMetrics">Flag  to enable dashboard metrics  for Search KPIs</param>
            <param name="includeSSRS">Parameter to decide whether to include SSRS KPIs</param>
            <returns>Returns list of DashboardKPIS with all data to be used on dashboard</returns>        
        </member>
        <member name="M:Icertis.CLM.API.Helpers.DashboardHelper.GetVisibleDashboardSearchFavourites(System.Int64)">
            <summary>
            Returns list of visible dashboard search favorites
            </summary>
            <param name="userIdentifier">user information</param>
            <returns>list of visible search tiles</returns>
        </member>
        <member name="M:Icertis.CLM.API.Helpers.DashboardHelper.ExecuteSearchForVisibleTiles(Newtonsoft.Json.Linq.JObject,System.Collections.Generic.List{System.String},Icertis.CLM.Masters.UserInformation)">
            <summary>
            Execute search for visible tiles only 
            </summary>
            <param name="item">search item</param>
            <param name="lstVisibleSearchTiles">visible items on dashboard</param>
            <param name="user">UserInformation object</param>
            <returns>statistical query result</returns>        
        </member>
        <member name="M:Icertis.CLM.API.Helpers.DashboardHelper.ExecuteSearch(Newtonsoft.Json.Linq.JObject,Icertis.CLM.Masters.UserInformation)">
            <summary>
            Execute search on 
            </summary>
            <param name="item">search item</param>
            <param name="user">UserInformation object</param>
            <returns>List of Dashboard</returns>        
        </member>
        <member name="M:Icertis.CLM.API.Helpers.DashboardHelper.GetUsersDistributionGroupIds(System.Int64)">
            <summary>
            Gets user's distribution group Ids
            </summary>
            <param name="userIdentifier">User's Identifier</param>
            <returns> XML as string</returns>
        </member>
        <member name="M:Icertis.CLM.API.Helpers.DashboardHelper.GetModel">
            <summary>
            Gets template model object
            </summary>
            <returns>Model object</returns>
        </member>
        <member name="M:Icertis.CLM.API.Helpers.DashboardHelper.GetSavedSearchKPIValue(Newtonsoft.Json.Linq.JObject,Icertis.CLM.Utilities.StatisticalOperationType)">
            <summary>
            Executes operational condition
            </summary>
            <param name="result">Object what else</param>
            <param name="operationType">Operation to be done</param>       
            <returns>Dashboard KPI object</returns>       
        </member>
        <member name="M:Icertis.CLM.API.Helpers.DashboardHelper.GetAuthorizedEntityList(Icertis.CLM.Masters.UserInformation,Icertis.CLM.API.Common.Models.UserModel)">
            <summary>
            Gets the list of entities which the currently logged in user has access to
            </summary>
            <param name="user">User</param>
            <param name="userModel">User Model</param>
            <returns>authorized entity list</returns>
        </member>
        <member name="M:Icertis.CLM.API.Helpers.DashboardHelper.GetCurrentSecurityGroupList(Icertis.CLM.Masters.UserInformation,Icertis.CLM.API.Common.Models.UserModel)">
            <summary>
            The get current security group list.
            </summary>
            <param name="user">User</param>
            <param name="userModel">User Model</param>
            <returns>The list of Security Groups</returns>      
        </member>
        <member name="T:Icertis.CLM.API.Helpers.HttpStatusCodeHelper">
            <summary>
            Helper class for HttpStatuscodes
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Helpers.HttpStatusCodeHelper.IsValidErrorCode(System.Net.HttpStatusCode)">
            <summary>
            Checks if given http status code is valid
            </summary>
            <param name="httpSatusCode"></param>
            <returns>true or false</returns>
        </member>
        <member name="T:Icertis.CLM.API.Helpers.LatestPackageHelper">
            <summary>
            Helper class to manage latest package from entity service
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Helpers.LatestPackageHelper.ClassLogMessagePrefix">
            <summary>
            Log Message Prefix for the given class / file.
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Helpers.LatestPackageHelper.TraceSwitch">
            <summary>
            Trace switch
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Helpers.LatestPackageHelper.lastPackageLoadedTimeStamp">
            <summary>
            Timestamp when package loaded last time
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Helpers.LatestPackageHelper.latestPackagePollingThreads">
            <summary>
            Timestamp when package loaded last time
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Helpers.LatestPackageHelper.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Icertis.CLM.API.Helpers.LatestPackageHelper"/> class.
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Helpers.LatestPackageHelper.LatestPackagePollingThreads">
            <summary>
            Gets the Latest Package Polling Threads Per Tenant
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Helpers.LatestPackageHelper.SetLastPackageLoadedTimeStamp(System.DateTime,System.String)">
            <summary>
            Sets given timestamp as last package loaded
            </summary>
            <param name="timeStamp">Time stamp</param>
            <param name="tenantCode">Tenant code</param>
        </member>
        <member name="M:Icertis.CLM.API.Helpers.LatestPackageHelper.PollForLatestPackage(Icertis.ACF.Helpers.Core.Configuration.Models.Tenant)">
            <summary>
            Delegate to poll for latest package
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Helpers.LatestPackageHelper.LogMessage(Icertis.ACF.Helpers.Core.Instrumentation.EventInformation,Icertis.ACF.Helpers.Core.Configuration.ApiContext,System.String)">
            <summary>
            Log the message
            </summary>
            <param name="eventInfo">Event Information</param>
            <param name="context">API Context</param>
            <param name="message">Message String</param>
        </member>
        <member name="M:Icertis.CLM.API.Helpers.LatestPackageHelper.GetEncryptedTenantConfigSettingFromTenantInformation(System.String,Icertis.ACF.Helpers.Core.Configuration.Models.Tenant)">
            <summary>
            get encrypted config setting from tenant information object
            </summary>
            <param name="key">configuration key</param>
            <param name="tenantInfo">tenant information</param>
            <returns>configuration value</returns>
        </member>
        <member name="T:Icertis.CLM.API.Helpers.Permission">
            <summary>
            Represents permissions in ICM. 
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Helpers.Permission.None">
            <summary>
            No permission
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Helpers.Permission.View">
            <summary>
            View Permission
            </summary>
        </member>
        <member name="F:Icertis.CLM.API.Helpers.Permission.Manage">
            <summary>
            Manage Permission
            </summary>
        </member>
        <member name="T:Icertis.CLM.API.Helpers.UserInformationHelper">
            <summary>
            Class for Dashboard helper functions
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Helpers.UserInformationHelper.CheckOrgPathAccess(Icertis.CLM.Masters.UserInformation,System.Guid)">
            <summary>
            Checks the org path access.
            </summary>
            <param name="userInformation">The user information.</param>
            <param name="instanceOrgPathId">The instance org unit identifier unique identifier.</param>
            <returns>whether entity instance's org unit is part of the user org group</returns>
        </member>
        <member name="M:Icertis.CLM.API.Helpers.UserInformationHelper.GetOrgGroups(System.String)">
            <summary>
            Get list of organization group by the sys id.
            </summary>
            <param name="orgIds">Comma separated list of the organization group id.</param>
            <returns>Collection of the organization groups</returns>
        </member>
        <member name="M:Icertis.CLM.API.Helpers.UserInformationHelper.GetLoggedInUser">
            <summary>
            Get logged in user
            </summary>
            <returns>Logged in user</returns>
        </member>
        <member name="T:Icertis.CLM.API.Models.EntityResourceDescriptorArgs">
            <summary>
            Entity Resource Descriptor Arguments
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.EntityResourceDescriptorArgs.AdditionalFields">
            <summary>
            Gets or sets the additional fields which will be returned by the endpoint in addition to its default fields.
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.EntityResourceDescriptorArgs.Processor">
            <summary>
            Gets or sets the fully qualified name of the class which process the data by transforming from one form to another.
            </summary>
        </member>
        <member name="T:Icertis.CLM.API.Models.HttpsRequestModel.ClauseRequestModel">
            <summary>
            Clause Request Model for Rest Calls
            </summary>
        </member>
        <member name="T:Icertis.CLM.API.Models.Mobile.Agreement">
            <summary>
            Model for Lightweight Agreement 
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.Agreement.Attributes">
            <summary>
            Gets or sets Agreement Attributes
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.Agreement.Associations">
            <summary>
            Gets or sets Associations
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.Agreement.Commitments">
            <summary>
            Gets or sets Commitments
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.Agreement.Notes">
            <summary>
            Gets or sets Notes
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.Agreement.TeamMember">
            <summary>
            Gets or sets Team
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.Agreement.AmendmentCollection">
            <summary>
            Gets or sets Amendments
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.Agreement.IsAmendment">
            <summary>
            Gets or sets IsAmendment
            </summary> 
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.Agreement.EntityName">
            <summary>
            Gets or sets EntityName
            </summary> 
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.Agreement.ParentAgreementId">
            <summary>
            Gets or sets ParentAgreementId
            </summary> 
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.Agreement.ContractTypeId">
            <summary>
            Gets or sets ContractTypeId
            </summary> 
        </member>
        <member name="T:Icertis.CLM.API.Models.Mobile.AgreementAssociation">
            <summary>
            Agreement Associations Model
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AgreementAssociation.AssociationId">
            <summary>
            Gets or sets Association Id
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AgreementAssociation.AssociationCode">
            <summary>
            Gets or sets Association Code
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AgreementAssociation.AssociationName">
            <summary>
            Gets or sets Association Name
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AgreementAssociation.EntityName">
            <summary>
            Gets or sets Association Name
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AgreementAssociation.DisplayName">
            <summary>
            Gets or sets DisplayName
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AgreementAssociation.CreatedBy">
            <summary>
            Gets or sets DisplayName
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AgreementAssociation.Count">
            <summary>
            Gets or sets Priority
            </summary>
        </member>
        <member name="T:Icertis.CLM.API.Models.Mobile.AgreementCommitment">
            <summary>
            Agreement Commitment class
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AgreementCommitment.CommitmentCode">
            <summary> 
            Gets or sets ICM Display Name
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AgreementCommitment.Description">
            <summary> 
            Gets or sets Description
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AgreementCommitment.DisplayName">
            <summary> 
            Gets or sets CommittmentType
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AgreementCommitment.DueDate">
            <summary> 
            Gets or sets Due Date
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AgreementCommitment.Status">
            <summary> 
            Gets or sets Status
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AgreementCommitment.CommitmentOwner">
            <summary> 
            Gets or sets Commitment Owner
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AgreementCommitment.CommitmentSysId">
            <summary> 
            Gets or sets Commitment SysId
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AgreementCommitment.ContractTypeName">
            <summary> 
            Gets or sets ContractType Name
            </summary>
        </member>
        <member name="T:Icertis.CLM.API.Models.Mobile.CommitmentAction">
            <summary>
            Commitment Action class
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.CommitmentAction.ActionTaken">
            <summary> 
            Gets or sets ActionTaken
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.CommitmentAction.CreatedDate">
            <summary> 
            Gets or sets CreatedDate
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.CommitmentAction.Remarks">
            <summary> 
            Gets or sets Remarks
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.CommitmentAction.StatusForCommitment">
            <summary> 
            Gets or sets StatusForCommitment
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AgreementDeviation.DeviationId">
            <summary> 
            Gets or sets Deviation Id
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AgreementDeviation.ClauseCode">
            <summary> 
            Gets or sets Clause Code
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AgreementDeviation.ClauseName">
            <summary> 
            Gets or sets Clause  Name
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AgreementDeviation.DeviatedBy">
            <summary> 
            Gets or sets Deviated By
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AgreementDeviation.DeviatedOn">
            <summary> 
            Gets or sets Deviated On
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AgreementDeviation.AgreementId">
            <summary> 
            Gets or sets Agreement Id
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AgreementDeviation.ContractName">
            <summary> 
            Gets or sets Contract Name
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AgreementDeviation.Status">
            <summary> 
            Gets or sets Status
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AgreementDeviation.DeviationComments">
            <summary> 
            Gets or sets DeviationComments
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AgreementDeviation.StandardClauseId">
            <summary> 
            Gets or sets StandardClauseId
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AgreementDeviation.IsActionRequired">
            <summary> 
            Gets or sets IsActionRequired
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AgreementDeviationDetail.ClauseCode">
            <summary> 
            Gets or sets Clause Code
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AgreementDeviationDetail.ClauseName">
            <summary> 
            Gets or sets Clause  Name
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AgreementDeviationDetail.DeviationText">
            <summary> 
            Gets or sets Deviation Text
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AgreementDeviationDetail.ClauseText">
            <summary> 
            Gets or sets Clause Text
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AgreementDeviationDetail.DeviationComments">
            <summary> 
            Gets or sets Deviation Comments
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AgreementNote.Description">
            <summary> 
            Gets or sets Description
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AgreementNote.CreatedBy">
            <summary> 
            Gets or sets Due Date
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AgreementNote.CreatedDate">
            <summary> 
            Gets or sets Due Date
            </summary>
        </member>
        <member name="T:Icertis.CLM.API.Models.Mobile.AllUsersInfo">
            <summary>
            all users information model
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AllUsersInfo.FullName">
            <summary>
            Gets or sets full name
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AllUsersInfo.Identifier">
            <summary>
            Gets or sets user identifier
            </summary>
        </member>
        <member name="T:Icertis.CLM.API.Models.Mobile.AmendmentModel">
            <summary>
            Model for Lightweight Amendments 
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AmendmentModel.InstanceId">
            <summary>
            Gets or sets InstanceId
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AmendmentModel.EntityName">
            <summary>
             Gets or sets Name of Entity
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AmendmentModel.AgreementName">
            <summary>
             Gets or sets Agreement Name
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AmendmentModel.AmendmentStatus">
            <summary>
             Gets or sets Amendment Status
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AmendmentModel.CreationDate">
            <summary>
            Gets or sets creation date
            </summary>
        </member>
        <member name="T:Icertis.CLM.API.Models.Mobile.AttributeBase">
            <summary>
            Attribute base class
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AttributeBase.ICMDisplayName">
            <summary> 
            Gets or sets ICM Display Name
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AttributeBase.Name">
            <summary>
            Gets or sets Name
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AttributeBase.DataType">
            <summary>
            Gets or sets DataType
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AttributeBase.IsVisibleOnDetail">
            <summary>
            Gets or sets a value indicating whether visible on details
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AttributeBase.IsVisibleOnTile">
            <summary>
            Gets or sets a value indicating whether visible on tile
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AttributeBase.DetailsDisplayOrder">
            <summary>
            Gets or sets Details Display Order
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AttributeBase.AttributeGroup">
            <summary>
            Gets or sets Attribute Group
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AttributeBase.AttributeOrder">
            <summary>
            Gets or sets Attribute Order
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Icertis.CLM.API.Models.Mobile.AttributeBase.AttributeValue" -->
        <member name="T:Icertis.CLM.API.Models.Mobile.AttributeChangeLog">
            <summary>
            Model for Lightweight Attribute value change Log 
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Models.Mobile.AttributeChangeLog.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Icertis.CLM.API.Models.Mobile.AttributeChangeLog" /> class.
            </summary>
            <param name="attributeName">attribute name</param>
            <param name="oldValue">old value</param>
            <param name="changedValue">new value</param>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AttributeChangeLog.AttributeName">
            <summary>
            Gets or sets the attribute name
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AttributeChangeLog.OldValue">
            <summary>
            Gets or sets the old value
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AttributeChangeLog.ChangedValue">
            <summary>
            Gets or sets the new value
            </summary>
        </member>
        <member name="T:Icertis.CLM.API.Models.Mobile.AuditHistoryTabFilter">
            <summary>
            Model for Lightweight Agreement 
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AuditHistoryTabFilter.SequenceNo">
            <summary>
            Sequence number
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AuditHistoryTabFilter.Name">
            <summary>
            Sequence number
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AuditHistoryTabFilter.LocalizationKeyName">
            <summary>
            Sequence number
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AuditHistoryTabFilter.FilterPropertyName">
            <summary>
            Sequence number
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AuditHistoryTabFilter.FilterValues">
            <summary>
            Sequence number
            </summary>
        </member>
        <member name="T:Icertis.CLM.API.Models.Mobile.AuditLog">
            <summary>
            Model for Lightweight Audit Log 
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AuditLog.AuditLogId">
            <summary>
            Gets or sets audit log id
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AuditLog.DateLogged">
            <summary>
            Gets or sets audit logged date
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AuditLog.ActionBy">
            <summary>
            Gets or sets audit logged by user name
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AuditLog.TabName">
            <summary>
            Gets or sets audit logged by user name
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AuditLog.AttributeChangeLogs">
            <summary>
            Gets or sets the attribute change logs.
            </summary>
            <value>
            The attribute change logs.
            </value>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AuditLog.UserRole">
            <summary> Gets the user role </summary>
            <value> user role </value>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AuditLog.DisplayLogMessage">
            <summary>
            Gets the log message to be displayed.
            </summary>
            <value>
            The display log message.
            </value>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AuditLog.UserEmail">
            <summary> Gets the user email </summary>
            <value> user email </value>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AuditLog.Notes">
            <summary> Gets the notes </summary>
            <value> notes </value>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.AuditLog.EventFilter">
            <summary> Gets the notes </summary>
            <value> notes </value>
        </member>
        <member name="M:Icertis.CLM.API.Models.Mobile.AuditLog.Create(Icertis.ACF.AuditService.Core.Entities.EntityEvent,System.Collections.Generic.IList{Icertis.CLM.API.Models.Mobile.AuditHistoryTabFilter},Icertis.CLM.Masters.UserSetting)">
            <summary>
            Creates an instance of audit log view model
            </summary>
            <param name="auditLog">audit event data</param>
            <param name="filters">tab filter data</param>
            <param name="setting">user preferences</param>
            <returns>audit log view model</returns>
        </member>
        <member name="M:Icertis.CLM.API.Models.Mobile.AuditLog.GetLogMessage(Icertis.ACF.AuditService.Core.Entities.AuditEvent,Icertis.CLM.Masters.UserSetting)">
            <summary>
            Gets the log message.
            </summary>
            <param name="auditLog">The audit log.</param>
            <param name="setting">user preferences</param>
            <returns>returns the formatted log message</returns>
        </member>
        <member name="M:Icertis.CLM.API.Models.Mobile.AuditLog.CreateLogMessage(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Creates the log message string for display. 
            It takes the collection of the custom audit data and replaces the 
            formatted string with the values provided. 
            </summary>
            <param name="auditMessage">The audit message.</param>
            <param name="customAuditData">The custom audit data.</param>        
            <returns>returns the log message</returns>
        </member>
        <member name="M:Icertis.CLM.API.Models.Mobile.AuditLog.GetCustomAuditParts(Icertis.ACF.AuditService.Core.Entities.AuditEvent,Icertis.CLM.Masters.UserSetting)">
            <summary>
            Gets the log message.
            </summary>
            <param name="auditLog">The audit log.</param>
            <param name="setting">user preferences</param>
            <returns>returns custom data parts</returns>
        </member>
        <member name="M:Icertis.CLM.API.Models.Mobile.AuditLog.GetAuditMessageTokenData(Icertis.ACF.AuditService.Core.Entities.AuditEvent,System.String)">
            <summary>
            Gets the value for the audit message token data.
            </summary>
            <param name="auditLog">The audit log.</param>
            <param name="parentNode">message token parent node</param>
            <returns>value of the custom audit data</returns>
        </member>
        <member name="M:Icertis.CLM.API.Models.Mobile.AuditLog.GetCustomAuditData(Icertis.ACF.AuditService.Core.Entities.AuditEvent,System.String,System.String)">
            <summary>
            Gets the value for the custom audit data.
            </summary>
            <param name="auditLog">The audit log.</param>
            <param name="customAuditType">Type of the custom audit.</param>
            <param name="customAuditName">Custom audit attribute name</param>
            <returns>value of the custom audit data</returns>
        </member>
        <member name="M:Icertis.CLM.API.Models.Mobile.AuditLog.GetSourceAgreementInfoData(Icertis.ACF.AuditService.Core.Entities.AuditEvent,System.String,System.String)">
            <summary>
            Parses the source agreement information to the custom data to be used to display agreement anchor tag.
            </summary>
            <param name="auditLog">audit log entry.</param>
            <param name="customAuditType">Type of the custom audit.</param>
            <param name="customAuditName">Custom audit attribute name</param>
            <returns>custom audit data</returns>
        </member>
        <member name="M:Icertis.CLM.API.Models.Mobile.AuditLog.GetChangeLogs(Icertis.ACF.AuditService.Core.Entities.EntityEvent)">
            <summary>
            Parses the audit log xml to get the changed attributes with old and new value
            </summary>
            <param name="auditLog">audit event data</param>
            <returns>collection of changed attribute with old and new value</returns>
        </member>
        <member name="T:Icertis.CLM.API.Models.Mobile.ColorCodeInformation">
            <summary>
            Color Code information class
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.ColorCodeInformation.Name">
            <summary>
            Gets or sets Name
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.ColorCodeInformation.Key">
            <summary>
            Gets or sets Key
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.ColorCodeInformation.Value">
            <summary>
            Gets or sets Color Code Value
            </summary>
        </member>
        <member name="T:Icertis.CLM.API.Models.Mobile.ConfigXMLRoot">
            <summary>
            Config XML Root class
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.ConfigXMLRoot.RootItems">
            <summary>
            Gets or sets Root Item
            </summary>
        </member>
        <member name="T:Icertis.CLM.API.Models.Mobile.ConfigXMLRootItem">
            <summary>
            Config XML Root Item class
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.ConfigXMLRootItem.ApproveAction">
            <summary>
            Gets or sets Approve Action
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.ConfigXMLRootItem.RejectAction">
            <summary>
            Gets or sets Reject Action
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.ConfigXMLRootItem.ApprovalState">
            <summary>
            Gets or sets Approval State
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.ConfigXMLRootItem.ReviewState">
            <summary>
            Gets or sets Review State
            </summary>
        </member>
        <member name="T:Icertis.CLM.API.Models.Mobile.EntityTeamMember">
            <summary>
            Model for Lightweight Team 
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.EntityTeamMember.AssociatedInstanceId">
            <summary>
            Gets or sets AssociatedInstanceId
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.EntityTeamMember.IsEnabled">
            <summary>
            Gets or sets IsEnabled
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.EntityTeamMember.IsGroup">
            <summary>
            Gets or sets IsGroup
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.EntityTeamMember.Role">
            <summary>
            Gets or sets Role
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.EntityTeamMember.RoleName">
            <summary>
            Gets or sets RoleName
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.EntityTeamMember.StepOrder">
            <summary>
            Gets or sets StepOrder
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.EntityTeamMember.UserIdentifier">
            <summary>
            Gets or sets UserIdentifier
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.EntityTeamMember.UserName">
            <summary>
            Gets or sets UserName
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.EntityTeamMember.DeviationList">
            <summary>
            Gets or sets DeviationList
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.EntityTeamMember.IsRemoveTeamMember">
            <summary>
            Gets or sets IsRemoveTeamMember
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.EntityTeamMember.IsShowEnableDisable">
            <summary>
            Gets or sets IsShowEnableDisable
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.EntityTeamMember.teamMemberInstanceId">
            <summary>
            Gets or sets teamMemberInstanceId
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.EntityTeamMember.EmailId">
            <summary>
            Gets or sets EmailId
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.EntityTeamMember.RoleCategory">
            <summary>
            Gets or sets RoleCategory
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.EntityTeamMember.ApprovalIndication">
            <summary>
            Gets or sets ApprovalIndication
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.EntityTeamMember.ActionPendingSince">
            <summary>
            Gets or sets ActionPendingSince
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.EntityTeamMember.ApprovalNote">
            <summary>
            Gets or sets ApprovalNote
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.EntityTeamMember.DisplayIcon">
            <summary>
            Gets or sets DisplayIcon
            </summary>
        </member>
        <member name="T:Icertis.CLM.API.Models.Mobile.FacetAttributes">
            <summary>
            Attribute base class
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.FacetAttributes.field">
            <summary> 
            Gets or sets ICM field
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.FacetAttributes.Size">
            <summary>
            Gets or sets Size
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.FacetAttributes.type">
            <summary>
            Gets or sets DataType
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.MobileDeviationComments.Comments">
            <summary> 
            Gets or sets Comments
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.MobileDeviationComments.CommentedBy">
            <summary> 
            Gets or sets CommentedBy
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.MobileDeviationComments.CommentedDate">
            <summary> 
            Gets or sets CommentedDate
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.NotificationEvent.CategoryName">
            <summary> 
            Gets or sets CategoryName
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.NotificationEvent.EventDisplayName">
            <summary> 
            Gets or sets EventDisplayName
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.NotificationEvent.Subject">
            <summary> 
            Gets or sets Subject
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.NotificationEvent.EntityInstanceId">
            <summary> 
            Gets or sets EntityInstanceId
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.NotificationEvent.SourceEntityInstanceName">
            <summary> 
            Gets or sets SourceEntityInstanceName
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.NotificationEvent.SourceEntityName">
            <summary> 
            Gets or sets SourceEntityName
            </summary>
        </member>
        <member name="T:Icertis.CLM.API.Models.Mobile.PhoneApplicationSettings">
            <summary>
            Phone Application Settings class
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.PhoneApplicationSettings.MobileConfiguration">
            <summary>
            Gets or sets Mobile Configurations
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.PhoneApplicationSettings.AllUsersInformation">
            <summary>
            Gets or sets All Users Information
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.PhoneApplicationSettings.ColorCodeInfo">
            <summary>
            Gets or sets Color Code Information
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.PhoneApplicationSettings.SecurityGroups">
            <summary>
            Gets or sets Security Groups
            </summary>
        </member>
        <member name="T:Icertis.CLM.API.Models.Mobile.PhoneAttributeData">
            <summary>
            Phone Attribute Data class
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.PhoneAttributeData.Name">
            <summary>
            Gets or sets Name
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.PhoneAttributeData.EntityInstanceId">
            <summary>
            Gets or sets Entity Instance Id
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.PhoneAttributeData.ICMDisplayName">
            <summary>
            Gets or sets ICM Display Name
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.PhoneAttributeData.ContractTypeAttributes">
            <summary>
            Gets or sets Contract Type Attributes
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.PhoneAttributeData.ContractTypeEntityRelationships">
            <summary>
            Gets or sets Contract Type Entity Relationships
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.PhoneAttributeData.ContractTypeTeam">
            <summary>
            Gets or sets Contract Type Team
            </summary>
        </member>
        <member name="T:Icertis.CLM.API.Models.Mobile.PhoneContractTypeAttribute">
            <summary>
            Phone Contract Type Attribute class
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.PhoneContractTypeAttribute.ICMDisplayName">
            <summary> 
            Gets or sets ICM Display Name
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.PhoneContractTypeAttribute.Name">
            <summary>
            Gets or sets Name
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.PhoneContractTypeAttribute.DataType">
            <summary>
            Gets or sets DataType
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.PhoneContractTypeAttribute.IsVisibleOnDetail">
            <summary>
            Gets or sets a value indicating whether visible on details
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.PhoneContractTypeAttribute.IsVisibleOnTile">
            <summary>
            Gets or sets a value indicating whether visible on tile
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.PhoneContractTypeAttribute.DetailsDisplayOrder">
            <summary>
            Gets or sets Details Display Order
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.PhoneContractTypeAttribute.AttributeGroup">
            <summary>
            Gets or sets Attribute Group
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.PhoneContractTypeAttribute.AttributeOrder">
            <summary>
            Gets or sets Attribute Order
            </summary>
        </member>
        <member name="T:Icertis.CLM.API.Models.Mobile.PhoneContractTypeER">
            <summary>
            Phone Contract Type ER class
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.PhoneContractTypeER.AssociationName">
            <summary>
            Gets or sets Association Name
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.PhoneContractTypeER.Priority">
            <summary>
            Gets or sets Priority
            </summary>
        </member>
        <member name="T:Icertis.CLM.API.Models.Mobile.PhoneContractTypeTeam">
            <summary>
            Phone Contract Type Team class
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.PhoneContractTypeTeam.UserIdentifier">
            <summary>
            Gets or sets User Identifier
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.PhoneContractTypeTeam.Role">
            <summary>
            Gets or sets Role
            </summary>
        </member>
        <member name="T:Icertis.CLM.API.Models.Mobile.SecurityGroup">
            <summary>
            Security group class
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.SecurityGroup.Name">
            <summary>
            Gets or sets name
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.SecurityGroup.GroupPermissions">
            <summary>
            Gets or sets group permissions
            </summary>
        </member>
        <member name="T:Icertis.CLM.API.Models.Mobile.SecurityGroupPermission">
            <summary>
            Security Group Permission class
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.SecurityGroupPermission.NameOfEntity">
            <summary>
            Gets or sets Name Of Entity
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.SecurityGroupPermission.Permissions">
            <summary>
            Gets or sets Permissions
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.Task.EntityName">
            <summary> 
            Gets or sets EntityName
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.Task.CreatedOn">
            <summary> 
            Gets or sets CreatedOn
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.Task.Text">
            <summary> 
            Gets or sets Text
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.Task.EntityInstanceId">
            <summary> 
            Gets or sets EntityInstanceId
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.Task.SourceEntityInstanceName">
            <summary> 
            Gets or sets SourceEntityInstanceName
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.Task.Status">
            <summary> 
            Gets or sets Status
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.Task.Description">
            <summary> 
            Gets or sets Description
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.Task.SourceEntityName">
            <summary> 
            Gets or sets SourceEntityName
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.Task.TypeOfContract">
            <summary> 
            Gets or sets TypeOfContract
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.Task.UserName">
            <summary> 
            Gets or sets UserName
            </summary>
        </member>
        <member name="T:Icertis.CLM.API.Models.Mobile.UserInfo">
            <summary>
            User Info class
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.UserInfo.FullName">
            <summary>
            Gets or sets full name
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.UserInfo.Identifier">
            <summary>
            Gets or sets user identifier
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.UserInfo.OrganizationUnitId">
            <summary>
            Gets or sets Organization unit id
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.UserInfo.EmailID">
            <summary>
            Gets or sets email address
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.UserInfo.Realm">
            <summary>
            Gets or sets realm
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.UserInfo.SysId">
            <summary>
            Gets or sets sys id
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.UserInfo.ExternalUPN">
            <summary>
            Gets or sets External UPN
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.UserInfo.UserInformationSetting">
            <summary>
            Gets or sets user info settings
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.UserInfo.TargetTimeZoneDiff">
            <summary>
            Gets or sets time zone difference
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.UserInfo.TypeOfUser">
            <summary>
            Gets or sets type of user
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.UserInfo.IsGroup">
            <summary>
            Gets or sets if the user is Group
            </summary>
        </member>
        <member name="T:Icertis.CLM.API.Models.Mobile.UserInfoSettings">
            <summary>
            User information settings
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.UserInfoSettings.DateFormat">
            <summary>
            Gets or sets date format
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.UserInfoSettings.TimeFormat">
            <summary>
            Gets or sets tome format
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.UserInfoSettings.TimeZone">
            <summary>
            Gets or sets time zone
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.UserInfoSettings.CultureCode">
            <summary>
            Gets or sets culture code
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.UserInfoSettings.OpenInSameTab">
            <summary>
            Gets or sets OpenInSameTab setting
            </summary>
        </member>
        <member name="T:Icertis.CLM.API.Models.Mobile.UserRole">
            <summary>
            Model for Lightweight Role 
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.UserRole.SysId">
            <summary>
            Gets or sets AssociatedInstanceId
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.UserRole.RoleName">
            <summary>
            Gets or sets RoleName
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.UserRole.RoleDisplayName">
            <summary>
            Gets or sets RoleDisplayName
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Models.Mobile.UserRole.DeviationList">
            <summary>
            Gets or sets DeviationList
            </summary>
        </member>
        <member name="T:Icertis.CLM.API.Models.Response.CreateUpdateCompletionResponse">
            <summary>
            Response packet for create agreement completion
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Models.Response.CreateUpdateCompletionResponse.#ctor(Icertis.ACF.EntityService.Data.EntityBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Icertis.CLM.API.Models.Response.CreateUpdateCompletionResponse"/> class.
            </summary>
            <param name="resultData">The result data.</param>        
        </member>
        <member name="M:Icertis.CLM.API.Models.Response.CreateUpdateCompletionResponse.#ctor(Icertis.ACF.EntityService.Data.EntityBase,System.Collections.Generic.IEnumerable{Icertis.Acf.Shared.Core.Http.HttpResultMessage})">
            <summary>
            Initializes a new instance of the <see cref="T:Icertis.CLM.API.Models.Response.CreateUpdateCompletionResponse"/> class.
            </summary>
            <param name="resultData">The result data.</param>        
        </member>
        <member name="T:Icertis.CLM.API.Models.Response.ResumeWorkflowCompletionResponse">
            <summary>
            Response packet for create agreement completion
            </summary>
        </member>
        <member name="M:Icertis.CLM.API.Models.Response.ResumeWorkflowCompletionResponse.#ctor(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Icertis.CLM.API.Models.Response.CreateUpdateCompletionResponse"/> class.
            </summary>
            <param name="resultData">The result data.</param>        
        </member>
        <member name="M:Icertis.CLM.API.Models.Response.ResumeWorkflowCompletionResponse.#ctor(Newtonsoft.Json.Linq.JObject,System.Collections.Generic.IEnumerable{Icertis.Acf.Shared.Core.Http.HttpResultMessage})">
            <summary>
            Initializes a new instance of the <see cref="T:Icertis.CLM.API.Models.Response.CreateUpdateCompletionResponse"/> class.
            </summary>
            <param name="resultData">The result data.</param>        
        </member>
        <member name="T:Icertis.CLM.API.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Properties.Resources.AccessDeniedExceptionMessageFormat">
            <summary>
              Looks up a localized string similar to Unauthorized access detected. Path : {0} , Authorization Header : {1}.
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Properties.Resources.AttributeCannotBeNull">
            <summary>
              Looks up a localized string similar to Attribute cannot be null.
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Properties.Resources.AttributeIsInUseCanNotUpdate">
            <summary>
              Looks up a localized string similar to The attribute is already in use and cannot be updated.
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Properties.Resources.AttributeWithSameName">
            <summary>
              Looks up a localized string similar to There is already an attribute with the same name.
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Properties.Resources.BookmarkColumnName">
            <summary>
              Looks up a localized string similar to BlockingBookmarks.
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Properties.Resources.GetAvailableActionsQueryPattern">
            <summary>
              Looks up a localized string similar to SELECT [Id],[BlockingBookmarks] FROM [System.Activities.DurableInstancing].[InstancesTable] where [Id]=&apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Properties.Resources.GetBaseWorkflowId">
             <summary>
               Looks up a localized string similar to select (case When [description] = &apos;Agreement Workflow&apos; THEN 1
            when Description = &apos;Agreement Workflow&apos; then 1
            when Description = &apos;Associated Document work flow&apos; then 2
            when Description = &apos;Contract Type work flow&apos; then 3
            when Description = &apos;Clause work flow&apos; then 4
            when Description = &apos;Template work flow&apos; then 5
            when Description = &apos;Contract Request work flow&apos; then 6 end) as BaseWorkflowId
            from WorkFlow w with (nolock)
            where w.WorkFlowId = &apos;{0}&apos;.
             </summary>
        </member>
        <member name="P:Icertis.CLM.API.Properties.Resources.GetWorkflowId">
             <summary>
               Looks up a localized string similar to SELECT [Id],[BlockingBookmarks], wd.Major FROM [System.Activities.DurableInstancing].[InstancesTable] wi
            left outer join [System.Activities.DurableInstancing].[DefinitionIdentityTable] wd 
            on wi.SurrogateIdentityId = wd.SurrogateIdentityId where wi.Id = &apos;{0}&apos;.
             </summary>
        </member>
        <member name="P:Icertis.CLM.API.Properties.Resources.IcmEventLogFileNameFormat">
            <summary>
              Looks up a localized string similar to {0}\{1}\{2}.log.
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Properties.Resources.IcmStartWorkflowError">
            <summary>
              Looks up a localized string similar to ICM:: Start Workflow :EntityInstance cannot be null..
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Properties.Resources.LogConfig_InvalidVerbosityWarning">
            <summary>
              Looks up a localized string similar to Invalid verbosity configuration.
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Properties.Resources.LogConfig_UpdatingVerbosityInfo">
            <summary>
              Looks up a localized string similar to Updating verbosity to {0}.
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Properties.Resources.LogServiceContextNull">
            <summary>
              Looks up a localized string similar to API Context cannot be null.
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Properties.Resources.RegexBookMarkName">
            <summary>
              Looks up a localized string similar to (\{[\w\d\W\&quot;\,:]+\}).
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Properties.Resources.SomethingWentWrong">
            <summary>
              Looks up a localized string similar to Something went wrong. Please try again.
            </summary>
        </member>
        <member name="P:Icertis.CLM.API.Properties.Resources.TimeOfDayFormat">
            <summary>
              Looks up a localized string similar to HH-mm-ss.
            </summary>
        </member>
    </members>
</doc>
