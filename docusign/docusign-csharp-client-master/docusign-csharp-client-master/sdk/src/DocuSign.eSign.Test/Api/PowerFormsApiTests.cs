/* 
 * DocuSign REST API
 *
 * The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.
 *
 * OpenAPI spec version: v2
 * Contact: devcenter@docusign.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using DocuSign.eSign.Client;
using DocuSign.eSign.Api;
using DocuSign.eSign.Model;

namespace DocuSign.eSign.Test
{
    /// <summary>
    ///  Class for testing PowerFormsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class PowerFormsApiTests
    {
        private PowerFormsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new PowerFormsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of PowerFormsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' PowerFormsApi
            //Assert.IsInstanceOfType(typeof(PowerFormsApi), instance, "instance is a PowerFormsApi");
        }

        
        /// <summary>
        /// Test CreatePowerForm
        /// </summary>
        [Test]
        public void CreatePowerFormTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PowerForm powerForm = null;
            //string accountId = null;
            //var response = instance.CreatePowerForm(powerForm, accountId);
            //Assert.IsInstanceOf<PowerForm> (response, "response is PowerForm");
        }
        
        /// <summary>
        /// Test DeletePowerForm
        /// </summary>
        [Test]
        public void DeletePowerFormTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string powerFormId = null;
            //instance.DeletePowerForm(accountId, powerFormId);
            
        }
        
        /// <summary>
        /// Test DeletePowerForms
        /// </summary>
        [Test]
        public void DeletePowerFormsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PowerFormsRequest powerFormsRequest = null;
            //string accountId = null;
            //var response = instance.DeletePowerForms(powerFormsRequest, accountId);
            //Assert.IsInstanceOf<PowerFormsResponse> (response, "response is PowerFormsResponse");
        }
        
        /// <summary>
        /// Test GetPowerForm
        /// </summary>
        [Test]
        public void GetPowerFormTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //string powerFormId = null;
            //var response = instance.GetPowerForm(accountId, powerFormId);
            //Assert.IsInstanceOf<PowerForm> (response, "response is PowerForm");
        }
        
        /// <summary>
        /// Test GetPowerFormData
        /// </summary>
        [Test]
        public void GetPowerFormDataTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string fromDate = null;
            //string toDate = null;
            //string accountId = null;
            //string powerFormId = null;
            //var response = instance.GetPowerFormData(fromDate, toDate, accountId, powerFormId);
            //Assert.IsInstanceOf<PowerFormsFormDataResponse> (response, "response is PowerFormsFormDataResponse");
        }
        
        /// <summary>
        /// Test ListPowerFormSenders
        /// </summary>
        [Test]
        public void ListPowerFormSendersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string startPosition = null;
            //string accountId = null;
            //var response = instance.ListPowerFormSenders(startPosition, accountId);
            //Assert.IsInstanceOf<PowerFormSendersResponse> (response, "response is PowerFormSendersResponse");
        }
        
        /// <summary>
        /// Test ListPowerForms
        /// </summary>
        [Test]
        public void ListPowerFormsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string fromDate = null;
            //string order = null;
            //string orderBy = null;
            //string toDate = null;
            //string accountId = null;
            //var response = instance.ListPowerForms(fromDate, order, orderBy, toDate, accountId);
            //Assert.IsInstanceOf<PowerFormsResponse> (response, "response is PowerFormsResponse");
        }
        
        /// <summary>
        /// Test UpdatePowerForm
        /// </summary>
        [Test]
        public void UpdatePowerFormTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PowerForm powerForm = null;
            //string accountId = null;
            //string powerFormId = null;
            //var response = instance.UpdatePowerForm(powerForm, accountId, powerFormId);
            //Assert.IsInstanceOf<PowerForm> (response, "response is PowerForm");
        }
        
    }

}
